(function() {
  var c, i, iconStack, j, k, len, len1, prop, ref, ref1;

  i = require("./icon");

  iconStack = {
    render: function() {
      with(this){//;
      return _h('svg', {
        style: computedStyle,
        attrs: {
          "version": "1.1",
          "role": label ? 'img' : 'presentation',
          "aria-label": label,
          "width": outerWidth,
          "height": outerHeight,
          "viewBox": box
        }
      }, [
        _h('path', {
          attrs: {
            "d": icon.d,
            "transform": flipped,
            "fill": "currentColor"
          }
        })
      ]);
      return };
    },
    mixins: i.mixins,
    data: i.data,
    mounted: i.mounted,
    props: {},
    computed: {
      isStack: function() {
        return true;
      },
      mergeStyle: function() {
        return {
          left: "0",
          position: "absolute"
        };
      },
      outerWidth: function() {
        return this.$parent.outerWidth;
      },
      outerHeight: function() {
        return this.$parent.outerHeight;
      }
    }
  };

  ref = ["name", "offsetX", "offsetY", "flipH", "flipV", "label", "style", "size", "scale"];
  for (j = 0, len = ref.length; j < len; j++) {
    prop = ref[j];
    iconStack.props[prop] = i.props[prop];
  }

  ref1 = ["processedName", "icon", "box", "aspect", "flipped", "innerHeight", "innerWidth", "widthRatio", "heightRatio"];
  for (k = 0, len1 = ref1.length; k < len1; k++) {
    c = ref1[k];
    iconStack.computed[c] = i.computed[c];
  }

  module.exports = iconStack;

}).call(this);
