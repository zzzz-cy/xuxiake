import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M14.87 4.55L16.4 3l-1.42-1.41-2.42 2.43c-.16-.31-.36-.6-.6-.84a3.9 3.9 0 00-2.19-1.04 7 7 0 00-2.52.08c-.6.13-1.2.3-1.8.46l-.8.22 3.1 1.8-.03.01a7.62 7.62 0 00-4.1 2.64C2.56 8.74 2 10.6 2 13c0 3 1.11 5.3 3 6.83C6.85 21.33 9.35 22 12 22c2.65 0 5.15-.67 7-2.17 1.89-1.52 3-3.82 3-6.83 0-2.42-.59-4.27-1.65-5.65a7.72 7.72 0 00-4.07-2.63 4.93 4.93 0 00-1.41-.17zM7 8h2v2H7V8zm-2 3h2v2H5v-2zm4 3v2H7v-2h2z"
    }
  }]
};
var tangerinrFilled = defineComponent({
  name: "TangerinrFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-tangerinr-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default tangerinrFilled;
//# sourceMappingURL=tangerinr-filled.js.map
