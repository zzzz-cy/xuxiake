import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M7.08 3.02l-.82.56c-1.01.7-1.88 1.57-2.58 2.58l-.56.82-1.65-1.13.57-.83c.83-1.2 1.88-2.25 3.08-3.08l.82-.57 1.14 1.65zM10.24 4.47c.54-.54 1.41-.54 1.95 0l5.25 5.28-.44-1.1a1.5 1.5 0 012.7-1.32l2.38 4.07a7.19 7.19 0 01-1.13 8.71l-.84.85a7.19 7.19 0 01-10.17 0l-5.03-5.04a1.38 1.38 0 011.94-1.94l1.6 1.6.54-.53-3.7-3.7a1.37 1.37 0 111.95-1.94l3.7 3.7.52-.54L6.4 7.52a1.38 1.38 0 011.95-1.95l5.06 5.06.53-.53-3.7-3.7a1.37 1.37 0 010-1.93z"
    }
  }]
};
var waveLeftFilled = defineComponent({
  name: "WaveLeftFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-wave-left-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default waveLeftFilled;
//# sourceMappingURL=wave-left-filled.js.map
