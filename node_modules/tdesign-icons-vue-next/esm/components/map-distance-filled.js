import { _ as _defineProperty } from '../_chunks/dep-931ef437.js';
import { defineComponent, computed } from 'vue';
import renderFn from '../utils/render-fn.js';
import useSizeProps from '../utils/use-size-props.js';
import '../style/css.js';
import '../utils/use-common-classname.js';
import '../utils/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M16 7.5a.5.5 0 011 0c0 .22-.16.55-.49.9l-.01.02-.01-.01c-.33-.36-.49-.69-.49-.91zM8 10.5a.5.5 0 011 0c0 .22-.16.55-.49.9l-.01.02-.01-.01c-.33-.36-.49-.69-.49-.91z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M22 2v20H2V2h20zm-5.69 8.84l.19.12.19-.12a6.1 6.1 0 001.3-1.08A3.47 3.47 0 0019 7.5a2.5 2.5 0 10-5 0c0 1 .6 1.8 1.01 2.26a6.08 6.08 0 001.3 1.08zm-8 2.99l.19.13a28.33 28.33 0 01.66-.46 5.62 5.62 0 00.83-.74A3.47 3.47 0 0011 10.5a2.5 2.5 0 10-5 0c0 1 .6 1.8 1.01 2.26a6.08 6.08 0 001.3 1.07zm5.6 1.96l5.88-2.2-.7-1.88-5.88 2.2.7 1.88zm-8 3l5.88-2.2-.7-1.88-5.88 2.2.7 1.88z"
    }
  }]
};
var mapDistanceFilled = defineComponent({
  name: "MapDistanceFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = computed(() => props.size);
    var {
      className,
      style
    } = useSizeProps(propsSize);
    var finalCls = computed(() => ["t-icon", "t-icon-map-distance-filled", className.value]);
    var finalStyle = computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => renderFn(element, finalProps.value);
  }
});

export default mapDistanceFilled;
//# sourceMappingURL=map-distance-filled.js.map
