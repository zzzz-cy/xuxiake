'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-304d0f8c.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M5.65 4C6.17 2.3 7.97 1 10 1a5.19 5.19 0 014.05 2H15a3.5 3.5 0 013.5 3.5v.01c0 .24 0 .87-.12 1.49h1.12a2 2 0 011.47.56c.42.43.53.98.53 1.46V18c0 .48-.11 1.03-.53 1.46a2 2 0 01-1.47.54h-2v1c0 .48-.11 1.03-.53 1.46a2 2 0 01-1.47.54h-9a2 2 0 01-1.47-.54A2.01 2.01 0 014.5 21v-5.17a3 3 0 01-2-2.83V7a3 3 0 013-3h.15zm11.85 6v8h2v-7.98V10h-2zm-1.18-2l.08-.28a6 6 0 00.1-1.22c0-.83-.67-1.5-1.5-1.5h-2.12l-.27-.55A3.2 3.2 0 0010 3C8.46 3 7.49 4.15 7.49 5v1h-2a1 1 0 00-1 1v6a1 1 0 102 0V8h9.82z"
    }
  }]
};
var beerFilled = vue.defineComponent({
  name: "BeerFilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps['default'](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-beer-filled", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn['default'](element, finalProps.value);
  }
});

exports.default = beerFilled;
//# sourceMappingURL=beer-filled.js.map
