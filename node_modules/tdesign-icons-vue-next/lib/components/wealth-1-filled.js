'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-304d0f8c.js');
var vue = require('vue');
var utils_renderFn = require('../utils/render-fn.js');
var utils_useSizeProps = require('../utils/use-size-props.js');
require('../utils/use-common-classname.js');
require('../utils/config-context.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M16.55 8.98A16.75 16.75 0 0110.5 10c-2.26 0-4.4-.36-6.05-1.02-.5-.2-1-.45-1.45-.74v3.26c0 1.66 3.36 3 7.5 3 1.1 0 2.15-.1 3.1-.27a6.49 6.49 0 014.28-2.2c.08-.17.12-.35.12-.53V8.24c-.45.3-.95.54-1.45.74zM10.5 16.5c.63 0 1.24-.03 1.84-.08a6.5 6.5 0 00.12 4.48c-.63.06-1.28.1-1.96.1C6.36 21 3 19.66 3 18v-3.26c.45.3.95.54 1.45.74 1.65.66 3.79 1.02 6.05 1.02zM10.5 8C6.36 8 3 6.66 3 5s3.36-3 7.5-3c3.1 0 5.77.76 6.91 1.83.38.36.59.76.59 1.17 0 1.66-3.36 3-7.5 3zM18.5 23a4.5 4.5 0 110-9 4.5 4.5 0 010 9z"
    }
  }]
};
var wealth1Filled = vue.defineComponent({
  name: "Wealth1FilledIcon",
  props: {
    size: {
      type: String
    },
    onClick: {
      type: Function
    }
  },
  setup(props, _ref) {
    var {
      attrs
    } = _ref;
    var propsSize = vue.computed(() => props.size);
    var {
      className,
      style
    } = utils_useSizeProps['default'](propsSize);
    var finalCls = vue.computed(() => ["t-icon", "t-icon-wealth-1-filled", className.value]);
    var finalStyle = vue.computed(() => _objectSpread(_objectSpread({}, style.value), attrs.style));
    var finalProps = vue.computed(() => ({
      class: finalCls.value,
      style: finalStyle.value,
      onClick: e => {
        var _props$onClick;
        return (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, {
          e
        });
      }
    }));
    return () => utils_renderFn['default'](element, finalProps.value);
  }
});

exports.default = wealth1Filled;
//# sourceMappingURL=wealth-1-filled.js.map
