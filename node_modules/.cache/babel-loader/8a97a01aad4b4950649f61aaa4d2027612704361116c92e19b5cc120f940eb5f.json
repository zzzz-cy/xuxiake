{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math.js\";\nimport { rotateRadians } from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n    sinRadius = sin(radius),\n    step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\nexport default function () {\n  var center = constant([0, 0]),\n    radius = constant(90),\n    precision = constant(2),\n    ring,\n    rotate,\n    stream = {\n      point: point\n    };\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n  function circle() {\n    var c = center.apply(this, arguments),\n      r = radius.apply(this, arguments) * radians,\n      p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n  return circle;\n}","map":{"version":3,"names":["cartesian","cartesianNormalizeInPlace","spherical","constant","acos","cos","degrees","epsilon","radians","sin","tau","rotateRadians","circleStream","stream","radius","delta","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","point","t","center","precision","ring","rotate","x","y","push","circle","c","apply","arguments","r","p","invert","type","coordinates","_","length"],"sources":["D:/desk/数据可视化/project/xuxiake/node_modules/d3-geo/src/circle.js"],"sourcesContent":["import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\r\nimport constant from \"./constant.js\";\r\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\r\nimport {rotateRadians} from \"./rotation.js\";\r\n\r\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\r\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\r\n  if (!delta) return;\r\n  var cosRadius = cos(radius),\r\n      sinRadius = sin(radius),\r\n      step = direction * delta;\r\n  if (t0 == null) {\r\n    t0 = radius + direction * tau;\r\n    t1 = radius - step / 2;\r\n  } else {\r\n    t0 = circleRadius(cosRadius, t0);\r\n    t1 = circleRadius(cosRadius, t1);\r\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\r\n  }\r\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\r\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\r\n    stream.point(point[0], point[1]);\r\n  }\r\n}\r\n\r\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\r\nfunction circleRadius(cosRadius, point) {\r\n  point = cartesian(point), point[0] -= cosRadius;\r\n  cartesianNormalizeInPlace(point);\r\n  var radius = acos(-point[1]);\r\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\r\n}\r\n\r\nexport default function() {\r\n  var center = constant([0, 0]),\r\n      radius = constant(90),\r\n      precision = constant(2),\r\n      ring,\r\n      rotate,\r\n      stream = {point: point};\r\n\r\n  function point(x, y) {\r\n    ring.push(x = rotate(x, y));\r\n    x[0] *= degrees, x[1] *= degrees;\r\n  }\r\n\r\n  function circle() {\r\n    var c = center.apply(this, arguments),\r\n        r = radius.apply(this, arguments) * radians,\r\n        p = precision.apply(this, arguments) * radians;\r\n    ring = [];\r\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\r\n    circleStream(stream, r, p, 1);\r\n    c = {type: \"Polygon\", coordinates: [ring]};\r\n    ring = rotate = null;\r\n    return c;\r\n  }\r\n\r\n  circle.center = function(_) {\r\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\r\n  };\r\n\r\n  circle.radius = function(_) {\r\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\r\n  };\r\n\r\n  circle.precision = function(_) {\r\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\r\n  };\r\n\r\n  return circle;\r\n}\r\n"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,yBAAyB,EAAEC,SAAS,QAAO,gBAAgB;AAC9E,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAAQC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,GAAG,EAAEC,GAAG,QAAO,WAAW;AACxE,SAAQC,aAAa,QAAO,eAAe;;AAE3C;AACA,OAAO,SAASC,YAAYA,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,EAAE,EAAEC,EAAE,EAAE;EACrE,IAAI,CAACH,KAAK,EAAE;EACZ,IAAII,SAAS,GAAGd,GAAG,CAACS,MAAM,CAAC;IACvBM,SAAS,GAAGX,GAAG,CAACK,MAAM,CAAC;IACvBO,IAAI,GAAGL,SAAS,GAAGD,KAAK;EAC5B,IAAIE,EAAE,IAAI,IAAI,EAAE;IACdA,EAAE,GAAGH,MAAM,GAAGE,SAAS,GAAGN,GAAG;IAC7BQ,EAAE,GAAGJ,MAAM,GAAGO,IAAI,GAAG,CAAC;EACxB,CAAC,MAAM;IACLJ,EAAE,GAAGK,YAAY,CAACH,SAAS,EAAEF,EAAE,CAAC;IAChCC,EAAE,GAAGI,YAAY,CAACH,SAAS,EAAED,EAAE,CAAC;IAChC,IAAIF,SAAS,GAAG,CAAC,GAAGC,EAAE,GAAGC,EAAE,GAAGD,EAAE,GAAGC,EAAE,EAAED,EAAE,IAAID,SAAS,GAAGN,GAAG;EAC9D;EACA,KAAK,IAAIa,KAAK,EAAEC,CAAC,GAAGP,EAAE,EAAED,SAAS,GAAG,CAAC,GAAGQ,CAAC,GAAGN,EAAE,GAAGM,CAAC,GAAGN,EAAE,EAAEM,CAAC,IAAIH,IAAI,EAAE;IAClEE,KAAK,GAAGrB,SAAS,CAAC,CAACiB,SAAS,EAAE,CAACC,SAAS,GAAGf,GAAG,CAACmB,CAAC,CAAC,EAAE,CAACJ,SAAS,GAAGX,GAAG,CAACe,CAAC,CAAC,CAAC,CAAC;IACxEX,MAAM,CAACU,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC;AACF;;AAEA;AACA,SAASD,YAAYA,CAACH,SAAS,EAAEI,KAAK,EAAE;EACtCA,KAAK,GAAGvB,SAAS,CAACuB,KAAK,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,IAAIJ,SAAS;EAC/ClB,yBAAyB,CAACsB,KAAK,CAAC;EAChC,IAAIT,MAAM,GAAGV,IAAI,CAAC,CAACmB,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,OAAO,CAAC,CAAC,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAACT,MAAM,GAAGA,MAAM,IAAIJ,GAAG,GAAGH,OAAO,IAAIG,GAAG;AACnE;AAEA,eAAe,YAAW;EACxB,IAAIe,MAAM,GAAGtB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzBW,MAAM,GAAGX,QAAQ,CAAC,EAAE,CAAC;IACrBuB,SAAS,GAAGvB,QAAQ,CAAC,CAAC,CAAC;IACvBwB,IAAI;IACJC,MAAM;IACNf,MAAM,GAAG;MAACU,KAAK,EAAEA;IAAK,CAAC;EAE3B,SAASA,KAAKA,CAACM,CAAC,EAAEC,CAAC,EAAE;IACnBH,IAAI,CAACI,IAAI,CAACF,CAAC,GAAGD,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,CAAC;IAC3BD,CAAC,CAAC,CAAC,CAAC,IAAIvB,OAAO,EAAEuB,CAAC,CAAC,CAAC,CAAC,IAAIvB,OAAO;EAClC;EAEA,SAAS0B,MAAMA,CAAA,EAAG;IAChB,IAAIC,CAAC,GAAGR,MAAM,CAACS,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;MACjCC,CAAC,GAAGtB,MAAM,CAACoB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,GAAG3B,OAAO;MAC3C6B,CAAC,GAAGX,SAAS,CAACQ,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,GAAG3B,OAAO;IAClDmB,IAAI,GAAG,EAAE;IACTC,MAAM,GAAGjB,aAAa,CAAC,CAACsB,CAAC,CAAC,CAAC,CAAC,GAAGzB,OAAO,EAAE,CAACyB,CAAC,CAAC,CAAC,CAAC,GAAGzB,OAAO,EAAE,CAAC,CAAC,CAAC8B,MAAM;IAClE1B,YAAY,CAACC,MAAM,EAAEuB,CAAC,EAAEC,CAAC,EAAE,CAAC,CAAC;IAC7BJ,CAAC,GAAG;MAACM,IAAI,EAAE,SAAS;MAAEC,WAAW,EAAE,CAACb,IAAI;IAAC,CAAC;IAC1CA,IAAI,GAAGC,MAAM,GAAG,IAAI;IACpB,OAAOK,CAAC;EACV;EAEAD,MAAM,CAACP,MAAM,GAAG,UAASgB,CAAC,EAAE;IAC1B,OAAON,SAAS,CAACO,MAAM,IAAIjB,MAAM,GAAG,OAAOgB,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAACsC,CAAC,CAAC,CAAC,CAAC,EAAE,CAACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAET,MAAM,IAAIP,MAAM;EAC9G,CAAC;EAEDO,MAAM,CAAClB,MAAM,GAAG,UAAS2B,CAAC,EAAE;IAC1B,OAAON,SAAS,CAACO,MAAM,IAAI5B,MAAM,GAAG,OAAO2B,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGtC,QAAQ,CAAC,CAACsC,CAAC,CAAC,EAAET,MAAM,IAAIlB,MAAM;EAClG,CAAC;EAEDkB,MAAM,CAACN,SAAS,GAAG,UAASe,CAAC,EAAE;IAC7B,OAAON,SAAS,CAACO,MAAM,IAAIhB,SAAS,GAAG,OAAOe,CAAC,KAAK,UAAU,GAAGA,CAAC,GAAGtC,QAAQ,CAAC,CAACsC,CAAC,CAAC,EAAET,MAAM,IAAIN,SAAS;EACxG,CAAC;EAED,OAAOM,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}