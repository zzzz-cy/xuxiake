{"ast":null,"code":"//import { color } from \"d3\";\nimport * as echarts from \"echarts\";\nimport { GridComponent } from 'echarts/components';\nimport { CalendarComponent } from 'echarts/components';\nimport { VisualMapComponent } from 'echarts/components';\nimport { TooltipComponent } from 'echarts/components';\nimport { SVGRenderer, CanvasRenderer } from 'echarts/renderers';\n//import $ from 'jquery';\n\n/*const clickHandler = () => {\r\n  MessagePlugin.success('操作');\r\n};*/\n\n//const title = '标题';\n//const infoMessage = `卡片内容，以描述性为主，可以是文字、图片或图文组合的形式。按业务需求进行自定义组合。`;\n\necharts.use([SVGRenderer, CanvasRenderer, TooltipComponent, VisualMapComponent, CalendarComponent, GridComponent]);\nexport default {\n  name: 'PickView',\n  data() {\n    return {\n      title: '徐霞客游历各地时间表',\n      cell_ratio: 0.026836\n    };\n  },\n  mounted() {\n    this.createCalendar();\n    this.createGantt();\n  },\n  watch: {\n    //监听语言是否变化，若变化调用createPieChart()\n    '$i18n.locale': {\n      handler() {\n        // 处理语言变化的逻辑\n        this.handleResize();\n      },\n      immediate: false // 立即执行一次回调函数\n    }\n  },\n  computed: {\n    dataAxis() {\n      return ['江苏', '浙江', '安徽', '福建', '江西', '湖北', '湖南', '广西', '贵州', '云南'];\n    }\n  },\n  methods: {\n    handleResize() {\n      //let myChart = this.$echarts.init(document.getElementById(\"calendar\"), null, { renderer: 'svg' });\n      //let progressChart = echarts.init(this.$refs.ganttChart, null, { renderer: 'svg' });\n      this.createCalendar();\n      this.createGantt();\n    },\n    createCalendar() {\n      let histogram = echarts.init(document.getElementById(\"histogram\"), null, {\n        renderer: \"svg\"\n      });\n\n      // 数据\n      const provinces = [\"云南省\", \"广西壮族自治区\", \"湖南省\", \"江西省\", \"贵州省\", \"浙江省\", \"福建省\", \"安徽省\", \"河南省\", \"山西省\", \"湖北省\", \"陕西省\", \"江苏省\", \"河北省\", \"上海市\"];\n      const positiveWords = [4216, 3874, 962, 640, 639, 454, 242, 173, 98, 80, 53, 32, 10, 8, 4];\n      const negativeWords = [1029, 1055, 302, 156, 167, 112, 53, 34, 18, 13, 8, 10, 4, 2, 0];\n\n      // 数据预处理：按总量排序\n      const sortedData = provinces.map((province, index) => ({\n        province,\n        positive: positiveWords[index],\n        negative: negativeWords[index],\n        total: positiveWords[index] + negativeWords[index]\n      })).sort((a, b) => a.total - b.total); // 总量从大到小排序\n\n      const sortedProvinces = sortedData.map(item => item.province);\n      const sortedPositiveWords = sortedData.map(item => item.positive);\n      const sortedNegativeWords = sortedData.map(item => item.negative);\n\n      // 配置项\n      let option = {\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        legend: {\n          data: [\"消极情感词\", \"积极情感词\"]\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"value\",\n          boundaryGap: [0, 0.01]\n        },\n        yAxis: {\n          type: \"category\",\n          data: sortedProvinces // 按总量排序的省份\n        },\n        series: [{\n          name: \"消极情感词\",\n          type: \"bar\",\n          stack: \"总量\",\n          data: sortedNegativeWords,\n          // 按总量排序的消极词数据\n          itemStyle: {\n            color: \"#9daeb6\"\n          }\n        }, {\n          name: \"积极情感词\",\n          type: \"bar\",\n          stack: \"总量\",\n          data: sortedPositiveWords,\n          // 按总量排序的积极词数据\n          itemStyle: {\n            color: \"#f0b8ab\"\n          }\n        }]\n      };\n\n      // 设置图表\n      histogram.setOption(option);\n\n      // 监听窗口大小变化\n      window.addEventListener(\"resize\", function () {\n        histogram.resize();\n      });\n    },\n    createGantt() {\n      let progressChart = echarts.init(this.$refs.ganttChart, null, {\n        renderer: 'svg'\n      });\n      let dataAxis = this.dataAxis;\n      let option = {\n        tooltip: {\n          trigger: 'item',\n          /*formatter(params) {\r\n            if (params[1].data && params[0].data) {\r\n              return `<div>` + '开始时间' + `：` + `${params[1].data}` + `</div>` + `<div>` + '结束时间' + `：` + `${params[0].data}` + `</div>`;\r\n            } else {\r\n              return '';\r\n            }\r\n          },*/\n          axisPointer: {\n            type: 'cross',\n            label: {\n              show: true\n            },\n            shadowStyle: {\n              color: 'rgba(177,243,173,0.2)'\n            }\n          }\n        },\n        grid: {\n          containLabel: true,\n          show: false,\n          right: 10,\n          left: 10,\n          bottom: 20,\n          top: 10,\n          backgroundColor: 'transparent'\n        },\n        xAxis: {\n          type: 'time',\n          position: 'top',\n          axisTick: {\n            show: true\n          },\n          axisLine: {\n            show: true\n          },\n          splitLine: {\n            show: false\n          },\n          min: new Date('1613-03-15').getTime(),\n          // 设置 x 轴最小值\n          max: new Date('1639-12-31').getTime(),\n          // 设置 x 轴最大值\n          axisLabel: {\n            formatter: function (value) {\n              const date = new Date(value);\n              return date.toLocaleDateString('zh-CN', {\n                year: 'numeric'\n              });\n            }\n          }\n        },\n        yAxis: {\n          inverse: true,\n          axisTick: {\n            show: true\n          },\n          axisLine: {\n            show: true\n          },\n          splitLine: {\n            show: true\n          },\n          axisPointer: {\n            type: 'shadow'\n          },\n          dataZoom: [{\n            type: 'inside'\n          }],\n          data: dataAxis\n        },\n        series: [\n        //1\n        {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          barWidth: 10,\n          itemStyle: {\n            color: function (params) {\n              const colors = ['rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', 'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', 'rgba(35,118,183,0.3)'];\n              return colors[params.dataIndex];\n            },\n            borderColor: 'transparent',\n            borderWidth: 1\n          },\n          zlevel: 1,\n          z: 10,\n          data: [null, '1613-03-31', '1616-01-26', '1616-02-21', '1618-08-18', '1623-03-11', '1637-01-11', '1637-04-16', '1638-03-11', '1638-05-10'] // 结束时间\n        }, {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          itemStyle: {\n            borderColor: 'transparent',\n            color: '#e4e0cf'\n          },\n          zlevel: 1,\n          z: 20,\n          data: [null, '1613-04-14', '1616-02-11', '1616-03-20', '1618-08-23', '1623-04-09', '1637-04-16', '1638-03-10', '1638-05-09', '1638-07-15'] // 开始时间\n        },\n        //2\n        {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          barWidth: 10,\n          itemStyle: {\n            color: function (params) {\n              const colors = ['rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', 'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', 'rgba(35,118,183,0.3)'];\n              return colors[params.dataIndex];\n            },\n            borderColor: 'transparent',\n            borderWidth: 1\n          },\n          zlevel: 2,\n          z: 10,\n          data: ['1614-01-01', '1620-05-06', '1618-09-04', '1620-06-08', '1636-10-17', null, null, '1638-05-10', '1638-08-26', '1638-08-16'] // 结束时间\n        }, {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          itemStyle: {\n            borderColor: 'transparent',\n            color: '#e4e0cf'\n          },\n          zlevel: 2,\n          z: 20,\n          data: ['1615-12-31', '1620-05-23', '1618-09-06', '1620-06-11', '1637-01-11', null, null, '1638-05-10', '1638-09-01', '1638-08-26'] // 开始时间\n        },\n        //3\n        {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          barWidth: 10,\n          itemStyle: {\n            color: function (params) {\n              const colors = ['rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', 'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', 'rgba(35,118,183,0.3)'];\n              return colors[params.dataIndex];\n            },\n            borderColor: 'transparent',\n            borderWidth: 1\n          },\n          zlevel: 3,\n          z: 10,\n          data: [\n          //'1624-01-01','1630-07-17','1628-03-12',null,null,null,'1638-08-07',null,'1638-09-01'\n          '1624-01-01', '1630-07-17', null, '1628-03-12', null, null, null, '1638-08-07', null, '1638-09-01'] // 结束时间\n        }, {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          itemStyle: {\n            borderColor: 'transparent',\n            color: '#e4e0cf'\n          },\n          zlevel: 3,\n          z: 20,\n          data: [\n          //'1624-12-31','1630-07-30','1628-04-05',null,null,null,'1638-08-16',null,'1639-03-09'\n          '1624-12-31', '1630-07-30', null, '1628-04-05', null, null, null, '1638-08-16', null, '1639-03-09'] // 开始时间\n        },\n        //4\n        {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          barWidth: 10,\n          itemStyle: {\n            color: function (params) {\n              const colors = ['rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', 'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', 'rgba(35,118,183,0.3)'];\n              return colors[params.dataIndex];\n            },\n            borderColor: 'transparent',\n            borderWidth: 1\n          },\n          zlevel: 4,\n          z: 10,\n          data: [\n          //'1636-09-19','1632-03-14','1630-08-02',null,null,null,'1639-03-18',null,'1639-03-26'\n          '1636-09-19', '1632-03-14', null, '1630-08-02', null, null, null, '1639-03-18', null, '1639-03-26'] // 结束时间\n        }, {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          itemStyle: {\n            borderColor: 'transparent',\n            color: '#e4e0cf'\n          },\n          zlevel: 4,\n          z: 20,\n          data: [\n          //'1636-09-25','1632-05-08','1630-08-19',null,null,null,'1639-03-22',null,'1639-09-26'\n          '1636-09-25', '1632-05-08', null, '1630-08-19', null, null, null, '1639-03-22', null, '1639-09-14'] // 开始时间\n        },\n        //5\n        {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          barWidth: 10,\n          itemStyle: {\n            color: function (params) {\n              const colors = ['rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', 'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', 'rgba(35,118,183,0.3)'];\n              return colors[params.dataIndex];\n            },\n            borderColor: 'transparent',\n            borderWidth: 1\n          },\n          zlevel: 5,\n          z: 10,\n          data: [null, '1636-09-25', null, null, null, null, null, null, null, null] // 结束时间\n        }, {\n          name: '持续时间',\n          type: 'bar',\n          stack: 'duration',\n          itemStyle: {\n            borderColor: 'transparent',\n            color: '#e4e0cf'\n          },\n          zlevel: 5,\n          z: 20,\n          data: [null, '1636-10-16', null, null, null, null, null, null, null, null] // 开始时间\n        }]\n      };\n      progressChart.setOption(option);\n\n      // Enable data zoom when user click bar.\n      const zoomSize = 6;\n      progressChart.on('click', function (params) {\n        const shouldntclick = 1;\n        if (shouldntclick) {\n          return;\n        }\n        console.log(dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)]);\n        progressChart.dispatchAction({\n          type: 'dataZoom',\n          startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],\n          endValue:\n          // eslint-disable-next-line\n          dataAxis[Math.min(params.dataIndex + zoomSize / 2, data.length - 1)]\n        });\n      });\n      // 浏览器窗口大小变化，图表大小自适应\n      window.addEventListener('resize', function () {\n        progressChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","GridComponent","CalendarComponent","VisualMapComponent","TooltipComponent","SVGRenderer","CanvasRenderer","use","name","data","title","cell_ratio","mounted","createCalendar","createGantt","watch","handler","handleResize","immediate","computed","dataAxis","methods","histogram","init","document","getElementById","renderer","provinces","positiveWords","negativeWords","sortedData","map","province","index","positive","negative","total","sort","a","b","sortedProvinces","item","sortedPositiveWords","sortedNegativeWords","option","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","stack","itemStyle","color","setOption","window","addEventListener","resize","progressChart","$refs","ganttChart","label","show","shadowStyle","top","backgroundColor","position","axisTick","axisLine","splitLine","min","Date","getTime","max","axisLabel","formatter","value","date","toLocaleDateString","year","inverse","dataZoom","barWidth","params","colors","dataIndex","borderColor","borderWidth","zlevel","z","zoomSize","on","shouldntclick","console","log","Math","dispatchAction","startValue","endValue","length"],"sources":["D:\\desk\\数据可视化\\project\\xuxiake\\src\\components\\PageThree.vue"],"sourcesContent":["<template>\r\n  <div style=\"width:100%\">\r\n    <div style=\"display: flex; height: 136px;\">\r\n      <div class=\"title\" style=\"width: 512px;visibility: hidden;\">\r\n        <p>{{ title }}</p>\r\n      </div>\r\n      <t-divider layout=\"vertical\" style=\"height: 90%;visibility: hidden;\"></t-divider>\r\n      <div class=\"note-container\">\r\n        <div>\r\n          <!--<p class=\"note\">{{ '茶叶，其实是一年四季皆可采摘制作的。' }}</p>\r\n          <p class=\"note\">{{ '主要的采摘季节有春、夏、秋这三个季节，冬季主要预留给茶树恢复调养。' }}</p>\r\n          <p class=\"note\">{{ '其中，3-5月采制的为春茶；5-7月采制的为夏茶；8-10月采制的为秋茶；10月下旬采制的为冬茶。由于不同的茶类，对茶叶原料的嫩度要求不同，因此采摘时间也会有所区别。相对嫩的茶叶，多为春茶、秋茶；粗大的茶叶，多为夏茶、秋茶。' }}</p>\r\n          -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"display: flex;width:100%\">\r\n      <div ref=\"ganttChart\" class=\"gantt\" ></div>\r\n      <div style=\"display: flex; justify-content: center; align-items: center; \"><img :src=\"require('../assets/img/各省份旅行甘特图.png')\" width=\"50%\" /></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n//import { color } from \"d3\";\r\nimport * as echarts from \"echarts\";\r\nimport { GridComponent } from 'echarts/components';\r\nimport { CalendarComponent } from 'echarts/components';\r\nimport { VisualMapComponent } from 'echarts/components';\r\nimport { TooltipComponent } from 'echarts/components';\r\nimport { SVGRenderer, CanvasRenderer } from 'echarts/renderers';\r\n//import $ from 'jquery';\r\n\r\n\r\n/*const clickHandler = () => {\r\n  MessagePlugin.success('操作');\r\n};*/\r\n\r\n//const title = '标题';\r\n//const infoMessage = `卡片内容，以描述性为主，可以是文字、图片或图文组合的形式。按业务需求进行自定义组合。`;\r\n\r\n\r\necharts.use([SVGRenderer, CanvasRenderer,TooltipComponent,VisualMapComponent,CalendarComponent,GridComponent]);\r\n\r\nexport default {\r\n  name: 'PickView',\r\n  data(){\r\n    return{\r\n      title:'徐霞客游历各地时间表',\r\n      cell_ratio : 0.026836,\r\n      \r\n    };\r\n  },\r\n  mounted() {\r\n    this.createCalendar();\r\n    this.createGantt();\r\n  },\r\n  watch: {\r\n  //监听语言是否变化，若变化调用createPieChart()\r\n  '$i18n.locale': {\r\n    handler() {\r\n      // 处理语言变化的逻辑\r\n      this.handleResize()\r\n    },\r\n    immediate: false // 立即执行一次回调函数\r\n  }\r\n},\r\n  computed:{\r\n    dataAxis(){\r\n      return ['江苏','浙江','安徽','福建','江西','湖北','湖南','广西','贵州','云南'];\r\n    },\r\n    \r\n  },\r\n\r\n  methods: {\r\n    handleResize(){\r\n      //let myChart = this.$echarts.init(document.getElementById(\"calendar\"), null, { renderer: 'svg' });\r\n      //let progressChart = echarts.init(this.$refs.ganttChart, null, { renderer: 'svg' });\r\n      this.createCalendar();\r\n      this.createGantt();\r\n    },\r\n    \r\n    createCalendar() {\r\n      let histogram = echarts.init(document.getElementById(\"histogram\"), null, {\r\n        renderer: \"svg\",\r\n      });\r\n\r\n      // 数据\r\n      const provinces = [\r\n        \"云南省\",\r\n        \"广西壮族自治区\",\r\n        \"湖南省\",\r\n        \"江西省\",\r\n        \"贵州省\",\r\n        \"浙江省\",\r\n        \"福建省\",\r\n        \"安徽省\",\r\n        \"河南省\",\r\n        \"山西省\",\r\n        \"湖北省\",\r\n        \"陕西省\",\r\n        \"江苏省\",\r\n        \"河北省\",\r\n        \"上海市\",\r\n      ];\r\n      const positiveWords = [4216, 3874, 962, 640, 639, 454, 242, 173, 98, 80, 53, 32, 10, 8, 4];\r\n      const negativeWords = [1029, 1055, 302, 156, 167, 112, 53, 34, 18, 13, 8, 10, 4, 2, 0];\r\n\r\n      // 数据预处理：按总量排序\r\n      const sortedData = provinces\r\n        .map((province, index) => ({\r\n          province,\r\n          positive: positiveWords[index],\r\n          negative: negativeWords[index],\r\n          total: positiveWords[index] + negativeWords[index],\r\n        }))\r\n        .sort((a, b) => a.total - b.total); // 总量从大到小排序\r\n\r\n      const sortedProvinces = sortedData.map(item => item.province);\r\n      const sortedPositiveWords = sortedData.map(item => item.positive);\r\n      const sortedNegativeWords = sortedData.map(item => item.negative);\r\n\r\n      // 配置项\r\n      let option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"消极情感词\", \"积极情感词\"],\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.01],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: sortedProvinces, // 按总量排序的省份\r\n        },\r\n        series: [\r\n          {\r\n            name: \"消极情感词\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            data: sortedNegativeWords, // 按总量排序的消极词数据\r\n            itemStyle: {\r\n              color: \"#9daeb6\",\r\n            },\r\n          },\r\n          {\r\n            name: \"积极情感词\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            data: sortedPositiveWords, // 按总量排序的积极词数据\r\n            itemStyle: {\r\n              color: \"#f0b8ab\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      // 设置图表\r\n      histogram.setOption(option);\r\n\r\n      // 监听窗口大小变化\r\n      window.addEventListener(\"resize\", function () {\r\n        histogram.resize();\r\n      });\r\n    },\r\n\r\n\r\n\r\n\r\n    createGantt() {\r\n      let progressChart = echarts.init(this.$refs.ganttChart, null, { renderer: 'svg' });\r\n      let dataAxis = this.dataAxis;\r\n      let option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          /*formatter(params) {\r\n            if (params[1].data && params[0].data) {\r\n              return `<div>` + '开始时间' + `：` + `${params[1].data}` + `</div>` + `<div>` + '结束时间' + `：` + `${params[0].data}` + `</div>`;\r\n            } else {\r\n              return '';\r\n            }\r\n          },*/\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              show: true\r\n            },\r\n            shadowStyle: {\r\n              color: 'rgba(177,243,173,0.2)'\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          containLabel: true,\r\n          show: false,\r\n          right: 10,\r\n          left: 10,\r\n          bottom: 20,\r\n          top: 10,\r\n          backgroundColor: 'transparent'\r\n        },\r\n        xAxis: {\r\n          type: 'time',\r\n          position: 'top', \r\n          axisTick: {\r\n            show: true\r\n          },\r\n          axisLine: {\r\n            show: true\r\n          },\r\n          splitLine: {\r\n            show: false\r\n          },\r\n          min: new Date('1613-03-15').getTime(), // 设置 x 轴最小值\r\n          max: new Date('1639-12-31').getTime(), // 设置 x 轴最大值\r\n          axisLabel: {\r\n            formatter: function(value) {\r\n              const date = new Date(value);\r\n              return date.toLocaleDateString('zh-CN', { year: 'numeric' });\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          inverse: true, \r\n          axisTick: {\r\n            show: true\r\n          },\r\n          axisLine: {\r\n            show: true\r\n          },\r\n          splitLine: {\r\n            show: true\r\n          },\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          dataZoom: [\r\n            {\r\n              type: 'inside'\r\n            }\r\n          ],\r\n          data: dataAxis,\r\n        },\r\n        series: [\r\n//1\r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              color: function(params) {\r\n                const colors = [\r\n                  'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n                  'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', \r\n                  'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', \r\n                  'rgba(35,118,183,0.3)',\r\n                ];\r\n                return colors[params.dataIndex];\r\n              },\r\n              borderColor: 'transparent',\r\n              borderWidth: 1\r\n            },\r\n            zlevel: 1,\r\n            z:10,\r\n            data: [\r\n              null,'1613-03-31','1616-01-26','1616-02-21','1618-08-18','1623-03-11','1637-01-11','1637-04-16','1638-03-11','1638-05-10'\r\n            ] // 结束时间\r\n          },          \r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            itemStyle: {\r\n              borderColor: 'transparent',\r\n              color: '#e4e0cf'\r\n            },\r\n            zlevel: 1,\r\n            z: 20,\r\n            data: [\r\n              null,'1613-04-14','1616-02-11','1616-03-20','1618-08-23','1623-04-09','1637-04-16','1638-03-10','1638-05-09','1638-07-15'\r\n            ] // 开始时间\r\n          },\r\n//2\r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              color: function(params) {\r\n                const colors = [\r\n                  'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n                  'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', \r\n                  'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', \r\n                  'rgba(35,118,183,0.3)',\r\n                ];\r\n                return colors[params.dataIndex];\r\n              },\r\n              borderColor: 'transparent',\r\n              borderWidth: 1\r\n            },\r\n            zlevel: 2,\r\n            z:10,\r\n            data: [\r\n            '1614-01-01','1620-05-06','1618-09-04','1620-06-08','1636-10-17',null,null,'1638-05-10','1638-08-26','1638-08-16'\r\n            ] // 结束时间\r\n          },          \r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            itemStyle: {\r\n              borderColor: 'transparent',\r\n              color: '#e4e0cf'\r\n            },\r\n            zlevel: 2,\r\n            z: 20,\r\n            data: [\r\n            '1615-12-31','1620-05-23','1618-09-06','1620-06-11','1637-01-11',null,null,'1638-05-10','1638-09-01','1638-08-26'\r\n              \r\n            ] // 开始时间\r\n          },\r\n//3\r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              color: function(params) {\r\n                const colors = [\r\n                  'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n                  'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', \r\n                  'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', \r\n                  'rgba(35,118,183,0.3)',\r\n                ];\r\n                return colors[params.dataIndex];\r\n              },\r\n              borderColor: 'transparent',\r\n              borderWidth: 1\r\n            },\r\n            zlevel: 3,\r\n            z:10,\r\n            data: [\r\n            //'1624-01-01','1630-07-17','1628-03-12',null,null,null,'1638-08-07',null,'1638-09-01'\r\n            '1624-01-01','1630-07-17',null,'1628-03-12',null,null,null,'1638-08-07',null,'1638-09-01'\r\n\r\n            ] // 结束时间\r\n          },          \r\n          \r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            itemStyle: {\r\n              borderColor: 'transparent',\r\n              color: '#e4e0cf'\r\n            },\r\n            zlevel: 3,\r\n            z: 20,\r\n            data: [\r\n              //'1624-12-31','1630-07-30','1628-04-05',null,null,null,'1638-08-16',null,'1639-03-09'\r\n              '1624-12-31','1630-07-30',null,'1628-04-05',null,null,null,'1638-08-16',null,'1639-03-09'\r\n\r\n\r\n            ] // 开始时间\r\n          },\r\n//4\r\n{\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              color: function(params) {\r\n                const colors = [\r\n                  'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n                  'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', \r\n                  'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', \r\n                  'rgba(35,118,183,0.3)',\r\n                ];\r\n                return colors[params.dataIndex];\r\n              },\r\n              borderColor: 'transparent',\r\n              borderWidth: 1\r\n            },\r\n            zlevel: 4,\r\n            z:10,\r\n            data: [\r\n            //'1636-09-19','1632-03-14','1630-08-02',null,null,null,'1639-03-18',null,'1639-03-26'\r\n            '1636-09-19','1632-03-14',null,'1630-08-02',null,null,null,'1639-03-18',null,'1639-03-26'\r\n            ] // 结束时间\r\n          },          \r\n          \r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            itemStyle: {\r\n              borderColor: 'transparent',\r\n              color: '#e4e0cf'\r\n            },\r\n            zlevel: 4,\r\n            z: 20,\r\n            data: [\r\n              //'1636-09-25','1632-05-08','1630-08-19',null,null,null,'1639-03-22',null,'1639-09-26'\r\n              '1636-09-25','1632-05-08',null,'1630-08-19',null,null,null,'1639-03-22',null,'1639-09-14'\r\n            ] // 开始时间\r\n          },\r\n//5\r\n{\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            barWidth: 10,\r\n            itemStyle: {\r\n              color: function(params) {\r\n                const colors = [\r\n                  'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n                  'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(35,118,183)', \r\n                  'rgba(35,118,183,0.4)', 'rgba(35,118,183,0.6)', 'rgba(35,118,183,0.8)', \r\n                  'rgba(35,118,183,0.3)',\r\n                ];\r\n                return colors[params.dataIndex];\r\n              },\r\n              borderColor: 'transparent',\r\n              borderWidth: 1\r\n            }, \r\n            zlevel: 5,\r\n            z:10,\r\n            data: [\r\n            null,'1636-09-25',null,null,null,null,null,null,null,null\r\n\r\n            ] // 结束时间\r\n          },          \r\n          \r\n          {\r\n            name: '持续时间',\r\n            type: 'bar',\r\n            stack: 'duration',\r\n            itemStyle: {\r\n              borderColor: 'transparent',\r\n              color: '#e4e0cf'\r\n            },\r\n            zlevel: 5,\r\n            z: 20,\r\n            data: [\r\n              null,'1636-10-16',null,null,null,null,null,null,null,null\r\n              \r\n            ] // 开始时间\r\n          },\r\n\r\n        ]\r\n      };\r\n\r\n      progressChart.setOption(option);\r\n\r\n      // Enable data zoom when user click bar.\r\n      const zoomSize = 6;\r\n      progressChart.on('click', function (params) {\r\n        const shouldntclick=1;\r\n        if(shouldntclick){return;}\r\n        console.log(dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)]);\r\n        progressChart.dispatchAction({\r\n          type: 'dataZoom',\r\n          startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],\r\n          endValue:\r\n          // eslint-disable-next-line\r\n            dataAxis[Math.min(params.dataIndex + zoomSize / 2, data.length - 1)]\r\n        });\r\n      });\r\n      // 浏览器窗口大小变化，图表大小自适应\r\n      window.addEventListener('resize', function (){\r\n        progressChart.resize();\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.gantt{\r\n  width: 70%;\r\n  height: calc(100vh - 170px);\r\n}\r\n.histogram{\r\n  width: 30%;\r\n  height:calc(100vh - 170px);\r\n}\r\n.title{\r\n  display: flex;\r\n  margin-left: 0%;\r\n  margin-top: 0%;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  color: rgba(50, 132, 110, 1);\r\n  text-align: left;\r\n  vertical-align: top;\r\n  padding: 48px 0;\r\n  white-space: nowrap;\r\n}\r\n\r\n.note-container{\r\n  /* padding:90px 24px; */\r\n  display:flex;\r\n  align-items:center;\r\n  /* background-color: var(--td-bg-color-container); */\r\n}\r\n\r\n.note{\r\n  color:var(--td-brand-color-6);\r\n  text-align:left;\r\n  text-indent:2em;\r\n  line-height:17px;\r\n  font-size:14px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}