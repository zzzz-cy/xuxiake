{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"display\": \"flex\",\n    \"height\": \"136px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"title\",\n  style: {\n    \"width\": \"512px\",\n    \"visibility\": \"hidden\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"display\": \"flex\",\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_5 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_6 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_t_divider = _resolveComponent(\"t-divider\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, _toDisplayString($data.title), 1)]), _createVNode(_component_t_divider, {\n    layout: \"vertical\",\n    style: {\n      \"height\": \"90%\",\n      \"display\": \"none\"\n    }\n  }), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"note-container\"\n  }, [_createElementVNode(\"div\", {\n    style: {\n      \"width\": \"300px\"\n    }\n  })], -1))]), _createElementVNode(\"div\", _hoisted_4, [_cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    id: \"histogram\",\n    class: \"histogram\"\n  }, null, -1)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: require('../assets/img/情感词统计表介绍.png'),\n    width: \"60%\"\n  }, null, 8, _hoisted_6)])])]);\n}","map":{"version":3,"names":["style","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$data","title","_createVNode","_component_t_divider","layout","_hoisted_4","id","_hoisted_5","src","require","width","_hoisted_6"],"sources":["D:\\desk\\数据可视化\\project\\xuxiake\\src\\components\\PageTwo.vue"],"sourcesContent":["<template>\r\n  <div style=\"width:100%\">\r\n    <div style=\"display:flex;height:136px\">\r\n      <div class=\"title\" style=\"width:512px;visibility: hidden;\">\r\n        <p>{{ title }}</p>\r\n      </div>\r\n      <t-divider layout=\"vertical\" style=\"height:90%;display: none\"></t-divider>\r\n      <div  class=\"note-container\">\r\n        <div style=\"width: 300px;\">\r\n          <!--<P class=\"note\">{{ '茶叶，其实是一年四季皆可采摘制作的。' }}</P>\r\n          <p class=\"note\">{{ '其中，3-5月采制的为春茶；5-7月采制的为夏茶；8-10月采制的为秋茶；10月下旬采制的为冬茶。由于不同的茶类，对茶叶原料的嫩度要求不同，因此采摘时间也会有所区别。相对嫩的茶叶，多为春茶、秋茶；粗大的茶叶，多为夏茶、秋茶。'}}</P>\r\n          -->\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div style=\"display: flex;width:100%\">\r\n      <div id=\"histogram\" class=\"histogram\"></div>\r\n      <div style=\"display: flex; justify-content: center; align-items: center; \"><img :src=\"require('../assets/img/情感词统计表介绍.png')\" width=\"60%\" /></div>\r\n    </div>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//import { color } from \"d3\";\r\nimport * as echarts from \"echarts\";\r\nimport { GridComponent } from 'echarts/components';\r\nimport { CalendarComponent } from 'echarts/components';\r\nimport { VisualMapComponent } from 'echarts/components';\r\nimport { TooltipComponent } from 'echarts/components';\r\nimport { SVGRenderer, CanvasRenderer } from 'echarts/renderers';\r\n//import $ from 'jquery';\r\n\r\n\r\n\r\n\r\necharts.use([SVGRenderer, CanvasRenderer,TooltipComponent,VisualMapComponent,CalendarComponent,GridComponent]);\r\n\r\nexport default {\r\n  name: 'PickView',\r\n  data(){\r\n    return{\r\n      title:'徐霞客游历各地时间表',\r\n      cell_ratio : 0.026836,\r\n      \r\n    };\r\n  },\r\n  mounted() {\r\n    this.createCalendar();\r\n    this.createGantt();\r\n  },\r\n  watch: {\r\n  //监听语言是否变化，若变化调用createPieChart()\r\n  '$i18n.locale': {\r\n    handler() {\r\n      // 处理语言变化的逻辑\r\n      this.handleResize()\r\n    },\r\n    immediate: false // 立即执行一次回调函数\r\n  }\r\n},\r\n  computed:{\r\n    dataAxis(){\r\n      return ['江苏','浙江','安徽','福建','江西','湖北','湖南','广西','贵州','云南'];\r\n    },\r\n    \r\n  },\r\n\r\n  methods: {\r\n    handleResize(){\r\n      //let myChart = this.$echarts.init(document.getElementById(\"calendar\"), null, { renderer: 'svg' });\r\n      //let progressChart = echarts.init(this.$refs.ganttChart, null, { renderer: 'svg' });\r\n      this.createCalendar();\r\n      this.createGantt();\r\n    },\r\n    \r\n    createCalendar() {\r\n      let histogram = echarts.init(document.getElementById(\"histogram\"), null, {\r\n        renderer: \"svg\",\r\n      });\r\n\r\n      // 数据\r\n      const provinces = [\r\n        \"云南省\",\r\n        \"广西壮族自治区\",\r\n        \"湖南省\",\r\n        \"江西省\",\r\n        \"贵州省\",\r\n        \"浙江省\",\r\n        \"福建省\",\r\n        \"安徽省\",\r\n        \"河南省\",\r\n        \"山西省\",\r\n        \"湖北省\",\r\n        \"陕西省\",\r\n        \"江苏省\",\r\n        \"河北省\",\r\n        \"上海市\",\r\n      ];\r\n      const positiveWords = [4216, 3874, 962, 640, 639, 454, 242, 173, 98, 80, 53, 32, 10, 8, 4];\r\n      const negativeWords = [1029, 1055, 302, 156, 167, 112, 53, 34, 18, 13, 8, 10, 4, 2, 0];\r\n\r\n      // 数据预处理：按总量排序\r\n      const sortedData = provinces\r\n        .map((province, index) => ({\r\n          province,\r\n          positive: positiveWords[index],\r\n          negative: negativeWords[index],\r\n          total: positiveWords[index] + negativeWords[index],\r\n        }))\r\n        .sort((a, b) => a.total - b.total); // 总量从大到小排序\r\n\r\n      const sortedProvinces = sortedData.map(item => item.province);\r\n      const sortedPositiveWords = sortedData.map(item => item.positive);\r\n      const sortedNegativeWords = sortedData.map(item => item.negative);\r\n\r\n      // 配置项\r\n      let option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"消极情感词\", \"积极情感词\"],\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.01],\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: sortedProvinces, // 按总量排序的省份\r\n        },\r\n        series: [\r\n          {\r\n            name: \"消极情感词\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            data: sortedNegativeWords, // 按总量排序的消极词数据\r\n            itemStyle: {\r\n              color: \"#9daeb6\",\r\n            },\r\n          },\r\n          {\r\n            name: \"积极情感词\",\r\n            type: \"bar\",\r\n            stack: \"总量\",\r\n            data: sortedPositiveWords, // 按总量排序的积极词数据\r\n            itemStyle: {\r\n              color: \"#f0b8ab\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      // 设置图表\r\n      histogram.setOption(option);\r\n\r\n      // 监听窗口大小变化\r\n      window.addEventListener(\"resize\", function () {\r\n        histogram.resize();\r\n      });\r\n    },\r\n\r\n\r\n\r\n\r\n    createGantt() {\r\n//       let progressChart = echarts.init(this.$refs.ganttChart, null, { renderer: 'svg' });\r\n//       let dataAxis = this.dataAxis;\r\n//       let option = {\r\n//         tooltip: {\r\n//           trigger: 'item',\r\n//           formatter(params) {\r\n//             /*if (params[1].data && params[0].data) {\r\n//               return `<div>` + '开始时间' + `：` + `${params[1].data}` + `</div>` + `<div>` + '结束时间' + `：` + `${params[0].data}` + `</div>`;\r\n//             } else {\r\n//               return '';\r\n//             }*/\r\n//           },\r\n//           axisPointer: {\r\n//             type: 'cross',\r\n//             label: {\r\n//               show: true\r\n//             },\r\n//             shadowStyle: {\r\n//               color: 'rgba(177,243,173,0.2)'\r\n//             }\r\n//           }\r\n//         },\r\n//         grid: {\r\n//           containLabel: true,\r\n//           show: false,\r\n//           right: 10,\r\n//           left: 10,\r\n//           bottom: 20,\r\n//           top: 10,\r\n//           backgroundColor: 'transparent'\r\n//         },\r\n//         xAxis: {\r\n//           type: 'time',\r\n//           position: 'top', \r\n//           axisTick: {\r\n//             show: true\r\n//           },\r\n//           axisLine: {\r\n//             show: true\r\n//           },\r\n//           splitLine: {\r\n//             show: false\r\n//           },\r\n//           min: new Date('1613-03-15').getTime(), // 设置 x 轴最小值\r\n//           max: new Date('1639-12-31').getTime(), // 设置 x 轴最大值\r\n//           axisLabel: {\r\n//             formatter: function(value) {\r\n//               const date = new Date(value);\r\n//               return date.toLocaleDateString('zh-CN', { month: '2-digit' });\r\n//             }\r\n//           }\r\n//         },\r\n//         yAxis: {\r\n//           inverse: true, \r\n//           axisTick: {\r\n//             show: true\r\n//           },\r\n//           axisLine: {\r\n//             show: true\r\n//           },\r\n//           splitLine: {\r\n//             show: true\r\n//           },\r\n//           axisPointer: {\r\n//             type: 'shadow'\r\n//           },\r\n//           dataZoom: [\r\n//             {\r\n//               type: 'inside'\r\n//             }\r\n//           ],\r\n//           data: dataAxis,\r\n//         },\r\n//         series: [\r\n// //1\r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             barWidth: 10,\r\n//             itemStyle: {\r\n//               color: function(params) {\r\n//                 const colors = [\r\n//                   'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n//                   'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(139,139,139,0.2)', \r\n//                   'rgba(139,139,139,0.4)', 'rgba(139,139,139,0.6)', 'rgba(139,139,139)', \r\n//                   'rgba(139,139,139,0.8)',\r\n//                 ];\r\n//                 return colors[params.dataIndex];\r\n//               },\r\n//               borderColor: 'transparent',\r\n//               borderWidth: 1\r\n//             },\r\n//             zlevel: 1,\r\n//             z:10,\r\n//             data: [\r\n//               '1613-03-31','1616-01-26','1616-02-21','1618-08-18','1623-03-11','1637-01-11','1637-04-16','1638-03-11','1638-05-10'\r\n//             ] // 结束时间\r\n//           },          \r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             itemStyle: {\r\n//               borderColor: 'transparent',\r\n//               color: '#ffd6a5'\r\n//             },\r\n//             zlevel: 1,\r\n//             z: 20,\r\n//             data: [\r\n//               '1613-04-14','1616-02-11','1616-03-20','1618-08-23','1623-04-09','1637-04-16','1638-03-10','1638-05-09','1638-07-15'\r\n//             ] // 开始时间\r\n//           },\r\n// //2\r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             barWidth: 10,\r\n//             itemStyle: {\r\n//               color: function(params) {\r\n//                 const colors = [\r\n//                   'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n//                   'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(139,139,139,0.2)', \r\n//                   'rgba(139,139,139,0.4)', 'rgba(139,139,139,0.6)', 'rgba(139,139,139)', \r\n//                   'rgba(139,139,139,0.8)',\r\n//                 ];\r\n//                 return colors[params.dataIndex];\r\n//               },\r\n//               borderColor: 'transparent',\r\n//               borderWidth: 1\r\n//             },\r\n//             zlevel: 2,\r\n//             z:10,\r\n//             data: [\r\n//             '1614-01-01','1620-05-06','1618-09-04','1620-06-08','1636-10-17',null,null,'1638-05-10','1638-08-26','1638-08-16'\r\n//             ] // 结束时间\r\n//           },          \r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             itemStyle: {\r\n//               borderColor: 'transparent',\r\n//               color: '#ffd6a5'\r\n//             },\r\n//             zlevel: 2,\r\n//             z: 20,\r\n//             data: [\r\n//               '1615-12-31','1620-05-23','1618-09-06','1620-06-11','1637-01-11',null,null,'1638-09-01','1638-08-26'\r\n              \r\n//             ] // 开始时间\r\n//           },\r\n// //3\r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             barWidth: 10,\r\n//             itemStyle: {\r\n//               color: function(params) {\r\n//                 const colors = [\r\n//                   'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n//                   'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(139,139,139,0.2)', \r\n//                   'rgba(139,139,139,0.4)', 'rgba(139,139,139,0.6)', 'rgba(139,139,139)', \r\n//                   'rgba(139,139,139,0.8)',\r\n//                 ];\r\n//                 return colors[params.dataIndex];\r\n//               },\r\n//               borderColor: 'transparent',\r\n//               borderWidth: 1\r\n//             },\r\n//             zlevel: 3,\r\n//             z:10,\r\n//             data: [\r\n//             '1624-01-01','1630-07-17','1628-03-12',null,null,null,'1638-08-07',null,'1638-09-01'\r\n\r\n//             ] // 结束时间\r\n//           },          \r\n          \r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             itemStyle: {\r\n//               borderColor: 'transparent',\r\n//               color: '#ffd6a5'\r\n//             },\r\n//             zlevel: 3,\r\n//             z: 20,\r\n//             data: [\r\n//               '1624-12-31','1630-07-30','1628-04-05',null,null,null,'1638-08-16',null,'1639-03-09'\r\n              \r\n//             ] // 开始时间\r\n//           },\r\n// //4\r\n// {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             barWidth: 10,\r\n//             itemStyle: {\r\n//               color: function(params) {\r\n//                 const colors = [\r\n//                   'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n//                   'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(139,139,139,0.2)', \r\n//                   'rgba(139,139,139,0.4)', 'rgba(139,139,139,0.6)', 'rgba(139,139,139)', \r\n//                   'rgba(139,139,139,0.8)',\r\n//                 ];\r\n//                 return colors[params.dataIndex];\r\n//               },\r\n//               borderColor: 'transparent',\r\n//               borderWidth: 1\r\n//             },\r\n//             zlevel: 4,\r\n//             z:10,\r\n//             data: [\r\n//             '1636-09-19','1632-03-14','1630-08-02',null,null,null,'1639-03-18',null,'1639-03-26'\r\n\r\n\r\n//             ] // 结束时间\r\n//           },          \r\n          \r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             itemStyle: {\r\n//               borderColor: 'transparent',\r\n//               color: '#ffd6a5'\r\n//             },\r\n//             zlevel: 4,\r\n//             z: 20,\r\n//             data: [\r\n//               '1636-09-25','1632-05-08','1630-08-19',null,null,null,'1639-03-22',null,'1639-09-14'\r\n              \r\n//             ] // 开始时间\r\n//           },\r\n// //5\r\n// {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             barWidth: 10,\r\n//             itemStyle: {\r\n//               color: function(params) {\r\n//                 const colors = [\r\n//                   'rgba(50,132,110,0.8)', 'rgba(50,132,110)', 'rgba(50,132,110)',\r\n//                   'rgba(50,132,110)', 'rgba(50,132,110,0.6)', 'rgba(139,139,139,0.2)', \r\n//                   'rgba(139,139,139,0.4)', 'rgba(139,139,139,0.6)', 'rgba(139,139,139)', \r\n//                   'rgba(139,139,139,0.8)',\r\n//                 ];\r\n//                 return colors[params.dataIndex];\r\n//               },\r\n//               borderColor: 'transparent',\r\n//               borderWidth: 1\r\n//             }, \r\n//             zlevel: 5,\r\n//             z:10,\r\n//             data: [\r\n//             null,'1636-09-25',null,null,null,null,null,null,null,null\r\n\r\n//             ] // 结束时间\r\n//           },          \r\n          \r\n//           {\r\n//             name: '持续时间',\r\n//             type: 'bar',\r\n//             stack: 'duration',\r\n//             itemStyle: {\r\n//               borderColor: 'transparent',\r\n//               color: '#ffd6a5'\r\n//             },\r\n//             zlevel: 5,\r\n//             z: 20,\r\n//             data: [\r\n//               null,'1636-10-16',null,null,null,null,null,null,null,null\r\n              \r\n//             ] // 开始时间\r\n//           },\r\n\r\n//         ]\r\n//       };\r\n\r\n//       progressChart.setOption(option);\r\n\r\n//       // Enable data zoom when user click bar.\r\n//       const zoomSize = 6;\r\n//       progressChart.on('click', function (params) {\r\n//         console.log(dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)]);\r\n//         progressChart.dispatchAction({\r\n//           type: 'dataZoom',\r\n//           startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],\r\n//           endValue:\r\n//             dataAxis[Math.min(params.dataIndex + zoomSize / 2, data.length - 1)]\r\n//         });\r\n//       });\r\n//       // 浏览器窗口大小变化，图表大小自适应\r\n//       window.addEventListener('resize', function (){\r\n//         progressChart.resize();\r\n//       })\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.histogram{\r\n  width: 70%;\r\n  height:calc(100vh - 170px);\r\n}\r\n.gantt{\r\n  width: 30%;\r\n  height: calc(100vh - 170px);\r\n}\r\n.title{\r\n  display: flex;\r\n  margin-left: 0%;\r\n  margin-top: 0%;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  color: rgba(50, 132, 110, 1);\r\n  text-align: left;\r\n  vertical-align: top;\r\n  padding: 48px 0;\r\n  white-space: nowrap;\r\n}\r\n\r\n.note-container{\r\n  /* padding:90px 24px; */\r\n  display:flex;\r\n  align-items:center;\r\n  /* background-color: var(--td-bg-color-container); */\r\n}\r\n\r\n.note{\r\n  color:var(--td-brand-color-6);\r\n  text-align:left;\r\n  text-indent:2em;\r\n  line-height:17px;\r\n  font-size:14px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAkB,EAAlB;IAAA;EAAA;AAAkB;;EAChBA,KAAiC,EAAjC;IAAA;IAAA;EAAA;AAAiC;;EAC/BC,KAAK,EAAC,OAAO;EAACD,KAAuC,EAAvC;IAAA;IAAA;EAAA;;;EAahBA,KAAgC,EAAhC;IAAA;IAAA;EAAA;AAAgC;;EAE9BA,KAAqE,EAArE;IAAA;IAAA;IAAA;EAAA;AAAqE;mBAlBhF;;;uBACEE,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,CAYM,OAZNC,UAYM,GAXJD,mBAAA,CAEM,OAFNE,UAEM,GADJF,mBAAA,CAAkB,WAAAG,gBAAA,CAAZC,KAAA,CAAAC,KAAK,M,GAEbC,YAAA,CAA0EC,oBAAA;IAA/DC,MAAM,EAAC,UAAU;IAACZ,KAAgC,EAAhC;MAAA;MAAA;IAAA;gCAC7BI,mBAAA,CAMQ;IANFH,KAAK,EAAC;EAAgB,IAC1BG,mBAAA,CAIM;IAJDJ,KAAqB,EAArB;MAAA;IAAA;EAAqB,G,UAQ9BI,mBAAA,CAGM,OAHNS,UAGM,G,0BAFJT,mBAAA,CAA4C;IAAvCU,EAAE,EAAC,WAAW;IAACb,KAAK,EAAC;iBAC1BG,mBAAA,CAAiJ,OAAjJW,UAAiJ,GAAtEX,mBAAA,CAAgE;IAA1DY,GAAG,EAAEC,OAAO;IAAgCC,KAAK,EAAC;cAlBzIC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}