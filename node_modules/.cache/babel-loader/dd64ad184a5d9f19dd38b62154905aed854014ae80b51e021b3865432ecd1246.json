{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"navbar\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  id: \"fullpage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 固定顶部导航栏 \"), _createElementVNode(\"nav\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pages, (page, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index,\n      class: _normalizeClass({\n        active: $data.currentPage === index\n      }),\n      onClick: $event => $options.goToSection(index)\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.pageComponents, (component, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"section\", 'section' + (index + 1)])\n    }, [(_openBlock(), _createBlock(_resolveDynamicComponent(component)))], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","pages","page","index","key","_normalizeClass","active","currentPage","onClick","$event","$options","goToSection","_hoisted_3","_hoisted_4","pageComponents","component","_createBlock","_resolveDynamicComponent"],"sources":["D:\\desk\\数据可视化\\project\\xuxiake\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- 固定顶部导航栏 -->\r\n    <nav class=\"navbar\">\r\n      <ul>\r\n        <li\r\n          v-for=\"(page, index) in pages\"\r\n          :key=\"index\"\r\n          :class=\"{ active: currentPage === index }\"\r\n          @click=\"goToSection(index)\"\r\n        >\r\n          {{ page }}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n    <div id=\"fullpage\">\r\n      <div\r\n        v-for=\"(component, index) in pageComponents\"\r\n        :key=\"index\"\r\n        class=\"section\"\r\n        :class=\"'section' + (index + 1)\"\r\n      >\r\n        <component :is=\"component\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport fullpage from 'fullpage.js';\r\nimport 'fullpage.js/dist/fullpage.css';\r\n\r\n// 导入重命名的页面组件\r\nimport PageOne from './components/PageOne.vue';\r\nimport PageTwo from './components/PageTwo.vue';\r\nimport PageThree from './components/PageThree.vue';\r\nimport PageFour from './components/PageFour.vue';\r\nimport PageFive from './components/PageFive.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    PageOne,\r\n    PageTwo,\r\n    PageThree,\r\n    PageFour,\r\n  },\r\n  data() {\r\n    return {\r\n      pages: ['第一页', '第二页', '第三页', '第四页','第五页'], // 页面名称\r\n      currentPage: 0, // 当前页面索引\r\n      pageComponents: [PageOne, PageTwo, PageThree, PageFour,PageFive], // 页面组件数组\r\n      fullpageInstance: null, // 存储 fullpage.js 实例\r\n    };\r\n  },\r\n  mounted() {\r\n    // 初始化 fullpage.js\r\n    this.fullpageInstance = new fullpage('#fullpage', {\r\n      navigation: true,\r\n      scrollingSpeed: 700,\r\n      anchors: this.pages.map((_, index) => `page${index + 1}`), // 自动生成锚点\r\n      navigationTooltips: this.pages, // 使用 pages 数组作为导航提示\r\n      showActiveTooltip: true,\r\n      afterLoad: (origin, destination) => {\r\n        this.currentPage = destination.index; // 更新当前页面索引\r\n      },\r\n    });\r\n  },\r\n  methods: {\r\n    // 导航栏点击事件，跳转到对应的页面\r\n    goToSection(index) {\r\n      if (this.fullpageInstance) {\r\n        this.fullpageInstance.moveTo(index + 1); // 使用实例 API\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 设置页面样式 */\r\n#app {\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.navbar {\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  background-color: #333;\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  z-index: 1000;\r\n}\r\n\r\n.navbar ul {\r\n  list-style-type: none;\r\n  display: flex;\r\n  gap: 20px;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.navbar li {\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  font-size: 18px;\r\n}\r\n\r\n.navbar li.active {\r\n  font-weight: bold;\r\n  color: #ffd700;\r\n}\r\n\r\n.section {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n}\r\n\r\n.section1 {\r\n  background-color: #ffadad;\r\n}\r\n\r\n.section2 {\r\n  background-color: #ffd6a5;\r\n}\r\n\r\n.section3 {\r\n  background-color: #fdffb6;\r\n}\r\n\r\n.section4 {\r\n  background-color: #caffbf;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAENC,KAAK,EAAC;AAAQ;mBAHvB;;EAgBSD,EAAE,EAAC;AAAU;;uBAfpBE,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,aAAgB,EAChBC,mBAAA,CAWM,OAXNC,UAWM,GAVJD,mBAAA,CASK,c,kBARHH,mBAAA,CAOKK,SAAA,QAZbC,WAAA,CAMkCC,KAAA,CAAAC,KAAK,EANvC,CAMkBC,IAAI,EAAEC,KAAK;yBADrBV,mBAAA,CAOK;MALFW,GAAG,EAAED,KAAK;MACVX,KAAK,EARhBa,eAAA;QAAAC,MAAA,EAQ4BN,KAAA,CAAAO,WAAW,KAAKJ;MAAK;MACtCK,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACR,KAAK;wBAEtBD,IAAI,gCAXjBU,UAAA;sCAgBIhB,mBAAA,CASM,OATNiB,UASM,I,kBARJpB,mBAAA,CAOMK,SAAA,QAxBZC,WAAA,CAkBqCC,KAAA,CAAAc,cAAc,EAlBnD,CAkBgBC,SAAS,EAAEZ,KAAK;yBAD1BV,mBAAA,CAOM;MALHW,GAAG,EAAED,KAAK;MACXX,KAAK,EApBba,eAAA,EAoBc,SAAS,eACMF,KAAK;uBAE1Ba,YAAA,CAA6BC,wBAvBrC,CAuBwBF,SAAS,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}