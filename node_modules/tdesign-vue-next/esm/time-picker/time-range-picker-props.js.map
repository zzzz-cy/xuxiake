{"version":3,"file":"time-range-picker-props.js","sources":["../../src/time-picker/time-range-picker-props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdTimeRangePickerProps } from '../time-picker/type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许直接输入时间 */\n  allowInput: Boolean,\n  /** 是否自动调换左右区间的顺序，默认为 true；若需要支持跨天的场景，可以设置为 false */\n  autoSwap: {\n    type: Boolean,\n    default: true,\n  },\n  /** 无边框模式 */\n  borderless: Boolean,\n  /** 是否允许清除选中值 */\n  clearable: Boolean,\n  /** 禁用时间项 */\n  disableTime: {\n    type: Function as PropType<TdTimeRangePickerProps['disableTime']>,\n  },\n  /** 是否禁用组件，值为数组表示可分别控制开始日期和结束日期是否禁用 */\n  disabled: {\n    type: [Boolean, Array] as PropType<TdTimeRangePickerProps['disabled']>,\n    default: undefined as TdTimeRangePickerProps['disabled'],\n  },\n  /** 用于格式化时间，[详细文档](https://day.js.org/docs/en/display/format) */\n  format: {\n    type: String,\n    default: 'HH:mm:ss',\n  },\n  /** 是否隐藏禁用状态的时间项 */\n  hideDisabledTime: {\n    type: Boolean,\n    default: true,\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdTimeRangePickerProps['label']>,\n  },\n  /** 占位符，值为数组表示可分别为开始日期和结束日期设置占位符 */\n  placeholder: {\n    type: [String, Array] as PropType<TdTimeRangePickerProps['placeholder']>,\n    default: undefined as TdTimeRangePickerProps['placeholder'],\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdTimeRangePickerProps['popupProps']>,\n  },\n  /** 预设快捷时间范围选择，示例：{ '下午': ['13:00:00', '18:00:00'] } */\n  presets: {\n    type: Object as PropType<TdTimeRangePickerProps['presets']>,\n  },\n  /** 透传给范围输入框 RangeInput 组件的参数 */\n  rangeInputProps: {\n    type: Object as PropType<TdTimeRangePickerProps['rangeInputProps']>,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 尺寸 */\n  size: {\n    type: String as PropType<TdTimeRangePickerProps['size']>,\n    default: 'medium' as TdTimeRangePickerProps['size'],\n    validator(val: TdTimeRangePickerProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdTimeRangePickerProps['status']>,\n    default: 'default' as TdTimeRangePickerProps['status'],\n    validator(val: TdTimeRangePickerProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 时间间隔步数，数组排列 [小时, 分钟, 秒]，示例：[2, 1, 1] 或者 ['2', '1', '1'] */\n  steps: {\n    type: Array as PropType<TdTimeRangePickerProps['steps']>,\n    default: (): TdTimeRangePickerProps['steps'] => [1, 1, 1],\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdTimeRangePickerProps['tips']>,\n  },\n  /** 选中值 */\n  value: {\n    type: Array as PropType<TdTimeRangePickerProps['value']>,\n    default: undefined as TdTimeRangePickerProps['value'],\n  },\n  modelValue: {\n    type: Array as PropType<TdTimeRangePickerProps['value']>,\n    default: undefined as TdTimeRangePickerProps['value'],\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: Array as PropType<TdTimeRangePickerProps['defaultValue']>,\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdTimeRangePickerProps['onBlur']>,\n  /** 选中值发生变化时触发 */\n  onChange: Function as PropType<TdTimeRangePickerProps['onChange']>,\n  /** 范围输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdTimeRangePickerProps['onFocus']>,\n  /** 当输入框内容发生变化时触发，参数 input 表示输入内容，value 表示组件当前有效值 */\n  onInput: Function as PropType<TdTimeRangePickerProps['onInput']>,\n  /** 面板选中值后触发 */\n  onPick: Function as PropType<TdTimeRangePickerProps['onPick']>,\n};\n"],"names":["allowInput","Boolean","autoSwap","type","borderless","clearable","disableTime","Function","disabled","Array","format","String","hideDisabledTime","label","placeholder","popupProps","Object","presets","rangeInputProps","readonly","size","validator","val","includes","status","steps","default","tips","value","modelValue","defaultValue","onBlur","onChange","onFocus","onInput","onPick"],"mappings":"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"}