declare const _default: import("vue").DefineComponent<{
    code: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    copyable: {
        type: import("vue").PropType<boolean | import("./type").TypographyCopyable>;
        default: boolean | import("./type").TypographyCopyable;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    delete: BooleanConstructor;
    disabled: BooleanConstructor;
    ellipsis: {
        type: import("vue").PropType<boolean | import("./type").TypographyEllipsis>;
        default: boolean | import("./type").TypographyEllipsis;
    };
    italic: BooleanConstructor;
    keyboard: BooleanConstructor;
    mark: {
        type: import("vue").PropType<string | boolean>;
        default: string | boolean;
    };
    strong: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"error" | "success" | "primary" | "warning" | "secondary">;
        validator(val: "error" | "success" | "primary" | "warning" | "secondary"): boolean;
    };
    underline: BooleanConstructor;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    code: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    copyable: {
        type: import("vue").PropType<boolean | import("./type").TypographyCopyable>;
        default: boolean | import("./type").TypographyCopyable;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    delete: BooleanConstructor;
    disabled: BooleanConstructor;
    ellipsis: {
        type: import("vue").PropType<boolean | import("./type").TypographyEllipsis>;
        default: boolean | import("./type").TypographyEllipsis;
    };
    italic: BooleanConstructor;
    keyboard: BooleanConstructor;
    mark: {
        type: import("vue").PropType<string | boolean>;
        default: string | boolean;
    };
    strong: BooleanConstructor;
    theme: {
        type: import("vue").PropType<"error" | "success" | "primary" | "warning" | "secondary">;
        validator(val: "error" | "success" | "primary" | "warning" | "secondary"): boolean;
    };
    underline: BooleanConstructor;
}>>, {
    code: boolean;
    mark: string | boolean;
    strong: boolean;
    disabled: boolean;
    delete: boolean;
    ellipsis: boolean | import("./type").TypographyEllipsis;
    italic: boolean;
    underline: boolean;
    copyable: boolean | import("./type").TypographyCopyable;
    keyboard: boolean;
}, {}>;
export default _default;
