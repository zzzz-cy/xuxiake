{"version":3,"file":"utils.js","sources":["../../src/date-picker/utils.ts"],"sourcesContent":["// 用于头部日期切换修正\nexport function dateCorrection(\n  partialIndex: number,\n  preYear: Array<number>,\n  preMonth: Array<number>,\n  onlyYearSelect: boolean,\n) {\n  let nextYear = preYear;\n  const nextMonth = preMonth;\n  if (partialIndex === 0) {\n    if (nextYear[1] <= nextYear[0]) {\n      if (onlyYearSelect) nextYear[1] = nextYear[0] + 1;\n      else {\n        // eslint-disable-next-line prefer-destructuring\n        nextYear[1] = nextYear[0];\n        if (nextMonth[1] <= nextMonth[0]) {\n          nextMonth[1] = nextMonth[0] + 1;\n          if (nextMonth[1] === 12) {\n            // 处理跨年的边界场景\n            nextMonth[1] = 0;\n            nextYear = [nextYear[0], nextYear[1] + 1];\n          }\n        }\n      }\n    }\n  }\n\n  // 保证左侧时间不大于右侧\n  if (partialIndex === 1) {\n    if (nextYear[0] >= nextYear[1]) {\n      // 年/季度/月份场景下，头部只有年选择器，直接 - 1\n      if (onlyYearSelect) nextYear[0] = nextYear[1] - 1;\n      else {\n        // eslint-disable-next-line prefer-destructuring\n        nextYear[0] = nextYear[1];\n        if (nextMonth[0] >= nextMonth[1]) {\n          nextMonth[0] = nextMonth[1] - 1;\n          if (nextMonth[0] === -1) {\n            // 处理跨年的边界场景\n            nextMonth[0] = 11;\n            nextYear = [nextYear[0] - 1, nextYear[1]];\n          }\n        }\n      }\n    }\n  }\n  return { nextYear, nextMonth };\n}\n"],"names":["dateCorrection","partialIndex","preYear","preMonth","onlyYearSelect","nextYear","nextMonth"],"mappings":";;;;;;AACO,SAASA,cACdA,CAAAC,YAAA,EACAC,OACA,EAAAC,QAAA,EACAC,cACA,EAAA;EACA,IAAIC,QAAW,GAAAH,OAAA,CAAA;EACf,IAAMI,SAAY,GAAAH,QAAA,CAAA;EAClB,IAAIF,iBAAiB,CAAG,EAAA;IAClB,IAAAI,QAAA,CAAS,CAAM,CAAA,IAAAA,QAAA,CAAS,CAAI,CAAA,EAAA;AAC1B,MAAA,IAAAD,cAAA,EAAyBC,QAAA,CAAA,CAAA,CAAA,GAAKA,SAAS,CAAK,CAAA,GAAA,CAAA,CAAA,KAC3C;AAEHA,QAAAA,QAAA,CAAS,KAAKA,QAAS,CAAA,CAAA,CAAA,CAAA;QACnB,IAAAC,SAAA,CAAU,CAAM,CAAA,IAAAA,SAAA,CAAU,CAAI,CAAA,EAAA;UACtBA,SAAA,CAAA,CAAA,CAAA,GAAKA,UAAU,CAAK,CAAA,GAAA,CAAA,CAAA;AAC1B,UAAA,IAAAA,SAAA,CAAU,OAAO,EAAI,EAAA;AAEvBA,YAAAA,SAAA,CAAU,CAAK,CAAA,GAAA,CAAA,CAAA;AACfD,YAAAA,QAAA,GAAW,CAACA,QAAA,CAAS,CAAI,CAAA,EAAAA,QAAA,CAAS,KAAK,CAAC,CAAA,CAAA;AAC1C,WAAA;AACF,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;EAGA,IAAIJ,iBAAiB,CAAG,EAAA;IAClB,IAAAI,QAAA,CAAS,CAAM,CAAA,IAAAA,QAAA,CAAS,CAAI,CAAA,EAAA;AAE1B,MAAA,IAAAD,cAAA,EAAyBC,QAAA,CAAA,CAAA,CAAA,GAAKA,SAAS,CAAK,CAAA,GAAA,CAAA,CAAA,KAC3C;AAEHA,QAAAA,QAAA,CAAS,KAAKA,QAAS,CAAA,CAAA,CAAA,CAAA;QACnB,IAAAC,SAAA,CAAU,CAAM,CAAA,IAAAA,SAAA,CAAU,CAAI,CAAA,EAAA;UACtBA,SAAA,CAAA,CAAA,CAAA,GAAKA,UAAU,CAAK,CAAA,GAAA,CAAA,CAAA;AAC1B,UAAA,IAAAA,SAAA,CAAU,OAAO,CAAI,CAAA,EAAA;AAEvBA,YAAAA,SAAA,CAAU,CAAK,CAAA,GAAA,EAAA,CAAA;AACfD,YAAAA,QAAA,GAAW,CAACA,QAAA,CAAS,CAAK,CAAA,GAAA,CAAA,EAAGA,SAAS,CAAE,CAAA,CAAA,CAAA;AAC1C,WAAA;AACF,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;EACO,OAAA;AAAEA,IAAAA,UAAAA;AAAUC,IAAAA,SAAU,EAAVA,SAAAA;GAAU,CAAA;AAC/B;;;;"}