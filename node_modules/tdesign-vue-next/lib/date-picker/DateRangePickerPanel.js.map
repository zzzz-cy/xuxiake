{"version":3,"file":"DateRangePickerPanel.js","sources":["../../src/date-picker/DateRangePickerPanel.tsx"],"sourcesContent":["import { defineComponent, computed, ref } from 'vue';\nimport dayjs from 'dayjs';\nimport isFunction from 'lodash/isFunction';\nimport isArray from 'lodash/isArray';\n\nimport dateRangePickerPanelProps from './date-range-picker-panel-props';\nimport dateRangePickerProps from './date-range-picker-props';\nimport {\n  DateValue,\n  DateRangePickerPartial,\n  TdDateRangePickerPanelProps,\n  DatePickerYearChangeTrigger,\n  DatePickerMonthChangeTrigger,\n} from './type';\n\nimport TRangePanel from './panel/RangePanel';\nimport useRangeValue from './hooks/useRangeValue';\nimport { formatDate, getDefaultFormat, parseToDayjs } from '../_common/js/date-picker/format';\nimport { subtractMonth, addMonth, extractTimeObj } from '../_common/js/date-picker/utils';\nimport { dateCorrection } from './utils';\n\nexport default defineComponent({\n  name: 'TDateRangePickerPanel',\n\n  props: {\n    value: dateRangePickerProps.value,\n    defaultValue: dateRangePickerProps.defaultValue,\n    modelValue: dateRangePickerProps.modelValue,\n    disabled: dateRangePickerProps.disabled,\n    disableDate: dateRangePickerProps.disableDate,\n    enableTimePicker: dateRangePickerProps.enableTimePicker,\n    firstDayOfWeek: dateRangePickerProps.firstDayOfWeek,\n    format: dateRangePickerProps.format,\n    mode: dateRangePickerProps.mode,\n    presets: dateRangePickerProps.presets,\n    presetsPlacement: dateRangePickerProps.presetsPlacement,\n    timePickerProps: dateRangePickerProps.timePickerProps,\n    panelPreselection: dateRangePickerProps.panelPreselection,\n    ...dateRangePickerPanelProps,\n  },\n\n  setup(props: TdDateRangePickerPanelProps) {\n    const { value, year, month, time, cacheValue, isFirstValueSelected, onChange } = useRangeValue(props);\n\n    const formatRef = computed(() =>\n      getDefaultFormat({\n        mode: props.mode,\n        enableTimePicker: props.enableTimePicker,\n        format: props.format,\n      }),\n    );\n\n    // 记录面板是否选中过\n    const isSelected = ref(false);\n    const isHoverCell = ref(false);\n    const hoverValue = ref([]);\n    const activeIndex = computed(() => (isFirstValueSelected.value ? 1 : 0));\n\n    // 日期 hover\n    function onCellMouseEnter(date: Date) {\n      isHoverCell.value = true;\n      const nextValue = [...(hoverValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      hoverValue.value = nextValue;\n    }\n\n    // 日期 leave\n    function onCellMouseLeave() {\n      isHoverCell.value = false;\n      hoverValue.value = cacheValue.value as string[];\n    }\n\n    // 日期点击\n    function onCellClick(date: Date, { e }: { e: MouseEvent }) {\n      props.onCellClick?.({\n        e,\n        partial: activeIndex.value ? 'end' : 'start',\n        date: value.value.map((v) => dayjs(v).toDate()),\n      });\n\n      isHoverCell.value = false;\n      isSelected.value = true;\n\n      const nextValue = [...(cacheValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      cacheValue.value = nextValue;\n\n      // 有时间选择器走 confirm 逻辑\n      if (props.enableTimePicker) return;\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (nextValue.length === 2 && isFirstValueSelected.value) {\n        onChange?.(\n          formatDate(nextValue, {\n            format: formatRef.value.format,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n            trigger: 'pick',\n          },\n        );\n        isFirstValueSelected.value = false;\n      } else {\n        isFirstValueSelected.value = true;\n      }\n    }\n\n    // 头部快速切换\n    function onJumperClick({ trigger, partial }: { trigger: string; partial: DateRangePickerPartial }) {\n      const partialIndex = partial === 'start' ? 0 : 1;\n\n      const triggerMap = {\n        prev: 'arrow-previous',\n        next: 'arrow-next',\n      };\n      const monthCountMap = { date: 1, week: 1, month: 12, quarter: 12, year: 120 };\n      const monthCount = monthCountMap[props.mode] || 0;\n      const current = new Date(year.value[partialIndex], month.value[partialIndex]);\n\n      let next = null;\n      if (trigger === 'prev') {\n        next = subtractMonth(current, monthCount);\n      } else if (trigger === 'current') {\n        next = new Date();\n      } else if (trigger === 'next') {\n        next = addMonth(current, monthCount);\n      }\n      let nextYear = [...year.value];\n      nextYear[partialIndex] = next.getFullYear();\n      let nextMonth = [...month.value];\n      nextMonth[partialIndex] = next.getMonth();\n      const onlyYearSelect = ['year', 'quarter', 'month'].includes(props.mode);\n\n      // 头部日期切换修正\n      const correctedDate = dateCorrection(partialIndex, nextYear, nextMonth, onlyYearSelect);\n      nextYear = correctedDate.nextYear;\n      nextMonth = correctedDate.nextMonth;\n\n      if (year.value.some((y) => !nextYear.includes(y))) {\n        props.onYearChange?.({\n          partial,\n          year: nextYear[partialIndex],\n          date: value.value.map((v) => dayjs(v).toDate()),\n          trigger: trigger === 'current' ? 'today' : (`year-${triggerMap[trigger]}` as DatePickerYearChangeTrigger),\n        });\n      }\n      if (month.value.some((m) => !nextMonth.includes(m))) {\n        props.onMonthChange?.({\n          partial,\n          month: nextMonth[partialIndex],\n          date: value.value.map((v) => dayjs(v).toDate()),\n          trigger: trigger === 'current' ? 'today' : (`month-${triggerMap[trigger]}` as DatePickerMonthChangeTrigger),\n        });\n      }\n\n      year.value = nextYear;\n      month.value = nextMonth;\n    }\n\n    // time-picker 点击\n    function onTimePickerChange(val: string) {\n      const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n      const nextInputValue = [...(cacheValue.value as DateValue[])];\n      const changedInputValue = cacheValue.value[activeIndex.value];\n      const currentDate = !dayjs(changedInputValue, formatRef.value.format).isValid()\n        ? dayjs().year(year.value[activeIndex.value]).month(month.value[activeIndex.value])\n        : dayjs(changedInputValue, formatRef.value.format);\n      // am pm 12小时制转化 24小时制\n      let nextHours = hours;\n      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n\n      const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n      nextInputValue[activeIndex.value] = nextDate;\n\n      const nextTime = [...time.value];\n      nextTime[activeIndex.value] = val;\n      time.value = nextTime;\n\n      isSelected.value = true;\n      cacheValue.value = formatDate(nextInputValue, {\n        format: formatRef.value.format,\n      });\n\n      props.onTimeChange?.({\n        time: val,\n        date: value.value.map((v) => parseToDayjs(v, formatRef.value.format).toDate()),\n        partial: activeIndex.value ? 'end' : 'start',\n        trigger: 'time-hour',\n      });\n    }\n\n    // 确定\n    function onConfirmClick({ e }: { e: MouseEvent }) {\n      const nextValue = [...(cacheValue.value as string[])];\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (nextValue.length === 2 && isFirstValueSelected.value) {\n        onChange?.(\n          formatDate(nextValue, {\n            format: formatRef.value.format,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n            trigger: 'confirm',\n          },\n        );\n        year.value = nextValue.map((v) => dayjs(v, formatRef.value.format).year());\n        month.value = nextValue.map((v) => dayjs(v, formatRef.value.format).month());\n        isFirstValueSelected.value = false;\n      } else {\n        isFirstValueSelected.value = true;\n      }\n\n      props.onConfirm?.({ date: value.value.map((v) => dayjs(v).toDate()), e });\n    }\n\n    // 预设\n    function onPresetClick(preset: any, context: any) {\n      let presetValue = preset;\n      if (isFunction(preset)) {\n        presetValue = preset();\n      }\n      if (!isArray(presetValue)) {\n        console.error(`preset: ${preset} 预设值必须是数组!`);\n      } else {\n        onChange?.(\n          formatDate(presetValue, {\n            format: formatRef.value.format,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: presetValue.map((p) => parseToDayjs(p, formatRef.value.format)),\n            trigger: 'preset',\n          },\n        );\n        props.onPresetClick?.(context);\n      }\n    }\n\n    function onYearChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      let nextYear = [...year.value];\n      nextYear[partialIndex] = nextVal;\n      let nextMonth = [...month.value];\n      // 年/季度/月份场景下，头部只有年选择器\n      const onlyYearSelect = ['year', 'quarter', 'month'].includes(props.mode);\n\n      // 头部日期切换修正\n      const correctedDate = dateCorrection(partialIndex, nextYear, nextMonth, onlyYearSelect);\n      nextYear = correctedDate.nextYear;\n      nextMonth = correctedDate.nextMonth;\n\n      year.value = nextYear;\n      if (!onlyYearSelect) month.value = nextMonth;\n\n      props.onYearChange?.({\n        partial,\n        year: nextYear[partialIndex],\n        date: value.value.map((v) => dayjs(v).toDate()),\n        trigger: 'year-select',\n      });\n    }\n\n    function onMonthChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      const nextMonth = [...month.value];\n      nextMonth[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (year.value[0] === year.value[1]) {\n        if (partialIndex === 0) {\n          // 操作了左侧区间, 处理右侧区间小于或等于左侧区间的场景，交互上始终报错右侧比左侧大 1\n          if (nextMonth[1] <= nextMonth[0]) {\n            nextMonth[1] = nextMonth[0] + 1;\n            if (nextMonth[1] === 12) {\n              // 处理跨年的边界场景\n              nextMonth[1] = 0;\n              year.value = [year.value?.[0], year.value?.[1] + 1];\n            }\n          }\n        }\n        if (partialIndex === 1) {\n          // 操作了右侧区间, 处理右侧区间小于或等于左侧区间的场景，交互上始终报错左侧比右侧小 1\n          nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n          if (nextMonth[0] >= nextMonth[1]) {\n            nextMonth[0] -= 1;\n            if (nextMonth[0] === -1) {\n              // 处理跨年的边界场景\n              nextMonth[0] = 11;\n              year.value = [year.value?.[0] - 1, year.value?.[1]];\n            }\n          }\n        }\n      }\n\n      month.value = nextMonth;\n\n      props.onMonthChange?.({\n        partial,\n        month: nextMonth[partialIndex],\n        date: value.value.map((v) => dayjs(v).toDate()),\n        trigger: 'month-select',\n      });\n    }\n\n    const panelProps = computed(() => ({\n      hoverValue: (isHoverCell.value ? hoverValue.value : []) as string[],\n      value: (isSelected.value ? cacheValue.value : value.value) as string[],\n      activeIndex: activeIndex.value,\n      year: year.value,\n      month: month.value,\n      mode: props.mode,\n      format: formatRef.value.format,\n      presets: props.presets,\n      time: time.value,\n      disableDate: props.disableDate,\n      firstDayOfWeek: props.firstDayOfWeek,\n      timePickerProps: props.timePickerProps,\n      enableTimePicker: props.enableTimePicker,\n      presetsPlacement: props.presetsPlacement,\n      panelPreselection: props.panelPreselection,\n      popupVisible: true,\n      panelClick: props.onPanelClick,\n      onCellClick,\n      onCellMouseEnter,\n      onCellMouseLeave,\n      onJumperClick,\n      onConfirmClick,\n      onPresetClick,\n      onYearChange,\n      onMonthChange,\n      onTimePickerChange,\n    }));\n\n    return () => <TRangePanel {...panelProps.value} />;\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","value","dateRangePickerProps","defaultValue","modelValue","disabled","disableDate","enableTimePicker","firstDayOfWeek","format","mode","presets","presetsPlacement","timePickerProps","panelPreselection","dateRangePickerPanelProps","setup","_useRangeValue","useRangeValue","year","month","time","cacheValue","isFirstValueSelected","onChange","formatRef","computed","getDefaultFormat","isSelected","ref","isHoverCell","hoverValue","activeIndex","onCellMouseEnter","date","nextValue","_toConsumableArray","formatDate","onCellMouseLeave","onCellClick","_ref","_props$onCellClick","e","call","partial","map","v","dayjs","toDate","length","autoSwap","dayjsValue","parseToDayjs","trigger","onJumperClick","_ref2","partialIndex","triggerMap","prev","next","monthCountMap","week","quarter","monthCount","current","Date","subtractMonth","addMonth","nextYear","getFullYear","nextMonth","getMonth","onlyYearSelect","includes","correctedDate","dateCorrection","some","y","_props$onYearChange","onYearChange","concat","m","_props$onMonthChange","onMonthChange","onTimePickerChange","val","_props$onTimeChange","_extractTimeObj","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextInputValue","changedInputValue","currentDate","isValid","nextHours","test","nextDate","hour","minute","second","millisecond","nextTime","onTimeChange","onConfirmClick","_ref3","_props$onConfirm","onConfirm","onPresetClick","preset","context","presetValue","isFunction","isArray","console","error","_props$onPresetClick","p","nextVal","_ref4","_props$onYearChange2","_ref5","_props$onMonthChange2","_year$value","_year$value2","Math","min","_year$value3","_year$value4","panelProps","popupVisible","panelClick","onPanelClick","_createVNode","TRangePanel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,4BAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,uBAAA;AAENC,EAAAA,KAAO,EAAAC,aAAA,CAAA;IACLC,OAAOC,oBAAqB,CAAAD,KAAA;IAC5BE,cAAcD,oBAAqB,CAAAC,YAAA;IACnCC,YAAYF,oBAAqB,CAAAE,UAAA;IACjCC,UAAUH,oBAAqB,CAAAG,QAAA;IAC/BC,aAAaJ,oBAAqB,CAAAI,WAAA;IAClCC,kBAAkBL,oBAAqB,CAAAK,gBAAA;IACvCC,gBAAgBN,oBAAqB,CAAAM,cAAA;IACrCC,QAAQP,oBAAqB,CAAAO,MAAA;IAC7BC,MAAMR,oBAAqB,CAAAQ,IAAA;IAC3BC,SAAST,oBAAqB,CAAAS,OAAA;IAC9BC,kBAAkBV,oBAAqB,CAAAU,gBAAA;IACvCC,iBAAiBX,oBAAqB,CAAAW,eAAA;IACtCC,mBAAmBZ,oBAAqB,CAAAY,iBAAAA;AAAA,GAAA,EACrCC,yBAAA,CACL;AAEAC,EAAAA,OAAAA,SAAAA,MAAMjB,KAAoC,EAAA;AAClC,IAAA,IAAAkB,cAAA,GAA2EC,aAAA,CAAcnB,KAAK,CAAA;MAA5FE,KAAO,GAAAgB,cAAA,CAAPhB,KAAO;MAAAkB,IAAA,GAAAF,cAAA,CAAAE,IAAA;MAAMC,KAAO,GAAAH,cAAA,CAAPG,KAAO;MAAAC,IAAA,GAAAJ,cAAA,CAAAI,IAAA;MAAMC,4BAAAA;MAAYC,oBAAsB,GAAAN,cAAA,CAAtBM,oBAAsB;MAAAC,QAAA,GAAAP,cAAA,CAAAO,QAAA,CAAA;IAEpE,IAAMC,SAAY,GAAAC,QAAA,CAAS,YAAA;AAAA,MAAA,OACzBC,gBAAiB,CAAA;QACfjB,MAAMX,KAAM,CAAAW,IAAA;QACZH,kBAAkBR,KAAM,CAAAQ,gBAAA;QACxBE,QAAQV,KAAM,CAAAU,MAAAA;AAChB,OAAC,CAAA,CAAA;AAAA,KACH,CAAA,CAAA;AAGM,IAAA,IAAAmB,UAAA,GAAaC,IAAI,KAAK,CAAA,CAAA;AACtB,IAAA,IAAAC,WAAA,GAAcD,IAAI,KAAK,CAAA,CAAA;AACvB,IAAA,IAAAE,UAAA,GAAaF,GAAI,CAAA,EAAE,CAAA,CAAA;IACzB,IAAMG,cAAcN,QAAS,CAAA,YAAA;AAAA,MAAA,OAAOH,oBAAqB,CAAAtB,KAAA,GAAQ,IAAI,CAAE,CAAA;KAAA,CAAA,CAAA;IAGvE,SAASgC,iBAAiBC,IAAY,EAAA;MACpCJ,WAAA,CAAY7B,KAAQ,GAAA,IAAA,CAAA;AACpB,MAAA,IAAMkC,SAAY,GAAAC,kBAAA,CAAKL,UAAA,CAAW9B,KAAkB,CAAA,CAAA;MAC1CkC,SAAA,CAAAH,WAAA,CAAY/B,KAAS,CAAA,GAAAoC,UAAA,CAAWH,IAAM,EAAA;AAC9CzB,QAAAA,MAAA,EAAQgB,UAAUxB,KAAM,CAAAQ,MAAAA;AAC1B,OAAC,CAAA,CAAA;MACDsB,UAAA,CAAW9B,KAAQ,GAAAkC,SAAA,CAAA;AACrB,KAAA;IAGA,SAASG,gBAAmBA,GAAA;MAC1BR,WAAA,CAAY7B,KAAQ,GAAA,KAAA,CAAA;AACpB8B,MAAAA,UAAA,CAAW9B,QAAQqB,UAAW,CAAArB,KAAA,CAAA;AAChC,KAAA;AAGA,IAAA,SAASsC,WAAYA,CAAAL,IAAA,EAAAM,IAAA,EAAsC;AAAA,MAAA,IAAAC,kBAAA,CAAA;AAAA,MAAA,IAAxBC,CAAA,GAAAF,IAAA,CAAAE,CAAA,CAAA;AACjC,MAAA,CAAAD,kBAAA,GAAA1C,KAAA,CAAMwC,WAAc,MAAA,IAAA,IAAAE,kBAAA,KAAA,KAAA,CAAA,IAApBA,kBAAA,CAAAE,IAAA,CAAA5C,KAAA,EAAoB;AAClB2C,QAAAA,CAAA,EAAAA,CAAA;AACAE,QAAAA,OAAA,EAASZ,WAAY,CAAA/B,KAAA,GAAQ,KAAQ,GAAA,OAAA;QACrCiC,IAAA,EAAMjC,KAAM,CAAAA,KAAA,CAAM4C,GAAI,CAAA,UAACC;iBAAMC,KAAM,CAAAD,CAAC,CAAE,CAAAE,MAAA,EAAQ,CAAA;AAAA,SAAA,CAAA;AAChD,OAAC,CAAA,CAAA;MAEDlB,WAAA,CAAY7B,KAAQ,GAAA,KAAA,CAAA;MACpB2B,UAAA,CAAW3B,KAAQ,GAAA,IAAA,CAAA;AAEnB,MAAA,IAAMkC,SAAY,GAAAC,kBAAA,CAAKd,UAAA,CAAWrB,KAAkB,CAAA,CAAA;MAC1CkC,SAAA,CAAAH,WAAA,CAAY/B,KAAS,CAAA,GAAAoC,UAAA,CAAWH,IAAM,EAAA;AAC9CzB,QAAAA,MAAA,EAAQgB,UAAUxB,KAAM,CAAAQ,MAAAA;AAC1B,OAAC,CAAA,CAAA;MACDa,UAAA,CAAWrB,KAAQ,GAAAkC,SAAA,CAAA;MAGnB,IAAIpC,KAAM,CAAAQ,gBAAA,EAAkB,OAAA;MAG5B,IAAI4B,SAAU,CAAAc,MAAA,KAAW,CAAK,IAAA1B,oBAAA,CAAqBtB,KAAO,EAAA;QACxDuB,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAAA,KAAAA,CAAAA,IAAAA,QAAA,CACEa,WAAWF,SAAW,EAAA;AACpB1B,UAAAA,MAAA,EAAQgB,UAAUxB,KAAM,CAAAQ,MAAA;AACxByC,UAAAA,QAAU,EAAA,IAAA;AACZ,SAAC,CAAA,EACD;AACEC,UAAAA,UAAA,EAAYhB,SAAU,CAAAU,GAAA,CAAI,UAACC,CAAA,EAAA;YAAA,OAAMM,aAAaN,CAAG,EAAArB,SAAA,CAAUxB,KAAM,CAAAQ,MAAM,CAAC,CAAA;WAAA,CAAA;AACxE4C,UAAAA,OAAS,EAAA,MAAA;AACX,SACF,CAAA,CAAA;QACA9B,oBAAA,CAAqBtB,KAAQ,GAAA,KAAA,CAAA;AAC/B,OAAO,MAAA;QACLsB,oBAAA,CAAqBtB,KAAQ,GAAA,IAAA,CAAA;AAC/B,OAAA;AACF,KAAA;IAGA,SAASqD,aAAcA,CAAAC,KAAA,EAA4E;AAAA,MAAA,IAA1EF,OAAS,GAAAE,KAAA,CAATF,OAAS;QAAAT,OAAA,GAAAW,KAAA,CAAAX,OAAA,CAAA;MAC1B,IAAAY,YAAA,GAAeZ,OAAY,KAAA,OAAA,GAAU,CAAI,GAAA,CAAA,CAAA;AAE/C,MAAA,IAAMa,UAAa,GAAA;AACjBC,QAAAA,IAAM,EAAA,gBAAA;AACNC,QAAAA,IAAM,EAAA,YAAA;OACR,CAAA;AACM,MAAA,IAAAC,aAAA,GAAgB;AAAE1B,QAAAA,IAAA,EAAM,CAAG;AAAA2B,QAAAA,IAAA,EAAM,CAAG;AAAAzC,QAAAA,KAAA,EAAO,EAAI;AAAA0C,QAAAA,OAAA,EAAS,EAAI;AAAA3C,QAAAA,IAAA,EAAM,GAAA;OAAI,CAAA;MACtE,IAAA4C,UAAA,GAAaH,aAAc,CAAA7D,KAAA,CAAMW,IAAS,CAAA,IAAA,CAAA,CAAA;AAC1C,MAAA,IAAAsD,OAAA,GAAU,IAAIC,IAAK,CAAA9C,IAAA,CAAKlB,MAAMuD,YAAe,CAAA,EAAApC,KAAA,CAAMnB,MAAMuD,YAAa,CAAA,CAAA,CAAA;MAE5E,IAAIG,IAAO,GAAA,IAAA,CAAA;MACX,IAAIN,YAAY,MAAQ,EAAA;AACfM,QAAAA,IAAA,GAAAO,aAAA,CAAcF,SAASD,UAAU,CAAA,CAAA;AAC1C,OAAA,MAAA,IAAWV,YAAY,SAAW,EAAA;AAChCM,QAAAA,IAAA,GAAO,IAAIM,IAAK,EAAA,CAAA;AAClB,OAAA,MAAA,IAAWZ,YAAY,MAAQ,EAAA;AACtBM,QAAAA,IAAA,GAAAQ,QAAA,CAASH,SAASD,UAAU,CAAA,CAAA;AACrC,OAAA;AACA,MAAA,IAAIK,QAAW,GAAAhC,kBAAA,CAAIjB,IAAA,CAAKlB,KAAK,CAAA,CAAA;MACpBmE,QAAA,CAAAZ,YAAA,CAAA,GAAgBG,KAAKU,WAAY,EAAA,CAAA;AAC1C,MAAA,IAAIC,SAAY,GAAAlC,kBAAA,CAAIhB,KAAA,CAAMnB,KAAK,CAAA,CAAA;MACrBqE,SAAA,CAAAd,YAAA,CAAA,GAAgBG,KAAKY,QAAS,EAAA,CAAA;AAClC,MAAA,IAAAC,cAAA,GAAiB,CAAC,MAAQ,EAAA,SAAA,EAAW,OAAO,CAAE,CAAAC,QAAA,CAAS1E,MAAMW,IAAI,CAAA,CAAA;MAGvE,IAAMgE,aAAgB,GAAAC,cAAA,CAAenB,YAAc,EAAAY,QAAA,EAAUE,WAAWE,cAAc,CAAA,CAAA;MACtFJ,QAAA,GAAWM,aAAc,CAAAN,QAAA,CAAA;MACzBE,SAAA,GAAYI,aAAc,CAAAJ,SAAA,CAAA;AAEtB,MAAA,IAAAnD,IAAA,CAAKlB,KAAM,CAAA2E,IAAA,CAAK,UAACC,CAAA,EAAA;AAAA,QAAA,OAAM,CAACT,QAAS,CAAAK,QAAA,CAASI,CAAC,CAAC,CAAA;AAAA,OAAA,CAAG,EAAA;AAAA,QAAA,IAAAC,mBAAA,CAAA;AACjD,QAAA,CAAAA,mBAAA,GAAA/E,KAAA,CAAMgF,YAAe,MAAA,IAAA,IAAAD,mBAAA,KAAA,KAAA,CAAA,IAArBA,mBAAA,CAAAnC,IAAA,CAAA5C,KAAA,EAAqB;AACnB6C,UAAAA,OAAA,EAAAA,OAAA;AACAzB,UAAAA,MAAMiD,QAAS,CAAAZ,YAAA,CAAA;UACftB,IAAA,EAAMjC,KAAM,CAAAA,KAAA,CAAM4C,GAAI,CAAA,UAACC;mBAAMC,KAAM,CAAAD,CAAC,CAAE,CAAAE,MAAA,EAAQ,CAAA;WAAA,CAAA;AAC9CK,UAAAA,OAAS,EAAAA,OAAA,KAAY,SAAY,GAAA,OAAA,GAAA2B,OAAAA,CAAAA,MAAA,CAAmBvB,UAAW,CAAAJ,OAAA,CAAA,CAAA;AACjE,SAAC,CAAA,CAAA;AACH,OAAA;AACI,MAAA,IAAAjC,KAAA,CAAMnB,KAAM,CAAA2E,IAAA,CAAK,UAACK,CAAA,EAAA;AAAA,QAAA,OAAM,CAACX,SAAU,CAAAG,QAAA,CAASQ,CAAC,CAAC,CAAA;AAAA,OAAA,CAAG,EAAA;AAAA,QAAA,IAAAC,oBAAA,CAAA;AACnD,QAAA,CAAAA,oBAAA,GAAAnF,KAAA,CAAMoF,aAAgB,MAAA,IAAA,IAAAD,oBAAA,KAAA,KAAA,CAAA,IAAtBA,oBAAA,CAAAvC,IAAA,CAAA5C,KAAA,EAAsB;AACpB6C,UAAAA,OAAA,EAAAA,OAAA;AACAxB,UAAAA,OAAOkD,SAAU,CAAAd,YAAA,CAAA;UACjBtB,IAAA,EAAMjC,KAAM,CAAAA,KAAA,CAAM4C,GAAI,CAAA,UAACC;mBAAMC,KAAM,CAAAD,CAAC,CAAE,CAAAE,MAAA,EAAQ,CAAA;WAAA,CAAA;AAC9CK,UAAAA,OAAS,EAAAA,OAAA,KAAY,SAAY,GAAA,OAAA,GAAA2B,QAAAA,CAAAA,MAAA,CAAoBvB,UAAW,CAAAJ,OAAA,CAAA,CAAA;AAClE,SAAC,CAAA,CAAA;AACH,OAAA;MAEAlC,IAAA,CAAKlB,KAAQ,GAAAmE,QAAA,CAAA;MACbhD,KAAA,CAAMnB,KAAQ,GAAAqE,SAAA,CAAA;AAChB,KAAA;IAGA,SAASc,mBAAmBC,GAAa,EAAA;AAAA,MAAA,IAAAC,mBAAA,CAAA;AACjC,MAAA,IAAAC,eAAA,GAAsDC,eAAeH,GAAG,CAAA;QAAtEI,wBAAAA;QAAOC,OAAS,GAAAH,eAAA,CAATG,OAAS;QAAAC,OAAA,GAAAJ,eAAA,CAAAI,OAAA;QAASC,+BAAAA;QAAcC,QAAS,GAAAN,eAAA,CAATM,QAAS,CAAA;AAExD,MAAA,IAAMC,cAAiB,GAAA1D,kBAAA,CAAKd,UAAA,CAAWrB,KAAqB,CAAA,CAAA;MACtD,IAAA8F,iBAAA,GAAoBzE,UAAW,CAAArB,KAAA,CAAM+B,WAAY,CAAA/B,KAAA,CAAA,CAAA;MACvD,IAAM+F,WAAc,GAAA,CAACjD,KAAM,CAAAgD,iBAAA,EAAmBtE,SAAU,CAAAxB,KAAA,CAAMQ,MAAM,CAAA,CAAEwF,OAAQ,EAAA,GAC1ElD,KAAM,EAAA,CAAE5B,IAAK,CAAAA,IAAA,CAAKlB,KAAM,CAAA+B,WAAA,CAAY/B,KAAM,CAAA,CAAA,CAAEmB,KAAM,CAAAA,KAAA,CAAMnB,KAAM,CAAA+B,WAAA,CAAY/B,KAAM,CAAA,CAAA,GAChF8C,KAAM,CAAAgD,iBAAA,EAAmBtE,SAAU,CAAAxB,KAAA,CAAMQ,MAAM,CAAA,CAAA;MAEnD,IAAIyF,SAAY,GAAAT,KAAA,CAAA;AAChB,MAAA,IAAI,KAAM,CAAAU,IAAA,CAAKN,QAAQ,CAAA,IAAKK,SAAc,KAAA,EAAA,EAAiBA,SAAA,IAAA,EAAA,CAAA;AAC3D,MAAA,IAAI,KAAM,CAAAC,IAAA,CAAKN,QAAQ,CAAA,IAAKK,SAAY,GAAA,EAAA,EAAiBA,SAAA,IAAA,EAAA,CAAA;MAEzD,IAAME,QAAW,GAAAJ,WAAA,CAAYK,IAAK,CAAAH,SAAS,EAAEI,MAAO,CAAAZ,OAAO,CAAE,CAAAa,MAAA,CAAOZ,OAAO,CAAA,CAAEa,WAAY,CAAAZ,YAAY,EAAE5C,MAAO,EAAA,CAAA;AAC9G8C,MAAAA,cAAA,CAAe9D,YAAY/B,KAAS,CAAA,GAAAmG,QAAA,CAAA;AAEpC,MAAA,IAAMK,QAAW,GAAArE,kBAAA,CAAIf,IAAA,CAAKpB,KAAK,CAAA,CAAA;AAC/BwG,MAAAA,QAAA,CAASzE,YAAY/B,KAAS,CAAA,GAAAoF,GAAA,CAAA;MAC9BhE,IAAA,CAAKpB,KAAQ,GAAAwG,QAAA,CAAA;MAEb7E,UAAA,CAAW3B,KAAQ,GAAA,IAAA,CAAA;AACRqB,MAAAA,UAAA,CAAArB,KAAA,GAAQoC,WAAWyD,cAAgB,EAAA;AAC5CrF,QAAAA,MAAA,EAAQgB,UAAUxB,KAAM,CAAAQ,MAAAA;AAC1B,OAAC,CAAA,CAAA;AAED,MAAA,CAAA6E,mBAAA,GAAAvF,KAAA,CAAM2G,YAAe,MAAA,IAAA,IAAApB,mBAAA,KAAA,KAAA,CAAA,IAArBA,mBAAA,CAAA3C,IAAA,CAAA5C,KAAA,EAAqB;AACnBsB,QAAAA,IAAM,EAAAgE,GAAA;QACNnD,IAAM,EAAAjC,KAAA,CAAMA,KAAM,CAAA4C,GAAA,CAAI,UAACC,CAAA,EAAA;AAAA,UAAA,OAAMM,YAAa,CAAAN,CAAA,EAAGrB,SAAU,CAAAxB,KAAA,CAAMQ,MAAM,CAAA,CAAEuC,QAAQ,CAAA;SAAA,CAAA;AAC7EJ,QAAAA,OAAA,EAASZ,WAAY,CAAA/B,KAAA,GAAQ,KAAQ,GAAA,OAAA;AACrCoD,QAAAA,OAAS,EAAA,WAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAA;IAGS,SAAAsD,cAAAA,CAAAC,KAAA,EAAyC;AAAA,MAAA,IAAAC,gBAAA,CAAA;AAAA,MAAA,IAAxBnE,CAAA,GAAAkE,KAAA,CAAAlE,CAAA,CAAA;AACxB,MAAA,IAAMP,SAAY,GAAAC,kBAAA,CAAKd,UAAA,CAAWrB,KAAkB,CAAA,CAAA;MAGpD,IAAIkC,SAAU,CAAAc,MAAA,KAAW,CAAK,IAAA1B,oBAAA,CAAqBtB,KAAO,EAAA;QACxDuB,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAAA,KAAAA,CAAAA,IAAAA,QAAA,CACEa,WAAWF,SAAW,EAAA;AACpB1B,UAAAA,MAAA,EAAQgB,UAAUxB,KAAM,CAAAQ,MAAA;AACxByC,UAAAA,QAAU,EAAA,IAAA;AACZ,SAAC,CAAA,EACD;AACEC,UAAAA,UAAA,EAAYhB,SAAU,CAAAU,GAAA,CAAI,UAACC,CAAA,EAAA;YAAA,OAAMM,aAAaN,CAAG,EAAArB,SAAA,CAAUxB,KAAM,CAAAQ,MAAM,CAAC,CAAA;WAAA,CAAA;AACxE4C,UAAAA,OAAS,EAAA,SAAA;AACX,SACF,CAAA,CAAA;QACAlC,IAAA,CAAKlB,KAAQ,GAAAkC,SAAA,CAAUU,GAAI,CAAA,UAACC,CAAM,EAAA;AAAA,UAAA,OAAAC,KAAA,CAAMD,CAAG,EAAArB,SAAA,CAAUxB,KAAM,CAAAQ,MAAM,CAAE,CAAAU,IAAA,EAAM,CAAA;SAAA,CAAA,CAAA;QACzEC,KAAA,CAAMnB,KAAQ,GAAAkC,SAAA,CAAUU,GAAI,CAAA,UAACC,CAAM,EAAA;AAAA,UAAA,OAAAC,KAAA,CAAMD,CAAG,EAAArB,SAAA,CAAUxB,KAAM,CAAAQ,MAAM,CAAE,CAAAW,KAAA,EAAO,CAAA;SAAA,CAAA,CAAA;QAC3EG,oBAAA,CAAqBtB,KAAQ,GAAA,KAAA,CAAA;AAC/B,OAAO,MAAA;QACLsB,oBAAA,CAAqBtB,KAAQ,GAAA,IAAA,CAAA;AAC/B,OAAA;AAEA,MAAA,CAAA4G,gBAAA,GAAA9G,KAAA,CAAM+G,SAAY,MAAA,IAAA,IAAAD,gBAAA,KAAA,KAAA,CAAA,IAAlBA,gBAAA,CAAAlE,IAAA,CAAA5C,KAAA,EAAkB;QAAEmC,IAAM,EAAAjC,KAAA,CAAMA,MAAM4C,GAAI,CAAA,UAACC,CAAM,EAAA;AAAA,UAAA,OAAAC,KAAA,CAAMD,CAAC,CAAE,CAAAE,MAAA,EAAQ,CAAA;SAAA,CAAA;AAAGN,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAC1E,KAAA;AAGS,IAAA,SAAAqE,aAAAA,CAAcC,QAAaC,OAAc,EAAA;MAChD,IAAIC,WAAc,GAAAF,MAAA,CAAA;AACd,MAAA,IAAAG,UAAA,CAAWH,MAAM,CAAG,EAAA;QACtBE,WAAA,GAAcF,MAAO,EAAA,CAAA;AACvB,OAAA;AACI,MAAA,IAAA,CAACI,OAAQ,CAAAF,WAAW,CAAG,EAAA;AACjBG,QAAAA,OAAA,CAAAC,KAAA,CAAA,UAAA,CAAAtC,MAAA,CAAiBgC,MAAkB,uDAAA,CAAA,CAAA;AAC7C,OAAO,MAAA;AAAA,QAAA,IAAAO,oBAAA,CAAA;QACL/F,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAAA,KAAAA,CAAAA,IAAAA,QAAA,CACEa,WAAW6E,WAAa,EAAA;AACtBzG,UAAAA,MAAA,EAAQgB,UAAUxB,KAAM,CAAAQ,MAAA;AACxByC,UAAAA,QAAU,EAAA,IAAA;AACZ,SAAC,CAAA,EACD;AACEC,UAAAA,UAAA,EAAY+D,WAAY,CAAArE,GAAA,CAAI,UAAC2E,CAAA,EAAA;YAAA,OAAMpE,aAAaoE,CAAG,EAAA/F,SAAA,CAAUxB,KAAM,CAAAQ,MAAM,CAAC,CAAA;WAAA,CAAA;AAC1E4C,UAAAA,OAAS,EAAA,QAAA;AACX,SACF,CAAA,CAAA;AACA,QAAA,CAAAkE,oBAAA,GAAAxH,KAAA,CAAMgH,oDAANQ,KAAAA,CAAAA,IAAAA,oBAAA,CAAA5E,IAAA,CAAA5C,KAAA,EAAsBkH,OAAO,CAAA,CAAA;AAC/B,OAAA;AACF,KAAA;AAEA,IAAA,SAASlC,YAAaA,CAAA0C,OAAA,EAAAC,KAAA,EAAmE;AAAA,MAAA,IAAAC,oBAAA,CAAA;AAAA,MAAA,IAAhD/E,OAAA,GAAA8E,KAAA,CAAA9E,OAAA,CAAA;MACnC,IAAAY,YAAA,GAAeZ,OAAY,KAAA,OAAA,GAAU,CAAI,GAAA,CAAA,CAAA;MAC7C,IAAI7C,KAAM,CAAAQ,gBAAA,EAAkBiD,YAAA,GAAexB,WAAY,CAAA/B,KAAA,CAAA;AAEvD,MAAA,IAAImE,QAAW,GAAAhC,kBAAA,CAAIjB,IAAA,CAAKlB,KAAK,CAAA,CAAA;AAC7BmE,MAAAA,QAAA,CAASZ,YAAgB,CAAA,GAAAiE,OAAA,CAAA;AACzB,MAAA,IAAInD,SAAY,GAAAlC,kBAAA,CAAIhB,KAAA,CAAMnB,KAAK,CAAA,CAAA;AAEzB,MAAA,IAAAuE,cAAA,GAAiB,CAAC,MAAQ,EAAA,SAAA,EAAW,OAAO,CAAE,CAAAC,QAAA,CAAS1E,MAAMW,IAAI,CAAA,CAAA;MAGvE,IAAMgE,aAAgB,GAAAC,cAAA,CAAenB,YAAc,EAAAY,QAAA,EAAUE,WAAWE,cAAc,CAAA,CAAA;MACtFJ,QAAA,GAAWM,aAAc,CAAAN,QAAA,CAAA;MACzBE,SAAA,GAAYI,aAAc,CAAAJ,SAAA,CAAA;MAE1BnD,IAAA,CAAKlB,KAAQ,GAAAmE,QAAA,CAAA;AACb,MAAA,IAAI,CAACI,cAAA,EAAgBpD,KAAA,CAAMnB,KAAQ,GAAAqE,SAAA,CAAA;AAEnC,MAAA,CAAAqD,oBAAA,GAAA5H,KAAA,CAAMgF,YAAe,MAAA,IAAA,IAAA4C,oBAAA,KAAA,KAAA,CAAA,IAArBA,oBAAA,CAAAhF,IAAA,CAAA5C,KAAA,EAAqB;AACnB6C,QAAAA,OAAA,EAAAA,OAAA;AACAzB,QAAAA,MAAMiD,QAAS,CAAAZ,YAAA,CAAA;QACftB,IAAA,EAAMjC,KAAM,CAAAA,KAAA,CAAM4C,GAAI,CAAA,UAACC;iBAAMC,KAAM,CAAAD,CAAC,CAAE,CAAAE,MAAA,EAAQ,CAAA;SAAA,CAAA;AAC9CK,QAAAA,OAAS,EAAA,aAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAA;AAEA,IAAA,SAAS8B,aAAcA,CAAAsC,OAAA,EAAAG,KAAA,EAAmE;AAAA,MAAA,IAAAC,qBAAA,CAAA;AAAA,MAAA,IAAhDjF,OAAA,GAAAgF,KAAA,CAAAhF,OAAA,CAAA;MACpC,IAAAY,YAAA,GAAeZ,OAAY,KAAA,OAAA,GAAU,CAAI,GAAA,CAAA,CAAA;MAC7C,IAAI7C,KAAM,CAAAQ,gBAAA,EAAkBiD,YAAA,GAAexB,WAAY,CAAA/B,KAAA,CAAA;AAEvD,MAAA,IAAMqE,SAAY,GAAAlC,kBAAA,CAAIhB,KAAA,CAAMnB,KAAK,CAAA,CAAA;AACjCqE,MAAAA,SAAA,CAAUd,YAAgB,CAAA,GAAAiE,OAAA,CAAA;AAE1B,MAAA,IAAItG,IAAK,CAAAlB,KAAA,CAAM,CAAO,CAAA,KAAAkB,IAAA,CAAKlB,MAAM,CAAI,CAAA,EAAA;QACnC,IAAIuD,iBAAiB,CAAG,EAAA;UAElB,IAAAc,SAAA,CAAU,CAAM,CAAA,IAAAA,SAAA,CAAU,CAAI,CAAA,EAAA;YACtBA,SAAA,CAAA,CAAA,CAAA,GAAKA,UAAU,CAAK,CAAA,GAAA,CAAA,CAAA;AAC1B,YAAA,IAAAA,SAAA,CAAU,OAAO,EAAI,EAAA;cAAA,IAAAwD,WAAA,EAAAC,YAAA,CAAA;AAEvBzD,cAAAA,SAAA,CAAU,CAAK,CAAA,GAAA,CAAA,CAAA;AACVnD,cAAAA,IAAA,CAAAlB,KAAA,GAAQ,CAAA,CAAA6H,WAAA,GAAC3G,IAAK,CAAAlB,KAAA,MAAA6H,IAAAA,IAAAA,WAAA,KAALA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,WAAA,CAAa,IAAI,CAAA,CAAAC,YAAA,GAAA5G,IAAK,CAAAlB,KAAA,MAAA8H,IAAAA,IAAAA,YAAA,KAALA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAA,CAAa,MAAK,CAAC,CAAA,CAAA;AACpD,aAAA;AACF,WAAA;AACF,SAAA;QACA,IAAIvE,iBAAiB,CAAG,EAAA;AAEtBc,UAAAA,SAAA,CAAU,KAAK0D,IAAK,CAAAC,GAAA,CAAI3D,SAAU,CAAA,CAAA,CAAA,EAAIA,UAAU,CAAE,CAAA,CAAA,CAAA;UAC9C,IAAAA,SAAA,CAAU,CAAM,CAAA,IAAAA,SAAA,CAAU,CAAI,CAAA,EAAA;AAChCA,YAAAA,SAAA,CAAU,CAAM,CAAA,IAAA,CAAA,CAAA;AACZ,YAAA,IAAAA,SAAA,CAAU,OAAO,CAAI,CAAA,EAAA;cAAA,IAAA4D,YAAA,EAAAC,YAAA,CAAA;AAEvB7D,cAAAA,SAAA,CAAU,CAAK,CAAA,GAAA,EAAA,CAAA;AACVnD,cAAAA,IAAA,CAAAlB,KAAA,GAAQ,CAAC,EAAAiI,YAAA,GAAA/G,IAAK,CAAAlB,KAAA,MAAA,IAAA,IAAAiI,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAALA,YAAA,CAAa,MAAK,CAAG,EAAA,CAAAC,YAAA,GAAAhH,IAAA,CAAKlB,oCAALkI,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAA,CAAa,CAAE,CAAA,CAAA,CAAA;AACpD,aAAA;AACF,WAAA;AACF,SAAA;AACF,OAAA;MAEA/G,KAAA,CAAMnB,KAAQ,GAAAqE,SAAA,CAAA;AAEd,MAAA,CAAAuD,qBAAA,GAAA9H,KAAA,CAAMoF,aAAgB,MAAA,IAAA,IAAA0C,qBAAA,KAAA,KAAA,CAAA,IAAtBA,qBAAA,CAAAlF,IAAA,CAAA5C,KAAA,EAAsB;AACpB6C,QAAAA,OAAA,EAAAA,OAAA;AACAxB,QAAAA,OAAOkD,SAAU,CAAAd,YAAA,CAAA;QACjBtB,IAAA,EAAMjC,KAAM,CAAAA,KAAA,CAAM4C,GAAI,CAAA,UAACC;iBAAMC,KAAM,CAAAD,CAAC,CAAE,CAAAE,MAAA,EAAQ,CAAA;SAAA,CAAA;AAC9CK,QAAAA,OAAS,EAAA,cAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAA;IAEM,IAAA+E,UAAA,GAAa1G,SAAS,YAAA;MAAA,OAAO;QACjCK,UAAa,EAAAD,WAAA,CAAY7B,KAAQ,GAAA8B,UAAA,CAAW9B,QAAQ,EAAC;QACrDA,KAAQ,EAAA2B,UAAA,CAAW3B,KAAQ,GAAAqB,UAAA,CAAWrB,QAAQA,KAAM,CAAAA,KAAA;QACpD+B,aAAaA,WAAY,CAAA/B,KAAA;QACzBkB,MAAMA,IAAK,CAAAlB,KAAA;QACXmB,OAAOA,KAAM,CAAAnB,KAAA;QACbS,MAAMX,KAAM,CAAAW,IAAA;AACZD,QAAAA,MAAA,EAAQgB,UAAUxB,KAAM,CAAAQ,MAAA;QACxBE,SAASZ,KAAM,CAAAY,OAAA;QACfU,MAAMA,IAAK,CAAApB,KAAA;QACXK,aAAaP,KAAM,CAAAO,WAAA;QACnBE,gBAAgBT,KAAM,CAAAS,cAAA;QACtBK,iBAAiBd,KAAM,CAAAc,eAAA;QACvBN,kBAAkBR,KAAM,CAAAQ,gBAAA;QACxBK,kBAAkBb,KAAM,CAAAa,gBAAA;QACxBE,mBAAmBf,KAAM,CAAAe,iBAAA;AACzBuH,QAAAA,YAAc,EAAA,IAAA;QACdC,YAAYvI,KAAM,CAAAwI,YAAA;AAClBhG,QAAAA,WAAA,EAAAA,WAAA;AACAN,QAAAA,gBAAA,EAAAA,gBAAA;AACAK,QAAAA,gBAAA,EAAAA,gBAAA;AACAgB,QAAAA,aAAA,EAAAA,aAAA;AACAqD,QAAAA,cAAA,EAAAA,cAAA;AACAI,QAAAA,aAAA,EAAAA,aAAA;AACAhC,QAAAA,YAAA,EAAAA,YAAA;AACAI,QAAAA,aAAA,EAAAA,aAAA;AACAC,QAAAA,kBAAA,EAAAA,kBAAAA;OACA,CAAA;AAAA,KAAA,CAAA,CAAA;IAEF,OAAO,YAAA;AAAA,MAAA,OAAAoD,WAAA,CAAAC,WAAA,EAAuBL,UAAA,CAAWnI,KAAO,EAAA,IAAA,CAAA,CAAA;KAAA,CAAA;AAClD,GAAA;AACF,CAAC,CAAA;;;;"}