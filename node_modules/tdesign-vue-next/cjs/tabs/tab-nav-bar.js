/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var Vue = require('vue');
var tabs_props = require('./props.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useResizeObserver = require('../hooks/useResizeObserver.js');
var debounce = require('lodash/debounce');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-14f69041.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0a56babd.js');
require('dayjs');
require('lodash/isArray');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var debounce__default = /*#__PURE__*/_interopDefaultLegacy(debounce);

var TTabNavBar = Vue.defineComponent({
  props: {
    navs: {
      type: Array
    },
    placement: tabs_props["default"].placement,
    value: tabs_props["default"].value
  },
  setup: function setup(props) {
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("tabs");
    var classPrefix = hooks_useConfig.usePrefixClass();
    var barRef = Vue.ref();
    var navBarClass = Vue.computed(function () {
      return ["".concat(COMPONENT_NAME.value, "__bar"), "".concat(classPrefix.value, "-is-").concat(props.placement)];
    });
    var navBarStyle = Vue.ref(null);
    var getStyle = function getStyle() {
      var isVertical = ["left", "right"].includes(props.placement.toLowerCase());
      var _ref = isVertical ? ["height", "top"] : ["width", "left"],
        _ref2 = _slicedToArray__default["default"](_ref, 2),
        sizePropName = _ref2[0],
        offsetPropName = _ref2[1];
      var offset = 0;
      var i = 0;
      for (; i < props.navs.length; i++) {
        var _props$navs$i;
        if (props.navs[i].props.value === props.value) {
          break;
        }
        if ((_props$navs$i = props.navs[i]) !== null && _props$navs$i !== void 0 && _props$navs$i.el) {
          var sizeWithUnit = getComputedStyle(props.navs[i].el)[sizePropName];
          var size = parseFloat(sizeWithUnit);
          offset += size;
        }
      }
      if (!props.navs[i]) return {};
      return _defineProperty__default["default"](_defineProperty__default["default"]({}, offsetPropName, "".concat(offset, "px")), sizePropName, props.navs[i].el ? getComputedStyle(props.navs[i].el)[sizePropName] : "0px");
    };
    var update = function update() {
      return navBarStyle.value = getStyle();
    };
    Vue.onMounted(function () {
      Vue.nextTick(function () {
        update();
      });
    });
    Vue.watch([function () {
      return props.navs;
    }, function () {
      return props.value;
    }, function () {
      return props.placement;
    }], function () {
      Vue.nextTick(function () {
        update();
      });
    });
    hooks_useResizeObserver["default"](barRef, debounce__default["default"](function () {
      update();
    }, 35));
    return function () {
      return Vue.createVNode("div", {
        "class": navBarClass.value,
        "style": navBarStyle.value,
        "ref": barRef
      }, null);
    };
  }
});

exports["default"] = TTabNavBar;
//# sourceMappingURL=tab-nav-bar.js.map
