/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var colorPicker_props = require('../props.js');
var _common_js_colorPicker_constants = require('../../_common/js/color-picker/constants.js');
var radio_index = require('../../radio/index.js');
var colorPicker_hooks = require('../hooks.js');
var configProvider_useConfig = require('../../config-provider/useConfig.js');
require('../../radio/radio.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/slicedToArray');
require('../../hooks/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../../_common/js/global-config/default-config.js');
require('../../_common/js/global-config/locale/zh_CN.js');
require('../../_chunks/dep-14f69041.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-0a56babd.js');
require('dayjs');
require('lodash/isArray');
require('../../utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/camelCase');
require('lodash/isUndefined');
require('lodash/isNull');
require('lodash/isNumber');
require('../../radio/props.js');
require('../../radio/constants.js');
require('../../hooks/useDisabled.js');
require('lodash/isBoolean');
require('../../hooks/useReadonly.js');
require('../../hooks/useVModel.js');
require('lodash/kebabCase');
require('../../hooks/tnode.js');
require('../../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../../radio/group.js');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/regenerator');
require('lodash/isNil');
require('lodash/throttle');
require('../../radio/radio-group-props.js');
require('../../radio/useKeyboard.js');
require('../../utils/dom.js');
require('../../utils/easing.js');
require('../../_common/js/common.js');
require('../../watermark/hooks.js');
require('../../hooks/useResizeObserver.js');
require('../../radio/radio-button.js');
require('../../utils/withInstall.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Vue.isVNode(s);
}
var PanelHeader = Vue.defineComponent({
  name: "PanelHeader",
  props: _objectSpread(_objectSpread({}, colorPicker_props["default"]), {}, {
    mode: {
      type: String,
      "default": "color"
    },
    togglePopup: {
      type: Function
    },
    onModeChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  }),
  setup: function setup(props2) {
    var _useConfig = configProvider_useConfig.useConfig("colorPicker"),
      globalConfig = _useConfig.globalConfig;
    var baseClassName = colorPicker_hooks.useBaseClassName();
    var modeValue = Vue.ref(props2.mode);
    var handleModeChange = function handleModeChange(v) {
      return props2.onModeChange(v);
    };
    Vue.watch(function () {
      return props2.mode;
    }, function (v) {
      return modeValue.value = v;
    });
    return function () {
      var _slot2;
      var _props2$colorModes;
      if (((_props2$colorModes = props2.colorModes) === null || _props2$colorModes === void 0 ? void 0 : _props2$colorModes.length) === 1) {
        return null;
      }
      return Vue.createVNode("div", {
        "class": "".concat(baseClassName.value, "__head")
      }, [Vue.createVNode("div", {
        "class": "".concat(baseClassName.value, "__mode")
      }, [Vue.createVNode(radio_index.RadioGroup, {
        "variant": "default-filled",
        "size": "small",
        "modelValue": modeValue.value,
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return modeValue.value = $event;
        },
        "onChange": handleModeChange
      }, _isSlot(_slot2 = Object.keys(_common_js_colorPicker_constants.COLOR_MODES).map(function (key) {
        var _slot;
        return Vue.createVNode(radio_index.RadioButton, {
          "key": key,
          "value": key
        }, _isSlot(_slot = Reflect.get(globalConfig.value, _common_js_colorPicker_constants.COLOR_MODES[key])) ? _slot : {
          "default": function _default() {
            return [_slot];
          }
        });
      })) ? _slot2 : {
        "default": function _default() {
          return [_slot2];
        }
      })])]);
    };
  }
});

exports["default"] = PanelHeader;
//# sourceMappingURL=header.js.map
