import { PropType } from 'vue';
import { SortType } from './type';
import { TableConfig } from '../config-provider';
declare type SortTypeEnums = Array<'desc' | 'asc'>;
declare const _default: import("vue").DefineComponent<{
    sortType: {
        type: PropType<SortType>;
        default: string;
    };
    sortOrder: {
        type: StringConstructor;
        default: () => string;
    };
    locale: PropType<TableConfig>;
    sortIcon: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    tooltipProps: PropType<import("../tooltip").TdTooltipProps>;
    hideSortTips: BooleanConstructor;
}, {
    t: <T>(pattern: T, ...args: any[]) => any;
    globalConfig: import("vue").ComputedRef<{} & (({
        readonly expandIcon: any;
        readonly sortIcon: any;
        readonly filterIcon: any;
        readonly treeExpandAndFoldIcon: any;
        readonly hideSortTips: false;
        readonly size: "medium";
    } & {
        readonly empty: "暂无数据";
        readonly loadingText: "正在加载中，请稍后";
        readonly loadingMoreText: "点击加载更多";
        readonly filterInputPlaceholder: "请输入内容（无默认值）";
        readonly sortAscendingOperationText: "点击升序";
        readonly sortCancelOperationText: "点击取消排序";
        readonly sortDescendingOperationText: "点击降序";
        readonly clearFilterResultButtonText: "清空筛选";
        readonly columnConfigButtonText: "列配置";
        readonly columnConfigTitleText: "表格列配置";
        readonly columnConfigDescriptionText: "请选择需要在表格中显示的数据列";
        readonly confirmText: "确认";
        readonly cancelText: "取消";
        readonly resetText: "重置";
        readonly selectAllText: "全选";
        readonly searchResultText: "搜索“{result}”，找到 {count} 条结果";
    }) | TableConfig) & TableConfig>;
    tableSortClasses: {
        sortable: string;
        sortColumn: string;
        title: string;
        trigger: string;
        doubleIcon: string;
        sortIcon: string;
        iconDirection: {
            asc: string;
            desc: string;
        };
        iconActive: string;
        iconDefault: string;
    };
    negativeRotate180: string;
    allowSortTypes: import("vue").ComputedRef<SortTypeEnums>;
    getSortIcon: (direction: string, activeClass: string) => JSX.Element;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "sort-icon-click"[], "sort-icon-click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    sortType: {
        type: PropType<SortType>;
        default: string;
    };
    sortOrder: {
        type: StringConstructor;
        default: () => string;
    };
    locale: PropType<TableConfig>;
    sortIcon: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    tooltipProps: PropType<import("../tooltip").TdTooltipProps>;
    hideSortTips: BooleanConstructor;
}>> & {
    "onSort-icon-click"?: (...args: any[]) => any;
}, {
    hideSortTips: boolean;
    sortType: SortType;
    sortOrder: string;
}, {}>;
export default _default;
