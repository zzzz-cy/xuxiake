/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var hooks_useConfig = require('../hooks/useConfig.js');
var descriptions_const_index = require('./const/index.js');
var descriptions_utils_index = require('./utils/index.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-14f69041.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0a56babd.js');
require('dayjs');
require('lodash/isArray');
require('./interface.js');

var DescriptionsRow = Vue.defineComponent({
  name: "TDescriptionsRow",
  props: {
    row: Array,
    itemType: String
  },
  setup: function setup(props) {
    var descriptionsProps = Vue.inject(descriptions_const_index.descriptionsKey);
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("descriptions");
    var _useConfig = configProvider_useConfig.useConfig("descriptions"),
      globalConfig = _useConfig.globalConfig;
    var layoutIsHorizontal = Vue.computed(function () {
      return descriptionsProps.layout === "horizontal";
    });
    var itemLayoutIsHorizontal = Vue.computed(function () {
      return descriptionsProps.itemLayout === "horizontal";
    });
    var label = function label(node) {
      var labelClass = ["".concat(COMPONENT_NAME.value, "__label")];
      var label2 = null;
      var span = null;
      if (descriptions_utils_index.itemTypeIsProps(props.itemType)) {
        label2 = node.label;
        span = node.span;
      } else {
        label2 = descriptions_utils_index.renderVNodeTNode(node, "label");
        span = node.props.span;
      }
      var labelSpan = layoutIsHorizontal.value ? itemLayoutIsHorizontal.value ? 1 : span : 1;
      return Vue.createVNode("td", Vue.mergeProps({
        "colspan": labelSpan,
        "class": labelClass
      }, {
        style: descriptionsProps.labelStyle
      }), [label2, descriptionsProps.colon && globalConfig.value.colonText]);
    };
    var content = function content(node) {
      var contentClass = ["".concat(COMPONENT_NAME.value, "__content")];
      var content2 = null;
      var span = null;
      if (descriptions_utils_index.itemTypeIsProps(props.itemType)) {
        content2 = node.content;
        span = node.span;
      } else {
        content2 = descriptions_utils_index.renderVNodeTNode(node, "content", "default");
        span = node.props.span;
      }
      var contentSpan = layoutIsHorizontal.value ? span > 1 && itemLayoutIsHorizontal.value ? span * 2 - 1 : span : 1;
      return Vue.createVNode("td", Vue.mergeProps({
        "colspan": contentSpan,
        "class": contentClass
      }, {
        style: descriptionsProps.contentStyle
      }), [content2]);
    };
    var hh = function hh() {
      return Vue.createVNode("tr", null, [props.row.map(function (node) {
        return Vue.createVNode(Vue.Fragment, null, [label(node), content(node)]);
      })]);
    };
    var hv = function hv() {
      return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("tr", null, [props.row.map(function (node) {
        return label(node);
      })]), Vue.createVNode("tr", null, [props.row.map(function (node) {
        return content(node);
      })])]);
    };
    var vh = function vh() {
      return Vue.createVNode(Vue.Fragment, null, [props.row.map(function (node) {
        return Vue.createVNode("tr", null, [label(node), content(node)]);
      })]);
    };
    var vv = function vv() {
      return Vue.createVNode(Vue.Fragment, null, [props.row.map(function (node) {
        return Vue.createVNode(Vue.Fragment, null, [Vue.createVNode("tr", null, [label(node)]), Vue.createVNode("tr", null, [content(node)])]);
      })]);
    };
    return function () {
      return Vue.createVNode(Vue.Fragment, null, [layoutIsHorizontal.value ? itemLayoutIsHorizontal.value ? hh() : hv() : itemLayoutIsHorizontal.value ? vh() : vv()]);
    };
  }
});

exports["default"] = DescriptionsRow;
//# sourceMappingURL=descriptions-row.js.map
