/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var Vue = require('vue');
var hooks_useConfig = require('../hooks/useConfig.js');
var typography_titleProps = require('./title-props.js');
var typography_ellipsis = require('./ellipsis.js');
var hooks_tnode = require('../hooks/tnode.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../_chunks/dep-14f69041.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-0a56babd.js');
require('dayjs');
require('lodash/isArray');
require('@babel/runtime/helpers/defineProperty');
require('./paragraph-props.js');
require('../tooltip/index.js');
require('../tooltip/tooltip.js');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/omit');
require('../tooltip/props.js');
require('../popup/props.js');
require('../popup/index.js');
require('../popup/popup.js');
require('@popperjs/core');
require('lodash/isObject');
require('lodash/debounce');
require('../hooks/useVModel.js');
require('lodash/kebabCase');
require('../utils/dom.js');
require('../utils/easing.js');
require('../_common/js/utils/set-style.js');
require('../popup/container.js');
require('../hooks/useResizeObserver.js');
require('../utils/withInstall.js');
require('lodash/camelCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('../tooltip/util.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !Vue.isVNode(s);
}
var _Title = Vue.defineComponent({
  name: "TTypographyTitle",
  props: typography_titleProps["default"],
  setup: function setup(props2) {
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("typography");
    var renderContent = hooks_tnode.useContent();
    return function () {
      var _slot;
      var Tag = props2.level;
      var content = renderContent("default", "content");
      return props2.ellipsis ? Vue.createVNode(typography_ellipsis["default"], Vue.mergeProps(props2, {
        "class": COMPONENT_NAME.value
      }), _isSlot(_slot = Vue.h.apply(void 0, [Tag].concat(_toConsumableArray__default["default"](content)))) ? _slot : {
        "default": function _default() {
          return [_slot];
        }
      }) : Vue.createVNode(Vue.Fragment, null, [Vue.h.apply(void 0, [Tag, {
        "class": COMPONENT_NAME.value
      }].concat(_toConsumableArray__default["default"](content)))]);
    };
  }
});

exports["default"] = _Title;
//# sourceMappingURL=title.js.map
