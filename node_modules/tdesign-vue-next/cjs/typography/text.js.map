{"version":3,"file":"text.js","sources":["../../src/typography/text.tsx"],"sourcesContent":["import { computed, defineComponent, ref } from 'vue';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport props from './text-props';\nimport copy from './utils/copy-to-clipboard';\nimport { CopyIcon, CheckIcon } from 'tdesign-icons-vue-next';\nimport Ellipsis from './ellipsis';\nimport TTooltip from '../tooltip';\nimport TButton from '../button';\nimport { useConfig } from '../config-provider/useConfig';\nimport { useContent } from '../hooks/tnode';\n\nimport type { TdTextProps } from './type';\nimport type { TdTooltipProps } from '../tooltip/type';\n\nexport default defineComponent({\n  name: 'TTypographyText',\n  props,\n  setup(props, { slots }) {\n    const COMPONENT_NAME = usePrefixClass('typography');\n    const { globalConfig } = useConfig('typography');\n    const isCopied = ref(false);\n    const renderContent = useContent();\n\n    const wrapperDecorations = (\n      { code, underline, delete: del, strong, keyboard, mark, italic }: TdTextProps,\n      content: any,\n    ) => {\n      let currentContent = content;\n\n      function wrap(needed: boolean, Tag: string, styles: object = {}) {\n        if (!needed) return;\n        currentContent = <Tag style={styles}>{currentContent}</Tag>;\n      }\n\n      wrap(strong, 'strong');\n      wrap(underline, 'u');\n      wrap(del, 'del');\n      wrap(code, 'code');\n      wrap(mark !== false, 'mark', mark ? { color: mark } : {});\n      wrap(keyboard, 'kbd');\n      wrap(italic, 'i');\n      return currentContent;\n    };\n\n    const classList = computed(() => {\n      const { theme, disabled } = props;\n      const prefix = COMPONENT_NAME.value;\n      const list: string[] = [prefix];\n      if (disabled) {\n        list.push(`${prefix}--disabled`);\n      } else if (theme && ['primary', 'secondary', 'success', 'warning', 'error'].includes(theme)) {\n        list.push(`${prefix}--${theme}`);\n      }\n      return list;\n    });\n\n    const tooltipText = computed(() => {\n      const { copyable } = props;\n      if (isCopied.value) return globalConfig.value.copiedText;\n      else if (typeof copyable === 'object') return copyable.tooltipProps?.content;\n      return null;\n    });\n\n    const content = computed(() => {\n      return props.content || slots?.default();\n    });\n\n    const renderCopy = () => {\n      const { copyable } = props;\n      if (!copyable) return;\n\n      let icon: any = isCopied.value ? () => <CheckIcon /> : () => <CopyIcon />;\n      let tooltipConf: TdTooltipProps = {\n        theme: 'default',\n      };\n\n      let onCopy = () => {};\n      if (typeof copyable === 'object') {\n        if (copyable.suffix && !isCopied.value) {\n          icon = copyable.suffix;\n        }\n        if (copyable.tooltipProps) {\n          tooltipConf = copyable.tooltipProps;\n        }\n        if (typeof copyable.onCopy === 'function') {\n          onCopy = copyable.onCopy;\n        }\n      }\n      return (\n        <TTooltip {...tooltipConf} content={tooltipText.value}>\n          <TButton icon={icon} shape=\"square\" theme=\"primary\" variant=\"text\" onClick={(e) => onCopyClick(e, onCopy)} />\n        </TTooltip>\n      );\n    };\n\n    const getChildrenText = () => {\n      if (typeof content.value === 'string') {\n        return content.value;\n      } else if (Array.isArray(content.value)) {\n        return content.value.map((v) => v.children).join('');\n      }\n    };\n\n    const onCopyClick = (e: MouseEvent, cb: Function) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      isCopied.value = true;\n      setTimeout(() => {\n        isCopied.value = false;\n      }, 1500);\n\n      copy(getChildrenText());\n      cb?.();\n    };\n\n    return () => {\n      const content = renderContent('default', 'content');\n      return props.ellipsis ? (\n        <Ellipsis {...props} class={classList.value}>\n          {wrapperDecorations(props, content)}\n          {props.copyable ? renderCopy() : null}\n        </Ellipsis>\n      ) : (\n        <span class={classList.value}>\n          {wrapperDecorations(props, content)}\n          {props.copyable ? renderCopy() : null}\n        </span>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","props","setup","slots","_ref","COMPONENT_NAME","usePrefixClass","_useConfig","useConfig","globalConfig","isCopied","ref","renderContent","useContent","wrapperDecorations","_ref2","content","code","underline","del","strong","keyboard","mark","italic","currentContent","wrap","needed","Tag","styles","arguments","length","undefined","_currentContent","_createVNode","color","classList","computed","theme","disabled","prefix","value","list","push","concat","includes","tooltipText","_copyable$tooltipProp","copyable","copiedText","_typeof","tooltipProps","renderCopy","icon","CheckIcon","CopyIcon","tooltipConf","onCopy","suffix","TTooltip","_mergeProps","onClick","e","onCopyClick","getChildrenText","Array","isArray","map","v","children","join","cb","preventDefault","stopPropagation","setTimeout","copy","ellipsis","Ellipsis","_default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS2B,SAAAA,QAAAC,CAAA,EAAA;AAAA,EAAA,OAAA,OAAAA,CAAA,KAAA,UAAA,IAAAC,MAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAJ,CAAA,CAAAK,KAAAA,iBAAAA,IAAAA,CAAAA,WAAA,CAAAL,CAAA,CAAA,CAAA;AAAA,CAAA;AAK3B,YAAeM,mBAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,iBAAA;AACNC,EAAAA,KAAA,EAAAA,+BAAA;AACAC,EAAAA,KAAMD,WAANC,KAAMD,CAAAA,MAAAA,EAAAA,IAAAA,EAAkB;AAAA,IAAA,IAATE,KAAA,GAAAC,IAAA,CAAAD,KAAA,CAAA;AACP,IAAA,IAAAE,cAAA,GAAiBC,+BAAe,YAAY,CAAA,CAAA;AAClD,IAAA,IAAAC,UAAA,GAAyBC,kCAAA,CAAU,YAAY,CAAA;MAAvCC,YAAA,GAAAF,UAAA,CAAAE,YAAA,CAAA;AACF,IAAA,IAAAC,QAAA,GAAWC,QAAI,KAAK,CAAA,CAAA;AAC1B,IAAA,IAAMC,gBAAgBC,sBAAW,EAAA,CAAA;IAEjC,IAAMC,kBAAqB,GAAA,SAArBA,kBAAqBA,CAAAC,KAAA,EAEzBC,QACG,EAAA;AAAA,MAAA,IAFDC,IAAA,GAAAF,KAAA,CAAAE,IAAA;QAAMC,SAAW,GAAAH,KAAA,CAAXG,SAAW;AAAQC,QAAAA,GAAK,GAAAJ,KAAA,CAAA,QAAA,CAAA;QAAAK,MAAA,GAAAL,KAAA,CAAAK,MAAA;QAAQC,QAAU,GAAAN,KAAA,CAAVM,QAAU;QAAAC,IAAA,GAAAP,KAAA,CAAAO,IAAA;QAAMC,MAAO,GAAAR,KAAA,CAAPQ,MAAO,CAAA;MAG/D,IAAIC,cAAiBR,GAAAA,QAAAA,CAAAA;AAErB,MAAA,SAASS,IAAKA,CAAAC,MAAA,EAAiBC,GAAa,EAAqB;AAAA,QAAA,IAArBC,MAAA,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAiB,EAAI,CAAA;QAC/D,IAAI,CAACH,MAAA,EAAQ,OAAA;AAAA,QAAA,IAAAM,eAAA,GAAA,YAAA;AAAA,UAAA,OACyBR;;QAAtCA,cAAA,GAAAS,eAAA,CAAAN,GAAA,EAAA;UAAA,OAA6BC,EAAAA,MAAAA;AAAA,SAAA,EAAApC,OAAA,CAASgC,kBAAAA;;;;SAApB,CAAA,CAAA;AACpB,OAAA;AAEAC,MAAAA,IAAA,CAAKL,QAAQ,QAAQ,CAAA,CAAA;AACrBK,MAAAA,IAAA,CAAKP,WAAW,GAAG,CAAA,CAAA;AACnBO,MAAAA,IAAA,CAAKN,KAAK,KAAK,CAAA,CAAA;AACfM,MAAAA,IAAA,CAAKR,MAAM,MAAM,CAAA,CAAA;MACZQ,IAAA,CAAAH,IAAA,KAAS,OAAO,MAAQ,EAAAA,IAAA,GAAO;AAAEY,QAAAA,KAAO,EAAAZ,IAAAA;OAAS,GAAA,EAAE,CAAA,CAAA;AACxDG,MAAAA,IAAA,CAAKJ,UAAU,KAAK,CAAA,CAAA;AACpBI,MAAAA,IAAA,CAAKF,QAAQ,GAAG,CAAA,CAAA;AACT,MAAA,OAAAC,cAAA,CAAA;KACT,CAAA;AAEM,IAAA,IAAAW,SAAA,GAAYC,aAAS,YAAM;AACzB,MAAA,IAAEC,KAAO,GAAapC,MAAAA,CAApBoC,KAAO;QAAAC,QAAA,GAAarC,MAAAA,CAAbqC,QAAA,CAAA;AACf,MAAA,IAAMC,SAASlC,cAAe,CAAAmC,KAAA,CAAA;AACxB,MAAA,IAAAC,IAAA,GAAiB,CAACF,MAAM,CAAA,CAAA;AAC9B,MAAA,IAAID,QAAU,EAAA;AACPG,QAAAA,IAAA,CAAAC,IAAA,CAAA,EAAA,CAAAC,MAAA,CAAQJ,MAAkB,eAAA,CAAA,CAAA;OACjC,MAAA,IAAWF,KAAS,IAAA,CAAC,SAAW,EAAA,WAAA,EAAa,SAAW,EAAA,SAAA,EAAW,OAAO,CAAA,CAAEO,QAAS,CAAAP,KAAK,CAAG,EAAA;QACtFI,IAAA,CAAAC,IAAA,CAAA,EAAA,CAAAC,MAAA,CAAQJ,MAAA,EAAA,IAAA,CAAA,CAAAI,MAAA,CAAWN,KAAO,CAAA,CAAA,CAAA;AACjC,OAAA;AACO,MAAA,OAAAI,IAAA,CAAA;AACT,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAI,WAAA,GAAcT,aAAS,YAAM;AAAA,MAAA,IAAAU,qBAAA,CAAA;AAC3B,MAAA,IAAEC,WAAa9C,MAAAA,CAAb8C;AACR,MAAA,IAAIrC,QAAS,CAAA8B,KAAA,EAAO,OAAO/B,aAAa+B,KAAM,CAAAQ,UAAA,CAAA,KAAA,IACrCC,2BAAA,CAAOF,QAAa,CAAA,KAAA,QAAA,EAAU,OAAAD,CAAAA,qBAAA,GAAOC,SAASG,YAAc,MAAAJ,IAAAA,IAAAA,qBAAA,KAAvBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAuB9B,OAAA,CAAA;AAC9D,MAAA,OAAA,IAAA,CAAA;AACT,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAA,OAAA,GAAUoB,aAAS,YAAM;MACtBnC,OAAAA,MAAAA,CAAMe,OAAW,KAAAb,KAAA,KAAAA,IAAAA,IAAAA,KAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAA,CAAe,SAAA,CAAA,EAAA,CAAA,CAAA;AACzC,KAAC,CAAA,CAAA;AAED,IAAA,IAAMgD,aAAa,SAAbA,aAAmB;AACjB,MAAA,IAAEJ,WAAa9C,MAAAA,CAAb8C;MACR,IAAI,CAACA,QAAA,EAAU,OAAA;AAEX,MAAA,IAAAK,IAAA,GAAY1C,SAAS8B,KAAQ,GAAA,YAAA;QAAA,OAAAP,eAAA,CAAAoB,6BAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AAAA,OAAiB,GAAK,YAAA;QAAA,OAAApB,eAAA,CAAAqB,4BAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA;OAAgB,CAAA;AACvE,MAAA,IAAIC,WAA8B,GAAA;AAChClB,QAAAA,KAAO,EAAA,SAAA;OACT,CAAA;AAEA,MAAA,IAAImB,SAAS,SAATA,SAAe,EAAC,CAAA;AAChB,MAAA,IAAAP,2BAAA,CAAOF,cAAa,QAAU,EAAA;QAChC,IAAIA,QAAS,CAAAU,MAAA,IAAU,CAAC/C,QAAA,CAAS8B,KAAO,EAAA;UACtCY,IAAA,GAAOL,QAAS,CAAAU,MAAA,CAAA;AAClB,SAAA;QACA,IAAIV,SAASG,YAAc,EAAA;UACzBK,WAAA,GAAcR,QAAS,CAAAG,YAAA,CAAA;AACzB,SAAA;AACI,QAAA,IAAA,OAAOH,QAAS,CAAAS,MAAA,KAAW,UAAY,EAAA;UACzCA,MAAA,GAAST,QAAS,CAAAS,MAAA,CAAA;AACpB,SAAA;AACF,OAAA;AAEE,MAAA,OAAAvB,eAAA,CAAAyB,qBAAA,EAAAC,cAAA,CAAcJ,WAAA,EAAA;AAAA,QAAA,SAAA,EAAsBV,WAAA,CAAYL,KAAAA;;;;oBAC/BY,IAAA;AAAA,YAAA,OAAA,EAAA,QAAA;AAAA,YAAA,OAAA,EAAA,SAAA;AAAA,YAAA,SAAA,EAAA,MAAA;YAAA,SAA6D,EAAA,SAAAQ,QAACC,CAAA,EAAA;AAAA,cAAA,OAAMC,YAAYD,CAAG,EAAAL,MAAM,CAAG,CAAA;AAAA,aAAA;AAAA,WAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA,CAAA;KAGjH,CAAA;AAEA,IAAA,IAAMO,kBAAkB,SAAlBA,kBAAwB;AACxB,MAAA,IAAA,OAAO/C,OAAQ,CAAAwB,KAAA,KAAU,QAAU,EAAA;QACrC,OAAOxB,OAAQ,CAAAwB,KAAA,CAAA;OACN,MAAA,IAAAwB,KAAA,CAAMC,OAAQ,CAAAjD,OAAA,CAAQwB,KAAK,CAAG,EAAA;AAChC,QAAA,OAAAxB,OAAA,CAAQwB,MAAM0B,GAAI,CAAA,UAACC;iBAAMA,CAAE,CAAAC,QAAQ,CAAA;AAAA,SAAA,CAAE,CAAAC,IAAA,CAAK,EAAE,CAAA,CAAA;AACrD,OAAA;KACF,CAAA;IAEM,IAAAP,WAAA,GAAc,SAAdA,WAAAA,CAAeD,CAAA,EAAeS,EAAiB,EAAA;MACnDT,CAAA,CAAEU,cAAe,EAAA,CAAA;MACjBV,CAAA,CAAEW,eAAgB,EAAA,CAAA;MAElB9D,QAAA,CAAS8B,KAAQ,GAAA,IAAA,CAAA;AACjBiC,MAAAA,UAAA,CAAW,YAAM;QACf/D,QAAA,CAAS8B,KAAQ,GAAA,KAAA,CAAA;SAChB,IAAI,CAAA,CAAA;AAEPkC,MAAAA,iDAAA,CAAKX,iBAAiB,CAAA,CAAA;AACjBO,MAAAA,EAAA,KAAAA,IAAAA,IAAAA,EAAA,KAAAA,KAAAA,CAAAA,IAAAA,EAAA,EAAA,CAAA;KACP,CAAA;AAEA,IAAA,OAAO,YAAM;AACLtD,MAAAA,IAAAA,QAAAA,GAAUJ,aAAc,CAAA,SAAA,EAAW,SAAS,CAAA,CAAA;MAClD,OAAOX,OAAM0E,QACX,GAAA1C,eAAA,CAAA2C,8BAAA,EAAAjB,cAAA,CAAc1D,MAAAA,EAAAA;AAAAA,QAAAA,OAAAA,EAAckC,SAAU,CAAAK,KAAAA;AAAA,OAAA,CAAA,EAAA;AAAA,QAAA,SAAA,EAAA,SAAAqC,QAAA,GAAA;AAAA,UAAA,OAAA,CACnC/D,kBAAA,CAAmBb,QAAOe,QAAO,CAAA,EACjCf,MAAAA,CAAM8C,QAAW,GAAAI,UAAA,EAAe,GAAA,IAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA,GAAAlB,eAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EAGtBE,SAAU,CAAAK,KAAAA;AAAA,OAAA,EAAA,CACpB1B,kBAAA,CAAmBb,QAAOe,QAAO,CAAA,EACjCf,MAAAA,CAAM8C,QAAW,GAAAI,UAAA,EAAe,GAAA,IAAA,CAFlC,CAAA,CAAA;KAKL,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}