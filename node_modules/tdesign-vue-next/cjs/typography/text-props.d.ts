import { TdTextProps } from '../typography/type';
import { PropType } from 'vue';
declare const _default: {
    code: BooleanConstructor;
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    copyable: {
        type: PropType<boolean | import("../typography/type").TypographyCopyable>;
        default: boolean | import("../typography/type").TypographyCopyable;
    };
    default: {
        type: PropType<string | ((h: typeof import("vue").h) => import("..").SlotReturnValue)>;
    };
    delete: BooleanConstructor;
    disabled: BooleanConstructor;
    ellipsis: {
        type: PropType<boolean | import("../typography/type").TypographyEllipsis>;
        default: boolean | import("../typography/type").TypographyEllipsis;
    };
    italic: BooleanConstructor;
    keyboard: BooleanConstructor;
    mark: {
        type: PropType<string | boolean>;
        default: string | boolean;
    };
    strong: BooleanConstructor;
    theme: {
        type: PropType<"error" | "success" | "primary" | "warning" | "secondary">;
        validator(val: TdTextProps['theme']): boolean;
    };
    underline: BooleanConstructor;
};
export default _default;
