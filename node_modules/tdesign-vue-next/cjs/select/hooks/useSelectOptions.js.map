{"version":3,"file":"useSelectOptions.js","sources":["../../../src/select/hooks/useSelectOptions.ts"],"sourcesContent":["import { computed, Slots, Ref, ref } from 'vue';\nimport isArray from 'lodash/isArray';\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\n\nimport { useChildComponentSlots } from '../../hooks/slot';\nimport { TdSelectProps, TdOptionProps, SelectOptionGroup, SelectValue, SelectOption } from '../type';\nimport { KeysType } from '../../common';\n\ntype UniOption = (TdOptionProps | SelectOptionGroup) & {\n  index?: number;\n  slots?: Slots;\n};\n\nexport const useSelectOptions = (props: TdSelectProps, keys: Ref<KeysType>, inputValue: Ref<string>) => {\n  const getChildComponentSlots = useChildComponentSlots();\n  const optionsCache = ref<SelectOption[]>([]);\n\n  const options = computed(() => {\n    let dynamicIndex = 0;\n    // 统一处理 keys,处理通用数据\n    const innerOptions: UniOption[] =\n      props.options?.map((option) => {\n        const getFormatOption = (option: TdOptionProps) => {\n          const { value, label, disabled } = keys.value;\n          const res = {\n            ...option,\n            index: dynamicIndex,\n            label: get(option, label),\n            value: get(option, value),\n            disabled: get(option, disabled) || false,\n          };\n          dynamicIndex++;\n          return res;\n        };\n        if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n          return {\n            ...option,\n            children: (option as SelectOptionGroup).children.map((child) => getFormatOption(child)),\n          };\n        }\n        return getFormatOption(option);\n      }) || [];\n\n    // 处理 slots\n    const optionsSlots = getChildComponentSlots('Option');\n    const groupSlots = getChildComponentSlots('OptionGroup');\n\n    if (isArray(groupSlots)) {\n      for (const group of groupSlots) {\n        const groupOption = {\n          group: group.props?.label,\n          ...group.props,\n          children: [] as TdOptionProps[],\n        };\n        const res = getChildComponentSlots('Option', group.children as Slots);\n        if (!isArray(res)) continue;\n        for (const child of res) {\n          groupOption.children.push({\n            ...child.props,\n            slots: child.children,\n            index: dynamicIndex,\n          } as TdOptionProps);\n          dynamicIndex++;\n        }\n\n        innerOptions.push(groupOption);\n      }\n    }\n    if (isArray(optionsSlots)) {\n      for (const child of optionsSlots) {\n        innerOptions.push({\n          ...child.props,\n          slots: child.children,\n          index: dynamicIndex,\n        } as TdOptionProps);\n        dynamicIndex++;\n      }\n    }\n    return innerOptions;\n  });\n\n  const optionsList = computed(() => {\n    const res: TdOptionProps[] = [];\n    const getOptionsList = (options: TdOptionProps[]) => {\n      for (const option of options) {\n        if ((option as SelectOptionGroup).group) {\n          getOptionsList((option as SelectOptionGroup).children);\n        } else {\n          res.push(option);\n        }\n      }\n    };\n    getOptionsList(options.value);\n    return res;\n  });\n\n  const optionsMap = computed(() => {\n    const res = new Map<SelectValue, TdOptionProps>();\n    // map以最新的为主 避免存在重复value更新的场景 https://github.com/Tencent/tdesign-vue-next/issues/2646\n    optionsCache.value.concat(optionsList.value).forEach((option: TdOptionProps) => {\n      res.set(option.value, option);\n    });\n    return res;\n  });\n\n  const displayOptions = computed(() => {\n    if (props.onSearch && props.filterable) return options.value; // 远程搜索时，不执行内部的过滤，不干预用户的自行处理，如输入首字母搜索中文的场景等\n\n    if (!inputValue.value || !(props.filterable || isFunction(props.filter))) return options.value;\n\n    const filterMethods = (option: SelectOption) => {\n      if (isFunction(props.filter)) {\n        return props.filter(`${inputValue.value}`, option);\n      }\n\n      return option.label?.toLowerCase?.().indexOf(`${inputValue.value}`.toLowerCase()) > -1;\n    };\n\n    const res: SelectOption[] = [];\n\n    options.value.forEach((option) => {\n      if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n        res.push({\n          ...option,\n          children: (option as SelectOptionGroup).children.filter(filterMethods),\n        });\n      }\n      if (filterMethods(option)) {\n        res.push(option);\n      }\n    });\n\n    return res;\n  });\n\n  return {\n    options,\n    optionsMap,\n    optionsList,\n    optionsCache,\n    displayOptions,\n  };\n};\n"],"names":["useSelectOptions","props","keys","inputValue","getChildComponentSlots","useChildComponentSlots","optionsCache","ref","options","computed","_props$options","dynamicIndex","innerOptions","map","option","getFormatOption","_keys$value","value","label","disabled","res","_objectSpread","index","get","group","children","child","optionsSlots","groupSlots","isArray","_iterator","_createForOfIteratorHelper","_step","s","n","done","_group$props","groupOption","_iterator2","_step2","push","slots","err","e","f","_iterator3","_step3","optionsList","getOptionsList","_iterator4","_step4","optionsMap","Map","concat","forEach","set","displayOptions","onSearch","filterable","isFunction","filter","filterMethods","_option$label","_option$label$toLower","toLowerCase","call","indexOf"],"mappings":"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"}