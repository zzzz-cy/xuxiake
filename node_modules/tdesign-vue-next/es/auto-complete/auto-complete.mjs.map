{"version":3,"file":"auto-complete.mjs","sources":["../../src/auto-complete/auto-complete.tsx"],"sourcesContent":["import { computed, ref, defineComponent, toRefs, nextTick } from 'vue';\nimport props from './props';\nimport { TdAutoCompleteProps } from './type';\nimport TInput, { InputProps, StrInputProps } from '../input';\nimport Popup, { PopupProps } from '../popup';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport AutoCompleteOptionList from './option-list';\nimport useVModel from '../hooks/useVModel';\nimport { useConfig } from '../config-provider/useConfig';\nimport { ClassName } from '../common';\nimport { useContent, useTNodeJSX } from '../hooks';\nimport { useDisabled } from '../hooks/useDisabled';\nimport { useReadonly } from '../hooks/useReadonly';\n\nexport default defineComponent({\n  name: 'TAutoComplete',\n\n  props,\n\n  setup(props: TdAutoCompleteProps, { slots }) {\n    const { value, modelValue } = toRefs(props);\n    const [tValue, setTValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const { classPrefix, sizeClassNames } = useCommonClassName();\n    const { globalConfig: global } = useConfig('input');\n    const isDisabled = useDisabled();\n    const isReadonly = useReadonly();\n    const popupVisible = ref();\n    const optionListRef = ref();\n\n    const getOverlayStyle = (trigger: HTMLElement, popupElement: HTMLElement) => {\n      const triggerWidth = trigger.getBoundingClientRect().width || trigger.offsetWidth || trigger.clientWidth;\n      const popupWidth =\n        popupElement.getBoundingClientRect().width || popupElement.offsetWidth || popupElement.clientWidth;\n      return {\n        width: triggerWidth >= popupWidth ? `${triggerWidth}px` : 'auto',\n        ...props.popupProps?.overlayInnerStyle,\n      };\n    };\n\n    const classes = computed(() => [`${classPrefix.value}-auto-complete`]);\n    const popupClasses = computed(() => {\n      let classes: ClassName = [`${classPrefix.value}-select__dropdown`];\n      if (props.popupProps?.overlayClassName) {\n        classes = classes.concat(props.popupProps.overlayClassName);\n      }\n      return classes;\n    });\n    const popupInnerClasses = computed(() => {\n      let classes: ClassName = [`${classPrefix.value}-select__dropdown-inner`];\n      if (props.popupProps?.overlayInnerClassName) {\n        classes = classes.concat(props.popupProps.overlayInnerClassName);\n      }\n      return classes;\n    });\n\n    const onInputChange: StrInputProps['onChange'] = (value, context) => {\n      setTValue(value, context);\n    };\n\n    const innerInputProps = computed(() => {\n      const tProps: InputProps = {\n        value: tValue.value,\n        size: props.size,\n        ...props.inputProps,\n      };\n      return tProps;\n    });\n\n    const onInnerFocus: StrInputProps['onFocus'] = (value, context) => {\n      if (isReadonly.value || isDisabled.value) return;\n      popupVisible.value = true;\n      props.onFocus?.({ ...context, value });\n      nextTick(() => {\n        optionListRef.value?.addKeyboardListener();\n      });\n    };\n\n    const onInnerBlur: StrInputProps['onBlur'] = (value, context) => {\n      props.onBlur?.({ ...context, value });\n    };\n\n    const onInnerCompositionend: InputProps['onCompositionend'] = (value, context) => {\n      props.onCompositionend?.({ ...context, value });\n    };\n\n    const onInnerCompositionstart: InputProps['onCompositionstart'] = (value, context) => {\n      props.onCompositionstart?.({ ...context, value });\n    };\n\n    const onInnerEnter: StrInputProps['onEnter'] = (value, context) => {\n      props.onEnter?.({ ...context, value });\n    };\n\n    const onInnerSelect: TdAutoCompleteProps['onSelect'] = (value, context) => {\n      if (isReadonly.value || isDisabled.value) return;\n      popupVisible.value = false;\n      setTValue(value, context);\n      props.onSelect?.(value, context);\n    };\n\n    const onPopupVisibleChange: PopupProps['onVisibleChange'] = (visible, { trigger }) => {\n      if (isReadonly.value || isDisabled.value) return;\n      if (trigger !== 'trigger-element-click') {\n        popupVisible.value = visible;\n      }\n    };\n\n    return () => {\n      // 触发元素\n      const triggerNode = renderContent('default', 'triggerElement') || (\n        <TInput\n          borderless={props.borderless}\n          placeholder={props.placeholder ?? global.value.placeholder}\n          tips={props.tips}\n          status={props.status}\n          readonly={isReadonly.value}\n          disabled={isDisabled.value}\n          autofocus={props.autofocus}\n          clearable={props.clearable}\n          onChange={onInputChange}\n          onFocus={onInnerFocus}\n          onBlur={onInnerBlur}\n          onClear={props.onClear}\n          onCompositionend={onInnerCompositionend}\n          onCompositionstart={onInnerCompositionstart}\n          onEnter={onInnerEnter}\n          {...innerInputProps.value}\n          v-slots={slots}\n        />\n      );\n      // 联想词列表\n      const listContent = (\n        <AutoCompleteOptionList\n          ref={optionListRef}\n          value={tValue.value}\n          options={props.options}\n          size={props.size}\n          sizeClassNames={sizeClassNames}\n          onSelect={onInnerSelect}\n          popupVisible={popupVisible.value}\n          highlightKeyword={props.highlightKeyword}\n          filterable={props.filterable}\n          filter={props.filter}\n          v-slots={{ option: slots.option }}\n        />\n      );\n      const topContent = renderTNodeJSX('panelTopContent');\n      const bottomContent = renderTNodeJSX('panelBottomContent');\n      const panelContent = Boolean(topContent || props.options?.length || bottomContent) ? (\n        <div class={`${classPrefix.value}-autocomplete__panel`}>\n          {topContent}\n          {listContent}\n          {bottomContent}\n        </div>\n      ) : null;\n      const popupProps = {\n        ...props.popupProps,\n        overlayInnerStyle: getOverlayStyle,\n        overlayInnerClassName: popupInnerClasses.value,\n        overlayClassName: popupClasses.value,\n      };\n      return (\n        <div class={classes.value}>\n          <Popup\n            visible={popupVisible.value}\n            onVisibleChange={onPopupVisibleChange}\n            trigger=\"focus\"\n            placement=\"bottom-left\"\n            hideEmptyPopup={true}\n            content={panelContent ? () => panelContent : null}\n            {...popupProps}\n          >\n            {triggerNode}\n          </Popup>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","props","setup","slots","_ref","_toRefs","toRefs","value","modelValue","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","tValue","setTValue","renderContent","useContent","renderTNodeJSX","useTNodeJSX","_useCommonClassName","useCommonClassName","classPrefix","sizeClassNames","_useConfig","useConfig","global","globalConfig","isDisabled","useDisabled","isReadonly","useReadonly","popupVisible","ref","optionListRef","getOverlayStyle","trigger","popupElement","_props2$popupProps","triggerWidth","getBoundingClientRect","width","offsetWidth","clientWidth","popupWidth","_objectSpread","concat","popupProps","overlayInnerStyle","classes","computed","popupClasses","_props2$popupProps2","overlayClassName","popupInnerClasses","_props2$popupProps3","overlayInnerClassName","onInputChange","context","innerInputProps","tProps","size","inputProps","onInnerFocus","_props2$onFocus","onFocus","nextTick","_optionListRef$value","addKeyboardListener","onInnerBlur","_props2$onBlur","onBlur","onInnerCompositionend","_props2$onComposition","onCompositionend","onInnerCompositionstart","_props2$onComposition2","onCompositionstart","onInnerEnter","_props2$onEnter","onEnter","onInnerSelect","_props2$onSelect","onSelect","onPopupVisibleChange","visible","_ref2","_props2$placeholder","_props2$options","triggerNode","_createVNode","TInput","_mergeProps","borderless","placeholder","tips","status","autofocus","clearable","onClear","listContent","AutoCompleteOptionList","options","highlightKeyword","filterable","filter","option","topContent","bottomContent","panelContent","Boolean","length","Popup","_default"],"mappings":"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"}