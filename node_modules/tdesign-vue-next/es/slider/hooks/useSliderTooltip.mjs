/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-fa52aa21.mjs';
import { ref, computed } from 'vue';
import { formatLabel } from '../util/common.mjs';
import '../../hooks/index.mjs';
import { useTNodeJSX } from '../../hooks/tnode.mjs';
import '../../_chunks/dep-4659d73b.mjs';
import '../../_chunks/dep-03a7fb6c.mjs';
import '../../_chunks/dep-eca422c3.mjs';
import '../../_chunks/dep-bf7257e7.mjs';
import '../../_chunks/dep-eae2a67e.mjs';
import '../../_chunks/dep-626c497d.mjs';
import '../../_chunks/dep-29ef8419.mjs';
import '../../hooks/icon.mjs';
import '../../_chunks/dep-06dcbf4c.mjs';
import '../../_chunks/dep-2b09875b.mjs';
import '../../_chunks/dep-cda4f568.mjs';
import '../../hooks/slot.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-b91a8171.mjs';
import '../../_chunks/dep-1b78414a.mjs';
import '../../_chunks/dep-1a4bb2f2.mjs';
import '../../_chunks/dep-cc8ebcde.mjs';
import '../../_chunks/dep-76958824.mjs';
import '../../_chunks/dep-f5579c03.mjs';
import '../../_chunks/dep-6dc3d0e1.mjs';
import '../../_chunks/dep-d84f19b3.mjs';
import '../../_chunks/dep-3c65fae8.mjs';
import '../../_chunks/dep-03ad9cda.mjs';
import '../../_chunks/dep-7932c2e8.mjs';
import '../../_chunks/dep-ab4bb9b8.mjs';
import '../../_chunks/dep-d8a34055.mjs';
import '../../_chunks/dep-2f6e28a0.mjs';
import '../../_chunks/dep-5a17bf21.mjs';
import '../../_chunks/dep-bad871d5.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-bb899bfd.mjs';
import '../../_chunks/dep-5922c8f3.mjs';
import '../../_chunks/dep-92f86d1d.mjs';
import '../../_chunks/dep-6ab5363f.mjs';
import '../../_chunks/dep-e9841b9e.mjs';
import '../../_chunks/dep-49aeee3c.mjs';
import '../../_chunks/dep-b5bf85f5.mjs';
import '../../_chunks/dep-ec0bbd9f.mjs';
import '../../_chunks/dep-732f0b7d.mjs';
import '../../_chunks/dep-1b9718a2.mjs';
import '../../_chunks/dep-e065dc25.mjs';
import '../../_chunks/dep-400ec705.mjs';
import '../../_chunks/dep-02f9394e.mjs';
import '../../_chunks/dep-1725b1c7.mjs';
import '../../_chunks/dep-532409c5.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-9ed7da3e.mjs';
import '../../_chunks/dep-7f65fc46.mjs';
import '../../_chunks/dep-4f2cabb0.mjs';
import '../../config-provider/type.mjs';
import '../../hooks/useCommonClassName.mjs';
import '../../hooks/useDefaultValue.mjs';
import '../../hooks/useDestroyOnClose.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../hooks/useRipple.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/useVirtualScroll.mjs';
import '../../hooks/useVModel.mjs';
import '../../hooks/useImagePreviewUrl.mjs';
import '../../_chunks/dep-5efe53d1.mjs';
import '../../_chunks/dep-593f2b67.mjs';
import '../../_common/js/upload/utils.mjs';
import '../../_common/js/log/log.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var initialProps = {
  visible: false,
  trigger: "hover",
  showArrow: true,
  overlayInnerStyle: void 0,
  overlayClassName: void 0,
  attach: "body",
  theme: "default"
};
var useSliderTooltip = function useSliderTooltip(tooltipConfig) {
  var tooltipRef = ref();
  var showTooltip = computed({
    get: function get() {
      return !tooltipConfig.value.tooltipProps === false;
    },
    set: function set(val) {
      return val;
    }
  });
  var normalizeProps = ref(_objectSpread({}, initialProps));
  var toggleTooltip = function toggleTooltip(toState) {
    if (!showTooltip.value) return;
    normalizeProps.value.visible = toState;
  };
  var renderTNodeJSX = useTNodeJSX();
  var validProps = computed(function () {
    var _tooltipConfig$value = tooltipConfig.value,
      vertical = _tooltipConfig$value.vertical,
      tooltipProps = _tooltipConfig$value.tooltipProps,
      label = _tooltipConfig$value.label,
      value = _tooltipConfig$value.value,
      position = _tooltipConfig$value.position,
      range = _tooltipConfig$value.range;
    var placement = vertical ? "right" : "top";
    var content = function () {
      if (label === true) {
        return String(value);
      }
      if (typeof label === "string") {
        return formatLabel(label, value);
      }
      return renderTNodeJSX("label", {
        params: range ? {
          value: value,
          position: position
        } : {
          value: value
        }
      });
    }();
    if (tooltipProps instanceof Object) {
      if (!(tooltipProps !== null && tooltipProps !== void 0 && tooltipProps.placement)) {
        normalizeProps.value.placement = placement;
      }
      if (tooltipProps.content) {
        content = tooltipProps.content;
      }
      return _objectSpread(_objectSpread(_objectSpread({}, normalizeProps.value), tooltipProps), {}, {
        content: content
      });
    }
    return _objectSpread(_objectSpread({}, normalizeProps.value), {}, {
      placement: placement,
      content: content
    });
  });
  return {
    tooltipRef: tooltipRef,
    tooltipProps: validProps,
    toggleTooltip: toggleTooltip,
    showTooltip: showTooltip
  };
};

export { useSliderTooltip };
//# sourceMappingURL=useSliderTooltip.mjs.map
