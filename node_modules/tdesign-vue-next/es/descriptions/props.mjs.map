{"version":3,"file":"props.mjs","sources":["../../src/descriptions/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDescriptionsProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否带边框 */\n  bordered: Boolean,\n  /** 字段名右侧是否携带冒号“：” */\n  colon: Boolean,\n  /** 一行 `DescriptionItem` 的数量 */\n  column: {\n    type: Number,\n    default: 2,\n  },\n  /** 自定义描述项内容的样式 */\n  contentStyle: {\n    type: Object as PropType<TdDescriptionsProps['contentStyle']>,\n  },\n  /** 描述项的排列方向 */\n  itemLayout: {\n    type: String as PropType<TdDescriptionsProps['itemLayout']>,\n    default: 'horizontal' as TdDescriptionsProps['itemLayout'],\n    validator(val: TdDescriptionsProps['itemLayout']): boolean {\n      if (!val) return true;\n      return ['horizontal', 'vertical'].includes(val);\n    },\n  },\n  /** 描述项的列表 */\n  items: {\n    type: Array as PropType<TdDescriptionsProps['items']>,\n  },\n  /** 自定义描述项标签的样式 */\n  labelStyle: {\n    type: Object as PropType<TdDescriptionsProps['labelStyle']>,\n  },\n  /** 排列方向 */\n  layout: {\n    type: String as PropType<TdDescriptionsProps['layout']>,\n    default: 'horizontal' as TdDescriptionsProps['layout'],\n    validator(val: TdDescriptionsProps['layout']): boolean {\n      if (!val) return true;\n      return ['horizontal', 'vertical'].includes(val);\n    },\n  },\n  /** 组件尺寸 */\n  size: {\n    type: String as PropType<TdDescriptionsProps['size']>,\n    default: 'medium' as TdDescriptionsProps['size'],\n    validator(val: TdDescriptionsProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 用于设置底层 `table` 单元格、行和列的布局算法，与原生 table-layout css 属性完全一致。`fixed`：采用固定布局算法；`auto`：采用自动布局算法。详情可参考 [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout) */\n  tableLayout: {\n    type: String as PropType<TdDescriptionsProps['tableLayout']>,\n    default: 'fixed' as TdDescriptionsProps['tableLayout'],\n    validator(val: TdDescriptionsProps['tableLayout']): boolean {\n      if (!val) return true;\n      return ['fixed', 'auto'].includes(val);\n    },\n  },\n  /** 描述列表的标题 */\n  title: {\n    type: [String, Function] as PropType<TdDescriptionsProps['title']>,\n  },\n};\n"],"names":["bordered","Boolean","colon","column","type","Number","contentStyle","Object","itemLayout","String","validator","val","includes","items","Array","labelStyle","layout","size","tableLayout","title","Function"],"mappings":";;;;;;AASA,YAAe;AAEbA,EAAAA,QAAU,EAAAC,OAAA;AAEVC,EAAAA,KAAO,EAAAD,OAAA;AAEPE,EAAAA,MAAQ,EAAA;AACNC,IAAAA,IAAM,EAAAC,MAAA;IACN,SAAS,EAAA,CAAA;GACX;AAEAC,EAAAA,YAAc,EAAA;AACZF,IAAAA,IAAM,EAAAG,MAAAA;GACR;AAEAC,EAAAA,UAAY,EAAA;AACVJ,IAAAA,IAAM,EAAAK,MAAA;AACN,IAAA,SAAA,EAAS,YAAA;AACTC,IAAAA,WAAAA,SAAAA,UAAUC,GAAiD,EAAA;AACzD,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,YAAA,EAAc,UAAU,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AAChD,KAAA;GACF;AAEAE,EAAAA,KAAO,EAAA;AACLT,IAAAA,IAAM,EAAAU,KAAAA;GACR;AAEAC,EAAAA,UAAY,EAAA;AACVX,IAAAA,IAAM,EAAAG,MAAAA;GACR;AAEAS,EAAAA,MAAQ,EAAA;AACNZ,IAAAA,IAAM,EAAAK,MAAA;AACN,IAAA,SAAA,EAAS,YAAA;AACTC,IAAAA,WAAAA,SAAAA,UAAUC,GAA6C,EAAA;AACrD,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,YAAA,EAAc,UAAU,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AAChD,KAAA;GACF;AAEAM,EAAAA,IAAM,EAAA;AACJb,IAAAA,IAAM,EAAAK,MAAA;AACN,IAAA,SAAA,EAAS,QAAA;AACTC,IAAAA,WAAAA,SAAAA,UAAUC,GAA2C,EAAA;AACnD,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,OAAS,EAAA,QAAA,EAAU,OAAO,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AAClD,KAAA;GACF;AAEAO,EAAAA,WAAa,EAAA;AACXd,IAAAA,IAAM,EAAAK,MAAA;AACN,IAAA,SAAA,EAAS,OAAA;AACTC,IAAAA,WAAAA,SAAAA,UAAUC,GAAkD,EAAA;AAC1D,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,OAAA,EAAS,MAAM,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AACvC,KAAA;GACF;AAEAQ,EAAAA,KAAO,EAAA;AACLf,IAAAA,IAAA,EAAM,CAACK,MAAA,EAAQW,QAAQ,CAAA;AACzB,GAAA;AACF,CAAA;;;;"}