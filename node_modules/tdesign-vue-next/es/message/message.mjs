/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-fa52aa21.mjs';
import { defineComponent, ref, computed, createVNode, h, onBeforeMount, onMounted } from 'vue';
import { InfoCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, HelpCircleFilledIcon, CloseIcon } from 'tdesign-icons-vue-next';
import { Loading } from '../loading/index.mjs';
import { THEME_LIST } from './const.mjs';
import props from './props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import { fadeOut, fadeIn } from './animation.mjs';
import { useTNodeJSX, useContent } from '../hooks/tnode.mjs';
import { i as isFunction_1 } from '../_chunks/dep-06dcbf4c.mjs';
import '../_chunks/dep-4659d73b.mjs';
import '../_chunks/dep-bff7e93a.mjs';
import '../_chunks/dep-2b09875b.mjs';
import '../_chunks/dep-eca422c3.mjs';
import '../_chunks/dep-49aeee3c.mjs';
import '../_chunks/dep-b5bf85f5.mjs';
import '../_chunks/dep-6dc3d0e1.mjs';
import '../_chunks/dep-76958824.mjs';
import '../_chunks/dep-bf7257e7.mjs';
import '../_chunks/dep-cda4f568.mjs';
import '../_chunks/dep-e9841b9e.mjs';
import '../_chunks/dep-1b9718a2.mjs';
import '../_chunks/dep-92f86d1d.mjs';
import '../_chunks/dep-6ab5363f.mjs';
import '../_chunks/dep-1a4bb2f2.mjs';
import '../_chunks/dep-cc8ebcde.mjs';
import '../_chunks/dep-29ef8419.mjs';
import '../_chunks/dep-f5579c03.mjs';
import '../_chunks/dep-3c65fae8.mjs';
import '../_chunks/dep-eae2a67e.mjs';
import '../_chunks/dep-626c497d.mjs';
import '../_chunks/dep-ec0bbd9f.mjs';
import '../_chunks/dep-e065dc25.mjs';
import '../_chunks/dep-400ec705.mjs';
import '../_chunks/dep-02f9394e.mjs';
import '../_chunks/dep-1725b1c7.mjs';
import '../_chunks/dep-532409c5.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-9ed7da3e.mjs';
import '../_chunks/dep-7f65fc46.mjs';
import '../_chunks/dep-4f2cabb0.mjs';
import '../_chunks/dep-5922c8f3.mjs';
import '../_chunks/dep-1b78414a.mjs';
import '../_chunks/dep-d84f19b3.mjs';
import '../_chunks/dep-732f0b7d.mjs';
import '../_chunks/dep-0b414bea.mjs';
import '../_chunks/dep-4d4e2af1.mjs';
import '../_chunks/dep-fbd4eddb.mjs';
import '../_chunks/dep-ae202bc0.mjs';
import '../_chunks/dep-aeaef131.mjs';
import '../_chunks/dep-ab4bb9b8.mjs';
import '../_chunks/dep-7932c2e8.mjs';
import '../_chunks/dep-69e0f6fc.mjs';
import '../_chunks/dep-ea20409b.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-5efe53d1.mjs';
import '../_chunks/dep-593f2b67.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-4a990ea3.mjs';
import '../_chunks/dep-5d3f7c0e.mjs';
import '../_chunks/dep-03a7fb6c.mjs';
import '../_chunks/dep-73384992.mjs';
import '../_chunks/dep-58a62202.mjs';
import '../_chunks/dep-889e457b.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-b91a8171.mjs';
import '../_chunks/dep-03ad9cda.mjs';
import '../_chunks/dep-d8a34055.mjs';
import '../_chunks/dep-2f6e28a0.mjs';
import '../_chunks/dep-5a17bf21.mjs';
import '../_chunks/dep-bad871d5.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-bb899bfd.mjs';
import '../config-provider/type.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var _Message = defineComponent({
  name: "TMessage",
  props: _objectSpread(_objectSpread({}, props), {}, {
    placement: String
  }),
  setup: function setup(props2, _ref) {
    var slots = _ref.slots,
      expose = _ref.expose;
    var COMPONENT_NAME = usePrefixClass("message");
    var _useGlobalIcon = useGlobalIcon({
        InfoCircleFilledIcon: InfoCircleFilledIcon,
        CheckCircleFilledIcon: CheckCircleFilledIcon,
        ErrorCircleFilledIcon: ErrorCircleFilledIcon,
        HelpCircleFilledIcon: HelpCircleFilledIcon,
        CloseIcon: CloseIcon
      }),
      InfoCircleFilledIcon$1 = _useGlobalIcon.InfoCircleFilledIcon,
      CheckCircleFilledIcon$1 = _useGlobalIcon.CheckCircleFilledIcon,
      ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon,
      HelpCircleFilledIcon$1 = _useGlobalIcon.HelpCircleFilledIcon,
      CloseIcon$1 = _useGlobalIcon.CloseIcon;
    var classPrefix = usePrefixClass();
    var renderTNode = useTNodeJSX();
    var renderContent = useContent();
    var msgRef = ref(null);
    var timer = ref(null);
    var classes = computed(function () {
      var status = {};
      THEME_LIST.forEach(function (t) {
        return status["".concat(classPrefix.value, "-is-").concat(t)] = props2.theme === t;
      });
      return [COMPONENT_NAME.value, status, _defineProperty({}, "".concat(classPrefix.value, "-is-closable"), props2.closeBtn || slots.closeBtn)];
    });
    var close = function close(e) {
      var _props2$onClose, _props2$onCloseBtnCli;
      (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 || _props2$onClose.call(props2, {
        trigger: "close-click",
        e: e
      });
      (_props2$onCloseBtnCli = props2.onCloseBtnClick) === null || _props2$onCloseBtnCli === void 0 || _props2$onCloseBtnCli.call(props2, {
        e: e
      });
    };
    var clearTimer = function clearTimer() {
      props2.duration && clearTimeout(timer.value);
    };
    var setTimer = function setTimer() {
      if (!props2.duration) {
        return;
      }
      timer.value = Number(setTimeout(function () {
        clearTimer();
        var msgDom = msgRef.value;
        fadeOut(msgDom, props2.placement, function () {
          var _props2$onClose2, _props2$onDurationEnd;
          (_props2$onClose2 = props2.onClose) === null || _props2$onClose2 === void 0 || _props2$onClose2.call(props2, {
            trigger: "duration-end"
          });
          (_props2$onDurationEnd = props2.onDurationEnd) === null || _props2$onDurationEnd === void 0 || _props2$onDurationEnd.call(props2);
        });
      }, props2.duration));
    };
    var renderClose = function renderClose() {
      var defaultClose = createVNode(CloseIcon$1, null, null);
      return createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "__close"),
        "onClick": close
      }, [renderTNode("closeBtn", defaultClose)]);
    };
    var renderIcon = function renderIcon() {
      if (props2.icon === false) return;
      if (isFunction_1(props2.icon)) return props2.icon(h);
      if (slots.icon) {
        return slots.icon(null);
      }
      var Icon = {
        info: InfoCircleFilledIcon$1,
        success: CheckCircleFilledIcon$1,
        warning: ErrorCircleFilledIcon$1,
        error: ErrorCircleFilledIcon$1,
        question: HelpCircleFilledIcon$1,
        loading: Loading
      }[props2.theme];
      return createVNode(Icon, null, null);
    };
    onBeforeMount(function () {
      props2.duration && setTimer();
    });
    onMounted(function () {
      var msgDom = msgRef.value;
      fadeIn(msgDom, props2.placement);
    });
    expose({
      close: close
    });
    return function () {
      return createVNode("div", {
        "ref": msgRef,
        "class": classes.value,
        "onMouseenter": clearTimer,
        "onMouseleave": setTimer
      }, [renderIcon(), renderContent("content", "default"), renderClose()]);
    };
  }
});

export { _Message as default };
//# sourceMappingURL=message.mjs.map
