{"version":3,"file":"range-input.mjs","sources":["../../src/range-input/range-input.tsx"],"sourcesContent":["import { defineComponent, ref, toRefs, computed, Fragment } from 'vue';\nimport { CloseCircleFilledIcon as TdCloseCircleFilledIcon } from 'tdesign-icons-vue-next';\n\nimport Input from '../input';\nimport props from './props';\nimport { RangeInputValue, RangeInputPosition } from './type';\n\n// hooks\nimport useVModel from '../hooks/useVModel';\nimport { useDisabled } from '../hooks/useDisabled';\nimport { useReadonly } from '../hooks/useReadonly';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport isArray from 'lodash/isArray';\n\nfunction calcArrayValue(value: unknown | Array<unknown>) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value, value];\n}\n\nexport default defineComponent({\n  name: 'TRangeInput',\n\n  inheritAttrs: false,\n  props,\n\n  setup(props, { expose, attrs }) {\n    const { value, modelValue } = toRefs(props);\n    const { STATUS, SIZE } = useCommonClassName();\n    const classPrefix = usePrefixClass();\n    const COMPONENT_NAME = usePrefixClass('range-input');\n    const { CloseCircleFilledIcon } = useGlobalIcon({ CloseCircleFilledIcon: TdCloseCircleFilledIcon });\n    const renderTNodeJSX = useTNodeJSX();\n\n    const isDisabled = useDisabled();\n    const isReadonly = useReadonly();\n    const focused = ref(false);\n    const isHover = ref(false);\n    const format = computed(() => calcArrayValue(props.format));\n    const inputProps = computed(() => calcArrayValue(props.inputProps));\n    const placeholder = computed(() => calcArrayValue(props.placeholder));\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const inputValue = computed(() => String((innerValue.value?.[0] || innerValue.value?.[1]) ?? ''));\n\n    const isShowClearIcon = computed(\n      () =>\n        ((props.clearable && inputValue.value?.length && !isDisabled.value) || props.showClearIconOnEmpty) &&\n        isHover.value,\n    );\n\n    const inputRefs = {\n      firstInputRef: ref(),\n      secondInputRef: ref(),\n    };\n\n    function handleClear(context: { e: MouseEvent }) {\n      props.onClear?.(context);\n      setInnerValue(['', ''], { ...context, trigger: 'clear', position: 'all' });\n    }\n\n    function handleEnter(rangeValue: RangeInputValue, context: { e: MouseEvent }) {\n      props.onEnter?.(rangeValue, context);\n    }\n\n    function handleFocus(rangeValue: RangeInputValue, context: { e: MouseEvent }) {\n      focused.value = true;\n      props.onFocus?.(rangeValue, context);\n    }\n\n    function handleBlur(rangeValue: RangeInputValue, context: { e: MouseEvent }) {\n      focused.value = false;\n      props.onBlur?.(rangeValue, context);\n    }\n\n    function handleMouseEnter(e: MouseEvent) {\n      isHover.value = true;\n      props?.onMouseenter?.({ e });\n    }\n\n    function handleMouseLeave(e: MouseEvent) {\n      isHover.value = false;\n      props?.onMouseleave?.({ e });\n    }\n\n    expose({\n      firstInputElement: inputRefs.firstInputRef.value,\n      secondInputElement: inputRefs.secondInputRef.value,\n      focus: (options: any) => {\n        const { position = 'first' } = options || {};\n        inputRefs[`${position as Exclude<RangeInputPosition, 'all'>}InputRef`].value?.focus();\n      },\n      blur: (options: any) => {\n        const { position = 'first' } = options || {};\n        inputRefs[`${position as Exclude<RangeInputPosition, 'all'>}InputRef`].value?.blur();\n      },\n      select: (options: any) => {\n        const { position = 'first' } = options || {};\n        inputRefs[`${position as Exclude<RangeInputPosition, 'all'>}InputRef`].value?.select();\n      },\n    });\n\n    return () => {\n      const labelContent = renderTNodeJSX('label');\n      const prefixIconContent = renderTNodeJSX('prefixIcon');\n      const suffixContent = renderTNodeJSX('suffix');\n      const suffixIconContent = renderTNodeJSX('suffixIcon');\n      const tips = renderTNodeJSX('tips');\n      const separator = renderTNodeJSX('separator');\n\n      const RangeInputContent = (\n        <div\n          {...attrs}\n          class={[\n            COMPONENT_NAME.value,\n            {\n              [SIZE.value[props.size]]: props.size !== 'medium',\n              [STATUS.value.disabled]: isDisabled.value,\n              [STATUS.value.focused]: focused.value,\n              [STATUS.value.success]: props.status === 'success',\n              [STATUS.value.warning]: props.status === 'warning',\n              [STATUS.value.error]: props.status === 'error',\n              [`${COMPONENT_NAME.value}--prefix`]: prefixIconContent || labelContent,\n              [`${COMPONENT_NAME.value}--suffix`]: suffixContent || suffixIconContent,\n              [`${COMPONENT_NAME.value}--borderless`]: props.borderless,\n            },\n          ]}\n          onMouseenter={handleMouseEnter}\n          onMouseleave={handleMouseLeave}\n        >\n          <div class={`${COMPONENT_NAME.value}__inner`}>\n            {prefixIconContent && <div class={`${COMPONENT_NAME.value}__prefix`}>{prefixIconContent}</div>}\n            {labelContent ? <div class={`${COMPONENT_NAME.value}__prefix`}>{labelContent}</div> : null}\n            <Input\n              ref={inputRefs.firstInputRef}\n              class={`${COMPONENT_NAME.value}__inner-left`}\n              inputClass={{\n                [`${classPrefix.value}-is-focused`]: props.activeIndex === 0,\n              }}\n              placeholder={placeholder.value[0]}\n              disabled={isDisabled.value}\n              readonly={isReadonly.value}\n              format={format.value[0]}\n              value={innerValue.value?.[0]}\n              onClick={({ e }: { e: MouseEvent }) => props.onClick?.({ e, position: 'first' })}\n              onClear={() => setInnerValue([], { position: 'first', trigger: 'input' })}\n              onEnter={(val, { e }) =>\n                handleEnter([val, innerValue.value?.[1]], { e, position: 'first' } as {\n                  e: any;\n                  position: RangeInputPosition;\n                })\n              }\n              onFocus={(val, { e }) =>\n                handleFocus([val, innerValue.value?.[1]], { e, position: 'first' } as {\n                  e: any;\n                  position: RangeInputPosition;\n                })\n              }\n              onBlur={(val, { e }) =>\n                handleBlur([val, innerValue.value?.[1]], { e, position: 'first' } as {\n                  e: any;\n                  position: RangeInputPosition;\n                })\n              }\n              onChange={(val, { e }) =>\n                setInnerValue([val, innerValue.value?.[1]], { e, position: 'first', trigger: 'input' })\n              }\n              {...inputProps.value[0]}\n            />\n\n            <div class={`${COMPONENT_NAME.value}__inner-separator`}>{separator}</div>\n\n            <Input\n              ref={inputRefs.secondInputRef}\n              class={`${COMPONENT_NAME.value}__inner-right`}\n              inputClass={{\n                [`${classPrefix.value}-is-focused`]: props.activeIndex === 1,\n              }}\n              placeholder={placeholder.value[1]}\n              disabled={isDisabled.value}\n              readonly={isReadonly.value}\n              format={format.value[1]}\n              value={innerValue.value?.[1]}\n              onClick={({ e }: { e: MouseEvent }) => props.onClick?.({ e, position: 'second' })}\n              onClear={() => setInnerValue([], { position: 'second', trigger: 'input' })}\n              onEnter={(val, { e }) =>\n                handleEnter([innerValue.value?.[0], val], { e, position: 'second' } as {\n                  e: any;\n                  position: RangeInputPosition;\n                })\n              }\n              onFocus={(val, { e }) =>\n                handleFocus([innerValue.value?.[0], val], { e, position: 'second' } as {\n                  e: any;\n                  position: RangeInputPosition;\n                })\n              }\n              onBlur={(val, { e }) =>\n                handleBlur([innerValue.value?.[0], val], { e, position: 'second' } as {\n                  e: any;\n                  position: RangeInputPosition;\n                })\n              }\n              onChange={(val, { e }) =>\n                setInnerValue([innerValue.value?.[0], val], { e, position: 'second', trigger: 'input' })\n              }\n              {...inputProps.value[1]}\n            />\n            {suffixContent ? <div class={`${COMPONENT_NAME.value}__suffix`}>{suffixContent}</div> : null}\n            {(suffixIconContent || isShowClearIcon.value) && (\n              <span class={`${COMPONENT_NAME.value}__suffix ${COMPONENT_NAME.value}__suffix-icon`}>\n                {isShowClearIcon.value ? (\n                  <CloseCircleFilledIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={handleClear} />\n                ) : (\n                  suffixIconContent\n                )}\n              </span>\n            )}\n          </div>\n        </div>\n      );\n\n      const tipsClasses = [\n        `${COMPONENT_NAME.value}__tips`,\n        `${classPrefix.value}-tips`,\n        `${classPrefix.value}-is-${props.status}`,\n      ];\n      return (\n        <Fragment>\n          {RangeInputContent}\n          {tips && <div class={tipsClasses}>{tips}</div>}\n        </Fragment>\n      );\n    };\n  },\n});\n"],"names":["calcArrayValue","value","isArray","defineComponent","name","inheritAttrs","props","setup","expose","_ref","attrs","_toRefs","toRefs","modelValue","_useCommonClassName","useCommonClassName","STATUS","SIZE","classPrefix","usePrefixClass","COMPONENT_NAME","_useGlobalIcon","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","renderTNodeJSX","useTNodeJSX","isDisabled","useDisabled","isReadonly","useReadonly","focused","ref","isHover","format","computed","inputProps","placeholder","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","innerValue","setInnerValue","inputValue","_ref2","_innerValue$value","_innerValue$value2","String","isShowClearIcon","_inputValue$value","clearable","length","showClearIconOnEmpty","inputRefs","firstInputRef","secondInputRef","handleClear","context","_props2$onClear","onClear","_objectSpread","trigger","position","handleEnter","rangeValue","_props2$onEnter","onEnter","handleFocus","_props2$onFocus","onFocus","handleBlur","_props2$onBlur","onBlur","handleMouseEnter","e","_props2$onMouseenter","onMouseenter","handleMouseLeave","_props2$onMouseleave","onMouseleave","firstInputElement","secondInputElement","focus","options","_inputRefs$value","_ref3","_ref3$position","concat","blur","_inputRefs$value2","_ref4","_ref4$position","select","_inputRefs$value3","_ref5","_ref5$position","_innerValue$value3","_innerValue$value8","labelContent","prefixIconContent","suffixContent","suffixIconContent","tips","separator","RangeInputContent","_createVNode","_mergeProps","_defineProperty","size","disabled","success","status","warning","error","borderless","Input","activeIndex","onClick","_ref8","_props2$onClick","val","_ref9","_innerValue$value4","_ref10","_innerValue$value5","_ref11","_innerValue$value6","_ref12","_innerValue$value7","_ref14","_props2$onClick2","_ref15","_innerValue$value9","_ref16","_innerValue$value10","_ref17","_innerValue$value11","_ref18","_innerValue$value12","tipsClasses","_Fragment"],"mappings":"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"}