{"version":3,"file":"tab-nav.mjs","sources":["../../src/tabs/tab-nav.tsx"],"sourcesContent":["import { h, defineComponent, Transition, ref, computed, watch, onMounted, nextTick } from 'vue';\nimport debounce from 'lodash/debounce';\nimport {\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  AddIcon as TdAddIcon,\n} from 'tdesign-icons-vue-next';\nimport { TdTabsProps } from './type';\nimport tabProps from './props';\nimport { calcMaxOffset, calcValidOffset, calculateOffset, calcPrevOrNextOffset } from '../_common/js/tabs/base';\n\n// 子组件\nimport TTabPanel from './tab-panel';\nimport TTabNavItem from './tab-nav-item';\nimport TTabNavBar from './tab-nav-bar';\n\n// hooks\nimport { useResize } from '../hooks/useListener';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport useDragSort from '../hooks/useDragSort';\nimport isFunction from 'lodash/isFunction';\n\nexport default defineComponent({\n  name: 'TTabNav',\n  ...{ resizeObserver: null },\n  props: {\n    theme: tabProps.theme,\n    panels: {\n      type: Array as { new (): Array<InstanceType<typeof TTabPanel>> },\n      default: (): Array<InstanceType<typeof TTabPanel>> => [] as Array<InstanceType<typeof TTabPanel>>,\n    },\n    action: Array,\n    value: tabProps.value,\n    placement: tabProps.placement,\n    scrollPosition: tabProps.scrollPosition,\n    size: tabProps.size,\n    disabled: tabProps.disabled,\n    addable: tabProps.addable,\n    onChange: tabProps.onChange,\n    onAdd: tabProps.onAdd,\n    onRemove: tabProps.onRemove,\n    dragSort: tabProps.dragSort,\n    onDragSort: tabProps.onDragSort,\n  },\n  setup(props) {\n    const componentName = usePrefixClass('tabs');\n    const { ChevronLeftIcon, ChevronRightIcon, AddIcon } = useGlobalIcon({\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      AddIcon: TdAddIcon,\n    });\n    const classPrefix = usePrefixClass();\n\n    const { SIZE } = useCommonClassName();\n\n    const scrollLeft = ref(0);\n\n    // refs\n    const navsContainerRef = ref();\n    const navsWrapRef = ref();\n    const leftOperationsRef = ref();\n    const rightOperationsRef = ref();\n    const toRightBtnRef = ref();\n    const activeTabRef = ref();\n    const maxScrollLeft = ref(0);\n\n    const getRefs = () => ({\n      navsContainer: navsContainerRef.value,\n      navsWrap: navsWrapRef.value,\n      leftOperations: leftOperationsRef.value,\n      rightOperations: rightOperationsRef.value,\n      toRightBtn: toRightBtnRef.value,\n      activeTab: activeTabRef.value,\n    });\n\n    // left right位置 选项卡的位置是在左右侧垂直方向铺开的\n    const isVerticalPlacement = computed(() => ['left', 'right'].includes(props.placement.toLowerCase()));\n\n    // 展示操作按钮\n    const canToLeft = computed(() => scrollLeft.value > 1);\n    const canToRight = computed(() => scrollLeft.value < maxScrollLeft.value - 1);\n\n    // style\n    const wrapTransformStyle = computed(() => {\n      if (isVerticalPlacement.value) return {};\n      return {\n        transform: `translate3d(${-scrollLeft.value}px, 0, 0)`,\n      };\n    });\n    const navsContainerStyle = computed(() => {\n      return props.addable ? { 'min-height': '48px' } : null;\n    });\n\n    // class\n    const iconBaseClass = computed(() => {\n      return {\n        [`${componentName.value}__btn`]: true,\n        [SIZE.value.medium]: props.size === 'medium',\n        [SIZE.value.large]: props.size === 'large',\n      };\n    });\n    const leftIconClass = computed(() => {\n      return {\n        [`${componentName.value}__btn--left`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const rightIconClass = computed(() => {\n      return {\n        [`${componentName.value}__btn--right`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const addIconClass = computed(() => {\n      return {\n        [`${componentName.value}__add-btn`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const navContainerClass = computed(() => {\n      return {\n        [`${componentName.value}__nav-container`]: true,\n        [`${componentName.value}__nav--card`]: props.theme === 'card',\n        [`${classPrefix.value}-is-${props.placement}`]: true,\n        [`${classPrefix.value}-is-addable`]: props.addable,\n      };\n    });\n    const navScrollContainerClass = computed(() => {\n      return {\n        [`${componentName.value}__nav-scroll`]: true,\n        [`${classPrefix.value}-is-scrollable`]: canToLeft.value || canToRight.value,\n      };\n    });\n\n    const navsWrapClass = computed(() => {\n      return [\n        `${componentName.value}__nav-wrap`,\n        `${classPrefix.value}-is-smooth`,\n        { [`${classPrefix.value}-is-vertical`]: isVerticalPlacement.value },\n      ];\n    });\n\n    const setOffset = (offset: number) => {\n      scrollLeft.value = calcValidOffset(offset, maxScrollLeft.value);\n    };\n\n    const handleScroll = (action: 'prev' | 'next') => {\n      setOffset(calcPrevOrNextOffset(getRefs(), scrollLeft.value, action));\n    };\n\n    const handleWheel = (event: WheelEvent) => {\n      if (!canToLeft.value && !canToRight.value) return;\n\n      event.preventDefault();\n      const { deltaX, deltaY } = event;\n\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        setOffset(scrollLeft.value + deltaX);\n      } else {\n        setOffset(scrollLeft.value + deltaY);\n      }\n    };\n\n    const handleActiveTabScroll = () => {\n      setTimeout(() => {\n        setOffset(calculateOffset(getRefs(), scrollLeft.value, props.scrollPosition));\n      }, 0);\n    };\n\n    const getMaxScrollLeft = () => {\n      nextTick(() => {\n        maxScrollLeft.value = calcMaxOffset(getRefs());\n      });\n    };\n\n    // watch\n    watch([() => props.placement, () => props.panels], getMaxScrollLeft);\n    watch([() => props.scrollPosition], handleActiveTabScroll);\n\n    // life times\n    useResize(debounce(getMaxScrollLeft), navsContainerRef.value);\n\n    const handleAddTab = (e: MouseEvent) => {\n      props.onAdd?.({ e });\n    };\n\n    const tabClick = (event: MouseEvent, nav: Partial<InstanceType<typeof TTabPanel>>) => {\n      const { value, disabled } = nav;\n      if (disabled || props.value === value) {\n        return false;\n      }\n      props.onChange(value);\n    };\n    const removeBtnClick = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ e, value, index });\n    };\n    const setActiveTab = (ref: any) => {\n      if (!ref?.$el) return;\n      if (ref?.value === props.value && activeTabRef.value !== ref.$el) {\n        activeTabRef.value = ref.$el;\n        handleActiveTabScroll();\n      }\n    };\n\n    const { setNavsWrap } = useDragSort(props);\n\n    onMounted(() => {\n      setNavsWrap(navsWrapRef.value);\n      getMaxScrollLeft();\n      handleActiveTabScroll();\n    });\n    // renders\n    const renderNavsContent = () => {\n      return props.panels.map((panel, index) => {\n        let label;\n        if (panel?.children?.label) {\n          label = panel.children.label();\n        } else if (isFunction(panel.label)) {\n          label = panel.label(h);\n        } else {\n          label = panel.label || `选项卡${index + 1}`;\n        }\n        let draggable = props.dragSort;\n        if (draggable && panel.draggable === false) {\n          draggable = panel.draggable;\n        }\n        return (\n          <TTabNavItem\n            ref={setActiveTab}\n            draggable={draggable}\n            key={panel.value}\n            index={index}\n            theme={props.theme}\n            size={props.size}\n            placement={props.placement}\n            label={label}\n            active={panel.value === props.value}\n            disabled={props.disabled || panel.disabled}\n            removable={panel.removable}\n            value={panel.value}\n            onClick={(e: MouseEvent) => tabClick(e, panel)}\n            onRemove={removeBtnClick}\n          />\n        );\n      });\n    };\n    const renderArrows = () => {\n      return [\n        <div\n          ref={leftOperationsRef}\n          class={[`${componentName.value}__operations`, `${componentName.value}__operations--left`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToLeft.value ? (\n              <div class={leftIconClass.value} onClick={() => handleScroll('prev')}>\n                <ChevronLeftIcon />\n              </div>\n            ) : null}\n          </Transition>\n        </div>,\n        <div\n          ref={rightOperationsRef}\n          class={[`${componentName.value}__operations`, `${componentName.value}__operations--right`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToRight.value ? (\n              <div ref={toRightBtnRef} class={rightIconClass.value} onClick={() => handleScroll('next')}>\n                <ChevronRightIcon></ChevronRightIcon>\n              </div>\n            ) : null}\n          </Transition>\n          {props.addable ? (\n            <div class={addIconClass.value} onClick={handleAddTab}>\n              <AddIcon></AddIcon>\n            </div>\n          ) : null}\n          {props.action}\n        </div>,\n      ];\n    };\n    const renderNavs = () => {\n      const navContent = renderNavsContent();\n      return (\n        <div class={navContainerClass.value}>\n          <div class={navScrollContainerClass.value} onWheel={handleWheel}>\n            <div ref={navsWrapRef} class={navsWrapClass.value} style={wrapTransformStyle.value}>\n              {props.theme !== 'card' && (\n                <TTabNavBar placement={props.placement} value={props.value} navs={navContent} />\n              )}\n              {navContent}\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      return (\n        <div ref={navsContainerRef} class={[`${componentName.value}__nav`]} style={navsContainerStyle.value}>\n          {renderArrows()}\n          {renderNavs()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","_objectSpread","name","resizeObserver","props","theme","tabProps","panels","type","Array","default","action","value","placement","scrollPosition","size","disabled","addable","onChange","onAdd","onRemove","dragSort","onDragSort","setup","componentName","usePrefixClass","_useGlobalIcon","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","AddIcon","TdAddIcon","classPrefix","_useCommonClassName","useCommonClassName","SIZE","scrollLeft","ref","navsContainerRef","navsWrapRef","leftOperationsRef","rightOperationsRef","toRightBtnRef","activeTabRef","maxScrollLeft","getRefs","navsContainer","navsWrap","leftOperations","rightOperations","toRightBtn","activeTab","isVerticalPlacement","computed","includes","toLowerCase","canToLeft","canToRight","wrapTransformStyle","transform","concat","navsContainerStyle","iconBaseClass","_defineProperty","medium","large","leftIconClass","rightIconClass","addIconClass","navContainerClass","navScrollContainerClass","navsWrapClass","setOffset","offset","calcValidOffset","handleScroll","calcPrevOrNextOffset","handleWheel","event","preventDefault","deltaX","deltaY","Math","abs","handleActiveTabScroll","setTimeout","calculateOffset","getMaxScrollLeft","nextTick","calcMaxOffset","watch","useResize","debounce","handleAddTab","e","_props$onAdd","call","tabClick","nav","removeBtnClick","_ref5","index","setActiveTab","$el","_useDragSort","useDragSort","setNavsWrap","onMounted","renderNavsContent","map","panel","_panel$children","label","children","isFunction","h","draggable","_createVNode","TTabNavItem","removable","onClick","renderArrows","Transition","_default","renderNavs","navContent","TTabNavBar"],"mappings":"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"}