/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

import { t as throttle_1 } from '../../_chunks/dep-525a54df.mjs';
import '../adapt.mjs';
import { reactive } from 'vue';
import '../../_chunks/dep-eca422c3.mjs';
import '../../_chunks/dep-5993931e.mjs';
import '../../_chunks/dep-2b09875b.mjs';
import '../../_chunks/dep-4659d73b.mjs';
import '../../_chunks/dep-cda4f568.mjs';
import '../../_chunks/dep-bf7257e7.mjs';
import '../../_chunks/dep-8dfc9324.mjs';
import '../../_chunks/dep-ab4bb9b8.mjs';
import '../../_chunks/dep-29ef8419.mjs';
import '../../utils/withInstall.mjs';
import '../../hooks/useVModel.mjs';
import '../../_chunks/dep-bad871d5.mjs';
import '../../_chunks/dep-5a17bf21.mjs';
import '../../_chunks/dep-7932c2e8.mjs';
import '../../_chunks/dep-eae2a67e.mjs';
import '../../_chunks/dep-626c497d.mjs';
import '../../hooks/useDefaultValue.mjs';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-5efe53d1.mjs';
import '../../_chunks/dep-593f2b67.mjs';
import '../../_chunks/dep-fa52aa21.mjs';
import '../../_chunks/dep-03a7fb6c.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../hooks/useConfig.mjs';
import '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-06dcbf4c.mjs';
import '../../_chunks/dep-bb899bfd.mjs';
import '../../_chunks/dep-5922c8f3.mjs';
import '../../_chunks/dep-92f86d1d.mjs';
import '../../_chunks/dep-6ab5363f.mjs';
import '../../_chunks/dep-6dc3d0e1.mjs';
import '../../_chunks/dep-76958824.mjs';
import '../../_chunks/dep-e9841b9e.mjs';
import '../../_chunks/dep-1a4bb2f2.mjs';
import '../../_chunks/dep-cc8ebcde.mjs';
import '../../_chunks/dep-f5579c03.mjs';
import '../../_chunks/dep-49aeee3c.mjs';
import '../../_chunks/dep-b5bf85f5.mjs';
import '../../_chunks/dep-3c65fae8.mjs';
import '../../_chunks/dep-ec0bbd9f.mjs';
import '../../_chunks/dep-1b78414a.mjs';
import '../../_chunks/dep-d84f19b3.mjs';
import '../../_chunks/dep-732f0b7d.mjs';
import '../../_chunks/dep-1b9718a2.mjs';
import '../../_chunks/dep-e065dc25.mjs';
import '../../_chunks/dep-400ec705.mjs';
import '../../_chunks/dep-02f9394e.mjs';
import '../../_chunks/dep-1725b1c7.mjs';
import '../../_chunks/dep-532409c5.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-9ed7da3e.mjs';
import '../../_chunks/dep-7f65fc46.mjs';
import '../../_chunks/dep-4f2cabb0.mjs';
import '../../config-provider/type.mjs';
import '../../utils/set-style.mjs';
import '../../hooks/tnode.mjs';
import '../../_chunks/dep-03ad9cda.mjs';
import '../../_chunks/dep-d8a34055.mjs';
import '../../_chunks/dep-2f6e28a0.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-b91a8171.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_common/js/utils/observe.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_common/js/common.mjs';
import '../../hooks/useDisabled.mjs';
import '../../_chunks/dep-df472119.mjs';
import '../../hooks/useReadonly.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-4a990ea3.mjs';
import '../../_chunks/dep-64c2053b.mjs';
import '../../_chunks/dep-4d4e2af1.mjs';
import '../../_chunks/dep-3c4e4325.mjs';
import '../../_chunks/dep-58a62202.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../loading/index.mjs';
import '../../_chunks/dep-bff7e93a.mjs';
import '../../_chunks/dep-0b414bea.mjs';
import '../../_chunks/dep-fbd4eddb.mjs';
import '../../_chunks/dep-ae202bc0.mjs';
import '../../_chunks/dep-aeaef131.mjs';
import '../../_chunks/dep-69e0f6fc.mjs';
import '../../_chunks/dep-ea20409b.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-5d3f7c0e.mjs';
import '../../_chunks/dep-73384992.mjs';
import '../../_chunks/dep-889e457b.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../hooks/useLazyLoad.mjs';
import '../../hooks/useVirtualScrollNew.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../_common/js/tree/tree-node.mjs';
import '../../_chunks/dep-0d047dce.mjs';
import '../../_chunks/dep-f909a041.mjs';
import '../../_chunks/dep-e4a8ef7d.mjs';
import '../../_chunks/dep-d2f4e062.mjs';
import '../../_common/js/tree/tree-node-model.mjs';
import '../../_chunks/dep-88ae49da.mjs';
import '../../_chunks/dep-88c8d9ed.mjs';
import '../../_chunks/dep-4ec29b23.mjs';
import '../../_common/js/log/log.mjs';
import '../../_common/js/log/index.mjs';

var DragPosition = /* @__PURE__ */function (DragPosition2) {
  DragPosition2[DragPosition2["Before"] = -1] = "Before";
  DragPosition2[DragPosition2["Inside"] = 0] = "Inside";
  DragPosition2[DragPosition2["After"] = 1] = "After";
  return DragPosition2;
}(DragPosition || {});
function useDraggable(state) {
  var treeItemRef = state.treeItemRef;
  var dragStates = reactive({
    isDragOver: false,
    isDragging: false,
    dropPosition: 0 /* Inside */
  });
  var updateDropPosition = function updateDropPosition(dragEvent) {
    var _rootNode$getBounding;
    var rootNode = treeItemRef.value;
    if (!rootNode) return;
    var rect = rootNode === null || rootNode === void 0 || (_rootNode$getBounding = rootNode.getBoundingClientRect) === null || _rootNode$getBounding === void 0 ? void 0 : _rootNode$getBounding.call(rootNode);
    var offsetY = window.scrollY + rect.top;
    var pageY = dragEvent.pageY;
    var gapHeight = rect.height / 4;
    var diff = pageY - offsetY;
    if (diff < gapHeight) {
      dragStates.dropPosition = -1 /* Before */;
    } else if (diff < rect.height - gapHeight) {
      dragStates.dropPosition = 0 /* Inside */;
    } else {
      dragStates.dropPosition = 1 /* After */;
    }
  };
  var setDragStatus = function setDragStatus(status, dragEvent) {
    var _drag$handleDragStart, _drag$handleDragEnd, _drag$handleDragOver, _drag$handleDragLeave, _drag$handleDrop;
    var node = state.node,
      treeScope = state.treeScope;
    var drag = treeScope.drag;
    if (!drag) return;
    switch (status) {
      case "dragStart":
        dragStates.isDragging = true;
        dragStates.dropPosition = 0 /* Inside */;
        (_drag$handleDragStart = drag.handleDragStart) === null || _drag$handleDragStart === void 0 || _drag$handleDragStart.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragEnd":
        dragStates.isDragging = false;
        dragStates.isDragOver = false;
        dragStates.dropPosition = 0 /* Inside */;
        throttleUpdateDropPosition.cancel();
        (_drag$handleDragEnd = drag.handleDragEnd) === null || _drag$handleDragEnd === void 0 || _drag$handleDragEnd.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragOver":
        dragStates.isDragOver = true;
        throttleUpdateDropPosition(dragEvent);
        (_drag$handleDragOver = drag.handleDragOver) === null || _drag$handleDragOver === void 0 || _drag$handleDragOver.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "dragLeave":
        dragStates.isDragOver = false;
        dragStates.dropPosition = 0 /* Inside */;
        throttleUpdateDropPosition.cancel();
        (_drag$handleDragLeave = drag.handleDragLeave) === null || _drag$handleDragLeave === void 0 || _drag$handleDragLeave.call(drag, {
          node: node,
          dragEvent: dragEvent
        });
        break;
      case "drop":
        (_drag$handleDrop = drag.handleDrop) === null || _drag$handleDrop === void 0 || _drag$handleDrop.call(drag, {
          node: node,
          dropPosition: dragStates.dropPosition,
          dragEvent: dragEvent
        });
        dragStates.isDragOver = false;
        throttleUpdateDropPosition.cancel();
        break;
      default:
        break;
    }
  };
  var handleDragStart = function handleDragStart(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragStart", evt);
    try {
      var _evt$dataTransfer;
      (_evt$dataTransfer = evt.dataTransfer) === null || _evt$dataTransfer === void 0 || _evt$dataTransfer.setData("text/plain", "");
    } catch (e) {}
  };
  var handleDragEnd = function handleDragEnd(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragEnd", evt);
  };
  var handleDragOver = function handleDragOver(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    evt.preventDefault();
    setDragStatus("dragOver", evt);
  };
  var handleDragLeave = function handleDragLeave(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    setDragStatus("dragLeave", evt);
  };
  var handleDrop = function handleDrop(evt) {
    var node = state.node;
    if (!node.isDraggable()) return;
    evt.stopPropagation();
    evt.preventDefault();
    setDragStatus("drop", evt);
  };
  var throttleUpdateDropPosition = throttle_1(function (dragEvent) {
    updateDropPosition(dragEvent);
  });
  return {
    dragStates: dragStates,
    handleDragStart: handleDragStart,
    handleDragEnd: handleDragEnd,
    handleDragOver: handleDragOver,
    handleDragLeave: handleDragLeave,
    handleDrop: handleDrop
  };
}

export { DragPosition, useDraggable as default };
//# sourceMappingURL=useDraggable.mjs.map
