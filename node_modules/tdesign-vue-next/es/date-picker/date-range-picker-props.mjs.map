{"version":3,"file":"date-range-picker-props.mjs","sources":["../../src/date-picker/date-range-picker-props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDateRangePickerProps } from '../date-picker/type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许输入日期 */\n  allowInput: Boolean,\n  /** 无边框模式 */\n  borderless: Boolean,\n  /** 默认的日期选择交互是根据点击前后日期的顺序来决定并且会加以限制。比如：用户先点击开始时间输入框，选择了一个日期例如2020-05-15，紧接着交互会自动将焦点跳到结束日期输入框，等待用户选择结束时间。此时用户只能选择大于2020-05-15的日期（之前的日期会被灰态禁止点击，限制用户的点击）。当该值传递`true`时，则取消该限制。 */\n  cancelRangeSelectLimit: Boolean,\n  /** 是否显示清除按钮 */\n  clearable: Boolean,\n  /** 时间选择器默认值，当 value/defaultValue 未设置值时有效 */\n  defaultTime: {\n    type: Array as PropType<TdDateRangePickerProps['defaultTime']>,\n    default: (): TdDateRangePickerProps['defaultTime'] => ['00:00:00', '23:59:59'],\n  },\n  /** 禁用日期，示例：['A', 'B'] 表示日期 A 和日期 B 会被禁用。{ from: 'A', to: 'B' } 表示在 A 到 B 之间的日期会被禁用。{ before: 'A', after: 'B' } 表示在 A 之前和在 B 之后的日期都会被禁用。其中 A = '2021-01-01'，B = '2021-02-01'。值类型为 Function 则表示返回值为 true 的日期会被禁用 */\n  disableDate: {\n    type: [Object, Array, Function] as PropType<TdDateRangePickerProps['disableDate']>,\n  },\n  /** 是否禁用组件 */\n  disabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 是否显示时间选择 */\n  enableTimePicker: Boolean,\n  /** 第一天从星期几开始 */\n  firstDayOfWeek: {\n    type: Number,\n    validator(val: TdDateRangePickerProps['firstDayOfWeek']): boolean {\n      if (!val) return true;\n      return [1, 2, 3, 4, 5, 6, 7].includes(val);\n    },\n  },\n  /** 用于格式化日期，[详细文档](https://day.js.org/docs/en/display/format) */\n  format: {\n    type: String,\n    default: '',\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdDateRangePickerProps['label']>,\n  },\n  /** 选择器模式 */\n  mode: {\n    type: String as PropType<TdDateRangePickerProps['mode']>,\n    default: 'date' as TdDateRangePickerProps['mode'],\n    validator(val: TdDateRangePickerProps['mode']): boolean {\n      if (!val) return true;\n      return ['year', 'quarter', 'month', 'week', 'date'].includes(val);\n    },\n  },\n  /** 决定在日期时间区间选择器的场景下是否需要点击确认按钮才完成选择动作，默认为 `true` */\n  needConfirm: {\n    type: Boolean,\n    default: true,\n  },\n  /** 在开始日期选中之前，面板是否显示预选状态，即是否高亮预选日期 */\n  panelPreselection: {\n    type: Boolean,\n    default: true,\n  },\n  /** 占位符，值为数组表示可分别为开始日期和结束日期设置占位符 */\n  placeholder: {\n    type: [String, Array] as PropType<TdDateRangePickerProps['placeholder']>,\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdDateRangePickerProps['popupProps']>,\n  },\n  /** 组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdDateRangePickerProps['prefixIcon']>,\n  },\n  /** 预设快捷日期选择，示例：{ '特定日期范围': ['2021-01-01', '2022-01-01'], '本月': [dayjs().startOf('month'), dayjs().endOf('month')] } */\n  presets: {\n    type: Object as PropType<TdDateRangePickerProps['presets']>,\n  },\n  /** 预设面板展示区域（包含确定按钮） */\n  presetsPlacement: {\n    type: String as PropType<TdDateRangePickerProps['presetsPlacement']>,\n    default: 'bottom' as TdDateRangePickerProps['presetsPlacement'],\n    validator(val: TdDateRangePickerProps['presetsPlacement']): boolean {\n      if (!val) return true;\n      return ['left', 'top', 'right', 'bottom'].includes(val);\n    },\n  },\n  /** 透传给范围输入框 RangeInput 组件的参数 */\n  rangeInputProps: {\n    type: Object as PropType<TdDateRangePickerProps['rangeInputProps']>,\n  },\n  /** 只读状态 */\n  readonly: {\n    type: Boolean,\n    default: undefined,\n  },\n  /** 日期分隔符，支持全局配置，默认为 '-' */\n  separator: {\n    type: String,\n    default: '',\n  },\n  /** 输入框尺寸 */\n  size: {\n    type: String as PropType<TdDateRangePickerProps['size']>,\n    default: 'medium' as TdDateRangePickerProps['size'],\n    validator(val: TdDateRangePickerProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdDateRangePickerProps['status']>,\n    default: 'default' as TdDateRangePickerProps['status'],\n    validator(val: TdDateRangePickerProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdDateRangePickerProps['suffixIcon']>,\n  },\n  /** 透传 TimePicker 组件属性 */\n  timePickerProps: {\n    type: Object as PropType<TdDateRangePickerProps['timePickerProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdDateRangePickerProps['tips']>,\n  },\n  /** 选中值 */\n  value: {\n    type: Array as PropType<TdDateRangePickerProps['value']>,\n    default: undefined as TdDateRangePickerProps['value'],\n  },\n  modelValue: {\n    type: Array as PropType<TdDateRangePickerProps['value']>,\n    default: undefined as TdDateRangePickerProps['value'],\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: Array as PropType<TdDateRangePickerProps['defaultValue']>,\n    default: (): TdDateRangePickerProps['defaultValue'] => [],\n  },\n  /** 用于格式化日期的值，仅支持部分格式，时间戳、日期等。⚠️ `YYYYMMDD` 这种格式不支持，请勿使用，如果希望支持可以给 `dayjs` 提个 PR。注意和 `format` 的区别，`format` 仅用于处理日期在页面中呈现的格式 */\n  valueType: {\n    type: String as PropType<TdDateRangePickerProps['valueType']>,\n    validator(val: TdDateRangePickerProps['valueType']): boolean {\n      if (!val) return true;\n      return [\n        'time-stamp',\n        'Date',\n        'YYYY',\n        'YYYY-MM',\n        'YYYY-MM-DD',\n        'YYYY-MM-DD HH',\n        'YYYY-MM-DD HH:mm',\n        'YYYY-MM-DD HH:mm:ss',\n        'YYYY-MM-DD HH:mm:ss:SSS',\n      ].includes(val);\n    },\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdDateRangePickerProps['onBlur']>,\n  /** 选中值发生变化时触发 */\n  onChange: Function as PropType<TdDateRangePickerProps['onChange']>,\n  /** 如果存在“确定”按钮，则点击“确定”按钮时触发 */\n  onConfirm: Function as PropType<TdDateRangePickerProps['onConfirm']>,\n  /** 输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdDateRangePickerProps['onFocus']>,\n  /** 输入框数据发生变化时触发，参数 input 表示输入内容，value 表示组件当前有效值 */\n  onInput: Function as PropType<TdDateRangePickerProps['onInput']>,\n  /** 选中日期时触发，可能是开始日期，也可能是结束日期，第二个参数可以区分是开始日期或是结束日期 */\n  onPick: Function as PropType<TdDateRangePickerProps['onPick']>,\n  /** 点击预设按钮后触发 */\n  onPresetClick: Function as PropType<TdDateRangePickerProps['onPresetClick']>,\n};\n"],"names":["allowInput","Boolean","borderless","cancelRangeSelectLimit","clearable","defaultTime","type","Array","default","disableDate","Object","Function","disabled","enableTimePicker","firstDayOfWeek","Number","validator","val","includes","format","String","label","mode","needConfirm","panelPreselection","placeholder","popupProps","prefixIcon","presets","presetsPlacement","rangeInputProps","readonly","separator","size","status","suffixIcon","timePickerProps","tips","value","modelValue","defaultValue","valueType","onBlur","onChange","onConfirm","onFocus","onInput","onPick","onPresetClick"],"mappings":"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"}