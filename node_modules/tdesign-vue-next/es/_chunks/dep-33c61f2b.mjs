/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

import './dep-eca422c3.mjs';
import { _ as _baseDifference } from './dep-6a7115de.mjs';
import { a as _baseFlatten } from './dep-4ec29b23.mjs';
import { _ as _baseRest, i as isArrayLikeObject_1 } from './dep-e065dc25.mjs';

var baseDifference = _baseDifference,
  baseFlatten = _baseFlatten,
  baseRest = _baseRest,
  isArrayLikeObject = isArrayLikeObject_1;

/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = baseRest(function (array, values) {
  return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
});
var difference_1 = difference;

export { difference_1 as d };
//# sourceMappingURL=dep-33c61f2b.mjs.map
