import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    ellipsis: {
        type: import("vue").PropType<boolean | import("./type").TypographyEllipsis>;
        default: boolean | import("./type").TypographyEllipsis;
    };
    level: {
        type: import("vue").PropType<"h1" | "h2" | "h3" | "h4" | "h5" | "h6">;
        default: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
        validator(val: "h1" | "h2" | "h3" | "h4" | "h5" | "h6"): boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    ellipsis: {
        type: import("vue").PropType<boolean | import("./type").TypographyEllipsis>;
        default: boolean | import("./type").TypographyEllipsis;
    };
    level: {
        type: import("vue").PropType<"h1" | "h2" | "h3" | "h4" | "h5" | "h6">;
        default: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
        validator(val: "h1" | "h2" | "h3" | "h4" | "h5" | "h6"): boolean;
    };
}>>, {
    ellipsis: boolean | import("./type").TypographyEllipsis;
    level: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
}, {}>;
export default _default;
