/**
 * tdesign v1.10.5
 * (c) 2024 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../_chunks/dep-5efe53d1.mjs';
import { _ as _defineProperty } from '../_chunks/dep-fa52aa21.mjs';
import { defineComponent, ref, toRefs, computed, watch, createVNode, mergeProps } from 'vue';
import { d as dayjs } from '../_chunks/dep-7f65fc46.mjs';
import { c as customParseFormat } from '../_chunks/dep-b36eaefe.mjs';
import { TimeIcon } from 'tdesign-icons-vue-next';
import _TimePickerPanel from './panel/time-picker-panel.mjs';
import { SelectInput } from '../select-input/index.mjs';
import { validateInputValue, formatInputValue } from '../_common/js/time-picker/utils.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import props from './props.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { useDisabled } from '../hooks/useDisabled.mjs';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import { useReadonly } from '../hooks/useReadonly.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import '../_chunks/dep-593f2b67.mjs';
import '../_chunks/dep-4659d73b.mjs';
import '../_chunks/dep-eca422c3.mjs';
import '../_chunks/dep-58a62202.mjs';
import '../_common/js/time-picker/const.mjs';
import './panel/props.mjs';
import '../_chunks/dep-df472119.mjs';
import '../_chunks/dep-bf7257e7.mjs';
import '../_chunks/dep-29ef8419.mjs';
import './panel/single-panel.mjs';
import '../_chunks/dep-5993931e.mjs';
import '../_chunks/dep-2b09875b.mjs';
import '../_chunks/dep-cda4f568.mjs';
import '../_chunks/dep-8dfc9324.mjs';
import '../_chunks/dep-ab4bb9b8.mjs';
import '../_chunks/dep-532409c5.mjs';
import '../_chunks/dep-e9841b9e.mjs';
import '../_chunks/dep-cc8ebcde.mjs';
import '../_chunks/dep-06dcbf4c.mjs';
import '../_chunks/dep-76958824.mjs';
import '../_chunks/dep-ec0bbd9f.mjs';
import '../_chunks/dep-7af61576.mjs';
import '../_chunks/dep-7932c2e8.mjs';
import '../_chunks/dep-eae2a67e.mjs';
import '../_chunks/dep-626c497d.mjs';
import '../_chunks/dep-d8a34055.mjs';
import '../_chunks/dep-2f6e28a0.mjs';
import '../_chunks/dep-ea20409b.mjs';
import '../button/button.mjs';
import '../_chunks/dep-4a990ea3.mjs';
import '../loading/index.mjs';
import '../_chunks/dep-bff7e93a.mjs';
import '../_chunks/dep-49aeee3c.mjs';
import '../_chunks/dep-b5bf85f5.mjs';
import '../_chunks/dep-6dc3d0e1.mjs';
import '../_chunks/dep-1b9718a2.mjs';
import '../_chunks/dep-92f86d1d.mjs';
import '../_chunks/dep-6ab5363f.mjs';
import '../_chunks/dep-1a4bb2f2.mjs';
import '../_chunks/dep-f5579c03.mjs';
import '../_chunks/dep-3c65fae8.mjs';
import '../_chunks/dep-e065dc25.mjs';
import '../_chunks/dep-400ec705.mjs';
import '../_chunks/dep-02f9394e.mjs';
import '../_chunks/dep-1725b1c7.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-9ed7da3e.mjs';
import '../_chunks/dep-4f2cabb0.mjs';
import '../_chunks/dep-5922c8f3.mjs';
import '../_chunks/dep-1b78414a.mjs';
import '../_chunks/dep-d84f19b3.mjs';
import '../_chunks/dep-732f0b7d.mjs';
import '../_chunks/dep-0b414bea.mjs';
import '../_chunks/dep-4d4e2af1.mjs';
import '../_chunks/dep-fbd4eddb.mjs';
import '../_chunks/dep-ae202bc0.mjs';
import '../_chunks/dep-aeaef131.mjs';
import '../_chunks/dep-69e0f6fc.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-5d3f7c0e.mjs';
import '../_chunks/dep-03a7fb6c.mjs';
import '../_chunks/dep-73384992.mjs';
import '../_chunks/dep-889e457b.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-b91a8171.mjs';
import '../_chunks/dep-03ad9cda.mjs';
import '../_chunks/dep-5a17bf21.mjs';
import '../_chunks/dep-bad871d5.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../_chunks/dep-bb899bfd.mjs';
import '../config-provider/type.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';
import '../button/props.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../utils/set-style.mjs';
import '../_common/js/log/index.mjs';
import '../_common/js/log/log.mjs';
import '../select-input/select-input.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_common/js/upload/utils.mjs';
import '../popup/container.mjs';
import '../popup/props.mjs';
import '../hooks/useResizeObserver.mjs';
import '../popup/type.mjs';
import '../select-input/props.mjs';
import '../select-input/useSingle.mjs';
import '../_chunks/dep-4de7e2ca.mjs';
import '../_chunks/dep-0e581ac0.mjs';
import '../_chunks/dep-4ec29b23.mjs';
import '../input/index.mjs';
import '../input/input.mjs';
import '../input/props.mjs';
import '../input/useInput.mjs';
import '../form/const.mjs';
import '../input/useLengthLimit.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../input/input-group.mjs';
import '../input/input-group-props.mjs';
import '../input/type.mjs';
import '../select-input/useMultiple.mjs';
import '../tag-input/index.mjs';
import '../tag-input/tag-input.mjs';
import '../tag-input/props.mjs';
import '../tag-input/hooks/useTagScroll.mjs';
import '../tag-input/useTagList.mjs';
import '../tag/index.mjs';
import '../tag/tag.mjs';
import '../_chunks/dep-9ac991f3.mjs';
import '../tag/props.mjs';
import '../tag/check-tag.mjs';
import '../tag/check-tag-props.mjs';
import '../_common/js/common.mjs';
import '../tag/check-tag-group.mjs';
import '../tag/check-tag-group-props.mjs';
import '../tag/type.mjs';
import '../tag-input/hooks/useHover.mjs';
import '../tag-input/hooks/useDragSorter.mjs';
import '../tag-input/type.mjs';
import '../select-input/useOverlayInnerStyle.mjs';
import '../select-input/type.mjs';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
dayjs.extend(customParseFormat);
var _TimePicker = defineComponent({
  name: "TTimePicker",
  props: _objectSpread({}, props),
  setup: function setup(props2) {
    var renderTNodeJSX = useTNodeJSX();
    var _useConfig = useConfig("timePicker"),
      globalConfig = _useConfig.globalConfig;
    var COMPONENT_NAME = usePrefixClass("time-picker");
    var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var _useGlobalIcon = useGlobalIcon({
        TimeIcon: TimeIcon
      }),
      TimeIcon$1 = _useGlobalIcon.TimeIcon;
    var currentValue = ref("");
    var isShowPanel = ref(false);
    var isReadonly = useReadonly();
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var disabled = useDisabled();
    var _toRefs2 = toRefs(props2),
      allowInput = _toRefs2.allowInput,
      format = _toRefs2.format;
    var inputClasses = computed(function () {
      return ["".concat(COMPONENT_NAME.value, "__group"), _defineProperty({}, STATUS.value.focused, isShowPanel.value)];
    });
    var handleShowPopup = function handleShowPopup(visible, context) {
      var _props2$onOpen, _props2$onClose;
      isShowPanel.value = visible;
      visible ? (_props2$onOpen = props2.onOpen) === null || _props2$onOpen === void 0 ? void 0 : _props2$onOpen.call(props2, context) : (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 ? void 0 : _props2$onClose.call(props2, context);
    };
    var handleClear = function handleClear(context) {
      var e = context.e;
      e.stopPropagation();
      currentValue.value = null;
      setInnerValue(null);
    };
    var handleInputChange = function handleInputChange(value2) {
      currentValue.value = value2;
    };
    var handleInputBlur = function handleInputBlur(value2, context) {
      var _props2$onBlur;
      if (allowInput.value) {
        var isValidTime = validateInputValue(currentValue.value, format.value);
        if (isValidTime) {
          setInnerValue(formatInputValue(currentValue.value, format.value));
        }
      }
      (_props2$onBlur = props2.onBlur) === null || _props2$onBlur === void 0 || _props2$onBlur.call(props2, {
        value: value2,
        inputValue: context.inputValue,
        e: context.e
      });
    };
    var handleClickConfirm = function handleClickConfirm() {
      var isValidTime = validateInputValue(currentValue.value, format.value);
      if (isValidTime) setInnerValue(currentValue.value);
      isShowPanel.value = false;
    };
    var handlePanelChange = function handlePanelChange(v, e) {
      var _props2$onPick;
      currentValue.value = v;
      (_props2$onPick = props2.onPick) === null || _props2$onPick === void 0 || _props2$onPick.call(props2, v, {
        e: e
      });
    };
    var valueDisplayParams = computed(function () {
      var _innerValue$value;
      return {
        value: isShowPanel.value ? currentValue.value : (_innerValue$value = innerValue.value) !== null && _innerValue$value !== void 0 ? _innerValue$value : void 0
      };
    });
    watch(function () {
      return isShowPanel.value;
    }, function () {
      var _innerValue$value2;
      currentValue.value = isShowPanel.value ? (_innerValue$value2 = innerValue.value) !== null && _innerValue$value2 !== void 0 ? _innerValue$value2 : "" : "";
    });
    return function () {
      var _innerValue$value3, _innerValue$value4;
      return createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [createVNode(SelectInput, mergeProps({
        "onFocus": props2.onFocus,
        "onClear": handleClear,
        "borderless": props2.borderless,
        "disabled": disabled.value,
        "clearable": props2.clearable,
        "allowInput": allowInput.value,
        "class": inputClasses.value,
        "label": props2.label,
        "suffixIcon": function suffixIcon() {
          return createVNode(TimeIcon$1, null, null);
        },
        "popupVisible": !isReadonly.value && isShowPanel.value,
        "onInputChange": handleInputChange,
        "onBlur": handleInputBlur,
        "onPopupVisibleChange": handleShowPopup,
        "placeholder": !innerValue.value ? props2.placeholder || globalConfig.value.placeholder : void 0,
        "value": isShowPanel.value ? currentValue.value : (_innerValue$value3 = innerValue.value) !== null && _innerValue$value3 !== void 0 ? _innerValue$value3 : void 0,
        "inputValue": isShowPanel.value ? currentValue.value : (_innerValue$value4 = innerValue.value) !== null && _innerValue$value4 !== void 0 ? _innerValue$value4 : void 0,
        "inputProps": _objectSpread(_objectSpread({}, props2.inputProps), {}, {
          size: props2.size
        }),
        "popupProps": _objectSpread({
          overlayInnerStyle: {
            width: "auto",
            padding: 0
          }
        }, props2.popupProps),
        "status": props2.status,
        "tips": props2.tips,
        "valueDisplay": function valueDisplay() {
          return renderTNodeJSX("valueDisplay", {
            params: valueDisplayParams.value
          });
        }
      }, props2.selectInputProps, {
        "panel": function panel() {
          return createVNode(_TimePickerPanel, {
            "steps": props2.steps,
            "format": format.value,
            "value": currentValue.value,
            "isFooterDisplay": true,
            "isShowPanel": isShowPanel.value,
            "disableTime": props2.disableTime,
            "onChange": handlePanelChange,
            "hideDisabledTime": props2.hideDisabledTime,
            "handleConfirmClick": handleClickConfirm,
            "presets": props2.presets
          }, null);
        }
      }), null)]);
    };
  }
});

export { _TimePicker as default };
//# sourceMappingURL=time-picker.mjs.map
