import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    action: {
        type: import("vue").PropType<(h: typeof h) => import("..").SlotReturnValue>;
    };
    description: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue) | import("../image").TdImageProps>;
    };
    imageStyle: {
        type: import("vue").PropType<import("..").Styles>;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    type: {
        type: import("vue").PropType<"success" | "fail" | "empty" | "network-error" | "maintenance">;
        default: "success" | "fail" | "empty" | "network-error" | "maintenance";
        validator(val: "success" | "fail" | "empty" | "network-error" | "maintenance"): boolean;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    action: {
        type: import("vue").PropType<(h: typeof h) => import("..").SlotReturnValue>;
    };
    description: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    image: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue) | import("../image").TdImageProps>;
    };
    imageStyle: {
        type: import("vue").PropType<import("..").Styles>;
    };
    size: {
        type: import("vue").PropType<import("..").SizeEnum>;
        default: import("..").SizeEnum;
        validator(val: import("..").SizeEnum): boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof h) => import("..").SlotReturnValue)>;
    };
    type: {
        type: import("vue").PropType<"success" | "fail" | "empty" | "network-error" | "maintenance">;
        default: "success" | "fail" | "empty" | "network-error" | "maintenance";
        validator(val: "success" | "fail" | "empty" | "network-error" | "maintenance"): boolean;
    };
}>>, {
    type: "success" | "fail" | "empty" | "network-error" | "maintenance";
    size: import("..").SizeEnum;
}, {}>;
export default _default;
